<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ll__afh_8c" kind="file" language="C++">
    <compoundname>ll_afh.c</compoundname>
    <includes refid="link__layer_8h" local="yes">ble/link_layer.h</includes>
    <includes local="yes">ble/ll_config.h</includes>
    <includes local="yes">misc_interface.h</includes>
    <includes local="yes">btcontroller_util.h</includes>
    <includes local="yes">common/debug.h</includes>
    <incdepgraph>
      <node id="3036">
        <label>os/os_type.h</label>
      </node>
      <node id="3032">
        <label>common/atomic.h</label>
      </node>
      <node id="3046">
        <label>common/lbuf.h</label>
      </node>
      <node id="3029">
        <label>common/list.h</label>
      </node>
      <node id="3035">
        <label>common/thread.h</label>
      </node>
      <node id="3038">
        <label>ble/ll_adv.h</label>
        <link refid="ll__adv_8h"/>
        <childnode refid="3030" relation="include">
        </childnode>
      </node>
      <node id="3054">
        <label>common/debug.h</label>
      </node>
      <node id="3053">
        <label>btcontroller_util.h</label>
      </node>
      <node id="3040">
        <label>ble/ll_init.h</label>
        <link refid="ll__init_8h"/>
        <childnode refid="3030" relation="include">
        </childnode>
      </node>
      <node id="3042">
        <label>data_extension.h</label>
        <link refid="data__extension_8h"/>
        <childnode refid="3028" relation="include">
        </childnode>
      </node>
      <node id="3045">
        <label>ble/ll_iso.h</label>
        <link refid="ll__iso_8h"/>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3046" relation="include">
        </childnode>
        <childnode refid="3035" relation="include">
        </childnode>
      </node>
      <node id="3028">
        <label>typedef.h</label>
      </node>
      <node id="3034">
        <label>white_list.h</label>
        <link refid="white__list_8h"/>
        <childnode refid="3028" relation="include">
        </childnode>
      </node>
      <node id="3048">
        <label>audio_codec.h</label>
        <link refid="audio__codec_8h"/>
        <childnode refid="3033" relation="include">
        </childnode>
      </node>
      <node id="3039">
        <label>ble/ll_scan.h</label>
        <link refid="ll__scan_8h"/>
        <childnode refid="3030" relation="include">
        </childnode>
      </node>
      <node id="3037">
        <label>ble/llcp.h</label>
        <link refid="llcp_8h"/>
        <childnode refid="3028" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
      </node>
      <node id="3043">
        <label>multiple_phys.h</label>
        <link refid="multiple__phys_8h"/>
        <childnode refid="3028" relation="include">
        </childnode>
      </node>
      <node id="3041">
        <label>resolve_list.h</label>
        <link refid="resolve__list_8h"/>
        <childnode refid="3028" relation="include">
        </childnode>
      </node>
      <node id="3030">
        <label>ble_interface.h</label>
      </node>
      <node id="3044">
        <label>ble/ll_cte.h</label>
        <link refid="ll__cte_8h"/>
        <childnode refid="3033" relation="include">
        </childnode>
      </node>
      <node id="3031">
        <label>common/sys_timer.h</label>
      </node>
      <node id="3051">
        <label>ble/ll_config.h</label>
      </node>
      <node id="3027">
        <label>ble/link_layer.h</label>
        <link refid="link__layer_8h"/>
        <childnode refid="3028" relation="include">
        </childnode>
        <childnode refid="3029" relation="include">
        </childnode>
        <childnode refid="3030" relation="include">
        </childnode>
        <childnode refid="3031" relation="include">
        </childnode>
        <childnode refid="3032" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3034" relation="include">
        </childnode>
        <childnode refid="3035" relation="include">
        </childnode>
        <childnode refid="3036" relation="include">
        </childnode>
        <childnode refid="3037" relation="include">
        </childnode>
        <childnode refid="3038" relation="include">
        </childnode>
        <childnode refid="3039" relation="include">
        </childnode>
        <childnode refid="3040" relation="include">
        </childnode>
        <childnode refid="3041" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
        <childnode refid="3043" relation="include">
        </childnode>
        <childnode refid="3044" relation="include">
        </childnode>
        <childnode refid="3045" relation="include">
        </childnode>
        <childnode refid="3047" relation="include">
        </childnode>
        <childnode refid="3049" relation="include">
        </childnode>
        <childnode refid="3050" relation="include">
        </childnode>
      </node>
      <node id="3033">
        <label>ll_defines.h</label>
        <link refid="ll__defines_8h"/>
        <childnode refid="3028" relation="include">
        </childnode>
      </node>
      <node id="3049">
        <label>ble/ll_cis.h</label>
        <link refid="ll__cis_8h"/>
        <childnode refid="3045" relation="include">
        </childnode>
        <childnode refid="3027" relation="include">
        </childnode>
      </node>
      <node id="3047">
        <label>ble/ll_bis.h</label>
        <link refid="ll__bis_8h"/>
        <childnode refid="3045" relation="include">
        </childnode>
        <childnode refid="3048" relation="include">
        </childnode>
      </node>
      <node id="3050">
        <label>ble/ll_pc.h</label>
        <link refid="ll__pc_8h"/>
        <childnode refid="3033" relation="include">
        </childnode>
      </node>
      <node id="3026">
        <label>/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c</label>
        <link refid="ll_afh.c"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3051" relation="include">
        </childnode>
        <childnode refid="3052" relation="include">
        </childnode>
        <childnode refid="3053" relation="include">
        </childnode>
        <childnode refid="3054" relation="include">
        </childnode>
      </node>
      <node id="3052">
        <label>misc_interface.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct__channel__quality" prot="public">_channel_quality</innerclass>
    <innerclass refid="struct__input__info" prot="public">_input_info</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="ll__afh_8c_1a6c6991cba0e2995d7d9aec73e0324317" prot="public" static="no">
        <name>LOG_TAG_CONST</name>
        <initializer>LL_AFH</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="13" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1a7ce0df38eb467e59f209470c8f5ac4e6" prot="public" static="no">
        <name>LOG_TAG</name>
        <initializer>STR(<ref refid="tws__ll__scan_8c_1a6c6991cba0e2995d7d9aec73e0324317" kindref="member">LOG_TAG_CONST</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="14" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1a9eeb6e067100d0dec6e53bce19a403e0" prot="public" static="no">
        <name>LOG_ERROR_ENABLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="16" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1a69321c8a2a0b07a07fb5088e82e25eb0" prot="public" static="no">
        <name>LOG_INFO_ENABLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="17" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1a04135f631fe91199f05b1d816dda8756" prot="public" static="no">
        <name>LOG_DUMP_ENABLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="18" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1a4393d7b6ecdd9f3371e031e9d40a0335" prot="public" static="no">
        <name>AFH_ASSERT</name>
        <param><defname>x</defname></param>
        <param><defname>...</defname></param>
        <initializer>if (LOG_IS_ENABLE(LOG_ERROR)) \
        ASSERT(x, ## __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="23" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1a8cd87cc10b493870de19dfdd19b7926f" prot="public" static="no">
        <name>afh_debug</name>
        <param><defname>x</defname></param>
        <param><defname>...</defname></param>
        <initializer>if (LOG_IS_ENABLE(LOG_DEBUG)) \
        <ref refid="ll__afh_8c_1a2a1dae14f53000ee232bb3203df0b605" kindref="member">afh_printf</ref>(x, ## __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="33" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1a4b9b4e8fafec544e465d90bcd9c781d2" prot="public" static="no">
        <name>afh_warn</name>
        <param><defname>x</defname></param>
        <param><defname>...</defname></param>
        <initializer>if (LOG_IS_ENABLE(LOG_WARN)) \
        <ref refid="ll__afh_8c_1a2a1dae14f53000ee232bb3203df0b605" kindref="member">afh_printf</ref>(x, ## __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="37" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1ad223350d80db21fa8b721107cd1f6442" prot="public" static="no">
        <name>__this</name>
        <initializer>(&amp;<ref refid="link__layer_8h_1a11d5b1c8b0def0c238d4700650780724" kindref="member">ll_hdl</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="44" column="10" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1a840303a8f70faabd6401b93ada563edc" prot="public" static="no">
        <name>AMPLIFICATION_FACTOR</name>
        <initializer>1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="51" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1a1d2f6b12269b5b4607a6c1cff59c9fd9" prot="public" static="no">
        <name>CHANNEL_EFFECT_TIMES</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="52" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1ac333c8b9f6812639598cceca38afd6b8" prot="public" static="no">
        <name>MIN_ONLINE_CHANNEL_NUMS</name>
        <initializer>13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="53" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1afd8aa7348f59062de78e681b2caaf048" prot="public" static="no">
        <name>MAX_ONLINE_CHANNEL_NUMS</name>
        <initializer>(<ref refid="ll__afh_8c_1ac333c8b9f6812639598cceca38afd6b8" kindref="member">MIN_ONLINE_CHANNEL_NUMS</ref> + 5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="54" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1a686a991566cf9905efda47511234bf61" prot="public" static="no">
        <name>MIN_RETRY_NUMS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="55" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1ade3e9e99eef1d7792d837a8044279dec" prot="public" static="no">
        <name>MAX_RETRY_NUMS</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="56" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1a40d32b2f9e1ab4f99988c56bedc35001" prot="public" static="no">
        <name>UPDATE_PERIOD_PROBABLY</name>
        <initializer>7000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="57" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1aa14a65955e759e3dbe7c2ee83be83113" prot="public" static="no">
        <name>AFH_ALGORITHM_WAY</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="58" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1a7f622febfac431b0a2c967b85201e5c2" prot="public" static="no">
        <name>GET_BYTE</name>
        <param><defname>x</defname></param>
        <initializer>(x &gt;&gt; 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="60" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1ab6115ef10c1f915c8c47e95361e5419d" prot="public" static="no">
        <name>GET_BIT</name>
        <param><defname>x</defname></param>
        <initializer>(x &amp; 0x07)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="61" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1ae221b86652338bea5dc2c70f979f3a74" prot="public" static="no">
        <name>CONN_INTERVAL_MS</name>
        <param><defname>x</defname></param>
        <initializer>(x * 5 / 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="62" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1a4260224e301c33c285aa639e9c6e96ca" prot="public" static="no">
        <name>DATA_CHANNEL_NUMS</name>
        <initializer>37</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="63" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1aa850c6877eabe7895647653ba4c00b97" prot="public" static="no">
        <name>CHANNEL_MAP_OCTETS</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="64" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1a5176b8881ebc22196ad2e493767ba616" prot="public" static="no">
        <name>CHANNEL_ID</name>
        <param><defname>x</defname></param>
        <initializer>((struct <ref refid="struct__channel__quality" kindref="compound">_channel_quality</ref> *)x - <ref refid="ll__afh_8c_1a15a8b766c3203d4df6ad1a8830012592" kindref="member">channel_quality</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="65" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1a2938837cf16a8e208ee2d6adb946fb78" prot="public" static="no">
        <name>MEMBER_IS_ALONE</name>
        <param><defname>x</defname></param>
        <initializer>((x-&gt;entry.next == &amp;x-&gt;entry) || (x-&gt;entry.next == NULL))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="66" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1a066a2fc24e8383fdf5c15b9958f2911e" prot="public" static="no">
        <name>U8_MAX_LIMIT</name>
        <initializer>((2 &lt;&lt; 7) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="69" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1a1e5d0d356c54a8d50edae78818e843a1" prot="public" static="no">
        <name>U12_MAX_LIMIT</name>
        <initializer>((2 &lt;&lt; 11) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="70" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1a1b044af29c292cdca091c887e288be14" prot="public" static="no">
        <name>U16_MAX_LIMIT</name>
        <initializer>((2 &lt;&lt; 15) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="71" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1a88d3166cbec3b976d05b1c22ed4a4386" prot="public" static="no">
        <name>U24_MAX_LIMIT</name>
        <initializer>((2 &lt;&lt; 23) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="72" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1ab72cdee251f9107b020c634646c87d1b" prot="public" static="no">
        <name>S16_MIN_LIMIT</name>
        <initializer>(-(2 &lt;&lt; 14))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="73" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1a1790cf8e7506da554bc1acab1d011cd2" prot="public" static="no">
        <name>S16_MAX_LIMIT</name>
        <initializer>((2 &lt;&lt; 14) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="74" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1ae0fff37180cb2ff37aca07680deff1b8" prot="public" static="no">
        <name>REDUCE_ONLINE_NUMS</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="119" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__afh_8c_1a917dd585688a7a581dd2e0f7522418f7" prot="public" static="no">
        <name>CUR_INTERVAL_EFFECT_TIMES</name>
        <param><defname>x</defname></param>
        <initializer>(<ref refid="ll__afh_8c_1a40d32b2f9e1ab4f99988c56bedc35001" kindref="member">UPDATE_PERIOD_PROBABLY</ref> / (<ref refid="ll__afh_8c_1a5ce136352acda1caad8bb096e6691763" kindref="member">new_online_channels_nums</ref> * <ref refid="ll__afh_8c_1ae221b86652338bea5dc2c70f979f3a74" kindref="member">CONN_INTERVAL_MS</ref>(x)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="120" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="ll__afh_8c_1a06fc87d81c62e9abb8790b6e5713c55b" prot="public" static="no">
        <name>@0</name>
        <enumvalue id="ll__afh_8c_1a06fc87d81c62e9abb8790b6e5713c55baf602a728c42b93395d40e86a5cbb084f" prot="public">
          <name>AFH_INPUT_READY</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ll__afh_8c_1a06fc87d81c62e9abb8790b6e5713c55baf9864f4fe690c6b9e5b5fc9b21af97e1" prot="public">
          <name>AFH_OUTPUT_START</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ll__afh_8c_1a06fc87d81c62e9abb8790b6e5713c55ba4036caebdb09384210a115a457bed89d" prot="public">
          <name>AFH_OUTPUT_CONTINUE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ll__afh_8c_1a06fc87d81c62e9abb8790b6e5713c55ba484b4cfe1983bd13dc6b6c52d56fde44" prot="public">
          <name>AFH_OUTPUT_COMPLETE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="76" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="76" bodyend="82"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ll__afh_8c_1a5ce136352acda1caad8bb096e6691763" prot="public" static="yes" mutable="no">
        <type>u8</type>
        <definition>u8 new_online_channels_nums</definition>
        <argsstring></argsstring>
        <name>new_online_channels_nums</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="103" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ll__afh_8c_1a49b19c98f399665e878f43d2bc9113e8" prot="public" static="yes" mutable="no">
        <type>u8</type>
        <definition>u8 new_channel_map[CHANNEL_MAP_OCTETS]</definition>
        <argsstring>[CHANNEL_MAP_OCTETS]</argsstring>
        <name>new_channel_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="104" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ll__afh_8c_1a5f6af41985bd2c2362e1b6a9f87f0e03" prot="public" static="yes" mutable="no">
        <type>struct list_head</type>
        <definition>struct list_head bad_ch_list_head</definition>
        <argsstring></argsstring>
        <name>bad_ch_list_head</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="104" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ll__afh_8c_1a15a8b766c3203d4df6ad1a8830012592" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="struct__channel__quality" kindref="compound">_channel_quality</ref></type>
        <definition>struct _channel_quality channel_quality[DATA_CHANNEL_NUMS]</definition>
        <argsstring>[DATA_CHANNEL_NUMS]</argsstring>
        <name>channel_quality</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="104" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ll__afh_8c_1a3421f3ca17315f03e7508eea1ac1997f" prot="public" static="yes" mutable="no">
        <type>atomic_t</type>
        <definition>atomic_t afh_pend</definition>
        <argsstring></argsstring>
        <name>afh_pend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="107" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ll__afh_8c_1a0fb82cdfc5ceabd7e6d62df51f99d55e" prot="public" static="yes" mutable="no">
        <type>u8</type>
        <definition>u8 complete_sample_nums</definition>
        <argsstring></argsstring>
        <name>complete_sample_nums</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="123" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ll__afh_8c_1a4c056244bd921f5b64456a88dfa4299a" prot="public" static="yes" mutable="no">
        <type>struct list_head</type>
        <definition>struct list_head good_ch_list_head</definition>
        <argsstring></argsstring>
        <name>good_ch_list_head</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="123" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ll__afh_8c_1a78f9c4ff53ebae016be64715daf1e099" prot="public" static="yes" mutable="no">
        <type>u8</type>
        <definition>u8 pre_channel_effect_times</definition>
        <argsstring></argsstring>
        <name>pre_channel_effect_times</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="125" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ll__afh_8c_1a761bf9755363e31d668226a9c9ca1972" prot="public" static="no" mutable="no">
        <type>const u8</type>
        <definition>const u8 first_used_channels[]</definition>
        <argsstring>[]</argsstring>
        <name>first_used_channels</name>
        <initializer>= {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="130" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="130" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ll__afh_8c_1a5e860aba8294c0865bab74c72ce3a8b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8</type>
        <definition>u8 le_channel_map_update</definition>
        <argsstring>(const struct host_channel_classification *param)</argsstring>
        <name>le_channel_map_update</name>
        <param>
          <type>const struct <ref refid="structhost__channel__classification" kindref="compound">host_channel_classification</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ll__afh_8c_1a2a1dae14f53000ee232bb3203df0b605" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int afh_printf</definition>
        <argsstring>(const char *format,...)</argsstring>
        <name>afh_printf</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="132" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="132" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="ll__afh_8c_1ad9393ac1815b46780df3fc94e7cf0ec1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void channle_weight_sort</definition>
        <argsstring>(struct _channel_quality *member, struct list_head *head)</argsstring>
        <name>channle_weight_sort</name>
        <param>
          <type>struct <ref refid="struct__channel__quality" kindref="compound">_channel_quality</ref> *</type>
          <declname>member</declname>
        </param>
        <param>
          <type>struct list_head *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="217" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="217" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="ll__afh_8c_1ad507bf4ca22fda726e0a57ff2b6a89ad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void channle_average_weight_sort</definition>
        <argsstring>(struct _channel_quality *member, struct list_head *head)</argsstring>
        <name>channle_average_weight_sort</name>
        <param>
          <type>struct <ref refid="struct__channel__quality" kindref="compound">_channel_quality</ref> *</type>
          <declname>member</declname>
        </param>
        <param>
          <type>struct list_head *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="234" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="234" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="ll__afh_8c_1a65db42b248368da0bf94942d3bcc5bcb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void AFH_info_init</definition>
        <argsstring>(struct ble_conn_param *conn_param)</argsstring>
        <name>AFH_info_init</name>
        <param>
          <type>struct ble_conn_param *</type>
          <declname>conn_param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="253" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="253" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="ll__afh_8c_1a9d3ab867025491e3f202eec06fde85a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool algorithm_of_weight</definition>
        <argsstring>(struct le_link *link, struct _channel_quality *current_channel)</argsstring>
        <name>algorithm_of_weight</name>
        <param>
          <type>struct <ref refid="structle__link" kindref="compound">le_link</ref> *</type>
          <declname>link</declname>
        </param>
        <param>
          <type>struct <ref refid="struct__channel__quality" kindref="compound">_channel_quality</ref> *</type>
          <declname>current_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="354" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="354" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="ll__afh_8c_1ad592cad4dd75c346be2ac2d61478aa07" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void AFH_input_FromEventIsr</definition>
        <argsstring>(struct le_link *link, int channel_index)</argsstring>
        <name>AFH_input_FromEventIsr</name>
        <param>
          <type>struct <ref refid="structle__link" kindref="compound">le_link</ref> *</type>
          <declname>link</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="440" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="440" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="ll__afh_8c_1a5f24747d7126a02e6a462dba8a9e2feb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void AFH_input_FromRxIsr</definition>
        <argsstring>(struct _input_info *input)</argsstring>
        <name>AFH_input_FromRxIsr</name>
        <param>
          <type>struct <ref refid="struct__input__info" kindref="compound">_input_info</ref> *</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="460" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="460" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="ll__afh_8c_1aa1f77e6afdd628909ff251aa46d49d2e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ll_channel_map_print</definition>
        <argsstring>(void)</argsstring>
        <name>ll_channel_map_print</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="490" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="490" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="ll__afh_8c_1afd715995fa3b2672a0df0df5e2e40a8a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void AFH_output_UpdateChannelMap</definition>
        <argsstring>(struct le_link *link)</argsstring>
        <name>AFH_output_UpdateChannelMap</name>
        <param>
          <type>struct <ref refid="structle__link" kindref="compound">le_link</ref> *</type>
          <declname>link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="546" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="546" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="ll__afh_8c_1a418a3b39b804f31fca736d577a16e608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void master_ll_update_channel_map_done</definition>
        <argsstring>(void)</argsstring>
        <name>master_ll_update_channel_map_done</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="610" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="610" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="ll__afh_8c_1a5005e394524f3252061f4a7749e736b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void conn_evt_probe_evtchannel_handler</definition>
        <argsstring>(struct le_link *link, int param)</argsstring>
        <name>conn_evt_probe_evtchannel_handler</name>
        <param>
          <type>struct <ref refid="structle__link" kindref="compound">le_link</ref> *</type>
          <declname>link</declname>
        </param>
        <param>
          <type>int</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="618" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="618" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="ll__afh_8c_1ac1bcacaf9d045509ad21553ec0da301c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void conn_rx_probe_channel_handler</definition>
        <argsstring>(struct le_link *link, struct ble_rx *rx)</argsstring>
        <name>conn_rx_probe_channel_handler</name>
        <param>
          <type>struct <ref refid="structle__link" kindref="compound">le_link</ref> *</type>
          <declname>link</declname>
        </param>
        <param>
          <type>struct ble_rx *</type>
          <declname>rx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="631" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="631" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="ll__afh_8c_1a12ab4e73484b34534907707fbac70c98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_update_channel_map_post_handler</definition>
        <argsstring>(struct le_link *link)</argsstring>
        <name>ll_update_channel_map_post_handler</name>
        <param>
          <type>struct <ref refid="structle__link" kindref="compound">le_link</ref> *</type>
          <declname>link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="650" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="650" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="ll__afh_8c_1af13ece4d6b4e782897f07f64cfc9b322" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_channel_info_init</definition>
        <argsstring>(struct ble_conn_param *conn_param)</argsstring>
        <name>ll_channel_info_init</name>
        <param>
          <type>struct ble_conn_param *</type>
          <declname>conn_param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" line="663" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c" bodystart="663" bodyend="672"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="link__layer_8h" kindref="compound">ble/link_layer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ble/ll_config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;misc_interface.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;btcontroller_util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_MS_EXTENSIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>bss_seg(&quot;.ble_ll_bss&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>data_seg(&quot;.ble_ll_data&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>const_seg(&quot;.ble_ll_const&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>code_seg(&quot;.ble_ll_code&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_TAG_CONST<sp/><sp/><sp/><sp/><sp/><sp/><sp/>LL_AFH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_TAG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STR(LOG_TAG_CONST)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_ERROR_ENABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_INFO_ENABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_DUMP_ENABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/debug.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LOG_ERROR_ENABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AFH_ASSERT(x,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(LOG_IS_ENABLE(LOG_ERROR))<sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(x,<sp/>##<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AFH_ASSERT(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LOG_ERROR_ENABLE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>afh_debug(x,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(LOG_IS_ENABLE(LOG_DEBUG))<sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>afh_printf(x,<sp/>##<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>afh_warn(x,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(LOG_IS_ENABLE(LOG_WARN))<sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>afh_printf(x,<sp/>##<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_MALLOC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__this<sp/><sp/><sp/><sp/><sp/><sp/>(ll_hdl)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__this<sp/><sp/><sp/><sp/><sp/><sp/>(&amp;ll_hdl)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//&lt;<sp/>external<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>u8<sp/><ref refid="ll__afh_8c_1a5e860aba8294c0865bab74c72ce3a8b2" kindref="member">le_channel_map_update</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structhost__channel__classification" kindref="compound">host_channel_classification</ref><sp/>*param);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//&lt;<sp/>User<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMPLIFICATION_FACTOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHANNEL_EFFECT_TIMES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN_ONLINE_CHANNEL_NUMS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_ONLINE_CHANNEL_NUMS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MIN_ONLINE_CHANNEL_NUMS<sp/>+<sp/>5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN_RETRY_NUMS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_RETRY_NUMS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_PERIOD_PROBABLY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7000<sp/>//<sp/>units:ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AFH_ALGORITHM_WAY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>//<sp/>1<sp/>or<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_BYTE(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x<sp/>&gt;&gt;<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_BIT(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x<sp/>&amp;<sp/>0x07)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONN_INTERVAL_MS(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x<sp/>*<sp/>5<sp/>/<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DATA_CHANNEL_NUMS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>37</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHANNEL_MAP_OCTETS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHANNEL_ID(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((struct<sp/>_channel_quality<sp/>*)x<sp/>-<sp/>channel_quality)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEMBER_IS_ALONE(x)<sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((x-&gt;entry.next<sp/>==<sp/>&amp;x-&gt;entry)<sp/>||<sp/>(x-&gt;entry.next<sp/>==<sp/>NULL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>U8_MAX_LIMIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((2<sp/>&lt;&lt;<sp/>7)<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>U12_MAX_LIMIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((2<sp/>&lt;&lt;<sp/>11)<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>U16_MAX_LIMIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((2<sp/>&lt;&lt;<sp/>15)<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>U24_MAX_LIMIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((2<sp/>&lt;&lt;<sp/>23)<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>S16_MIN_LIMIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-(2<sp/>&lt;&lt;<sp/>14))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>S16_MAX_LIMIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((2<sp/>&lt;&lt;<sp/>14)<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a06fc87d81c62e9abb8790b6e5713c55baf602a728c42b93395d40e86a5cbb084f" kindref="member">AFH_INPUT_READY</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a06fc87d81c62e9abb8790b6e5713c55baf9864f4fe690c6b9e5b5fc9b21af97e1" kindref="member">AFH_OUTPUT_START</ref>,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a06fc87d81c62e9abb8790b6e5713c55ba4036caebdb09384210a115a457bed89d" kindref="member">AFH_OUTPUT_CONTINUE</ref>,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a06fc87d81c62e9abb8790b6e5713c55ba484b4cfe1983bd13dc6b6c52d56fde44" kindref="member">AFH_OUTPUT_COMPLETE</ref>,</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="struct__channel__quality" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__channel__quality" kindref="compound">_channel_quality</ref><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">list_head<sp/>entry;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/><ref refid="struct__channel__quality_1a753df6bff1de4051454d0ec76c377d0a" kindref="member">rx_cnt</ref><sp/>:<sp/>12;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>当前事件<sp/>实际成功接收次数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/><ref refid="struct__channel__quality_1a20acca67dde05d2f6b340bfe73f1f678" kindref="member">expected_rx_cnt</ref><sp/>:<sp/>12;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>当前事件<sp/>期待接收次数(存在rx/tx<sp/>md的可能性)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/><ref refid="struct__channel__quality_1abc6123abec2712709d30bf9201771d55" kindref="member">pre_interval_effect</ref><sp/>:<sp/>8;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>该频点上一个连接间隔算出需要的作用次数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/><ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref><sp/>:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>该频点产生的事件数(作用次数)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/><ref refid="struct__channel__quality_1a6d9e81ec492f497d90edc8e3f8f27128" kindref="member">average_weight</ref><sp/>:<sp/>24;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>区间权重</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>u16<sp/><ref refid="struct__channel__quality_1ae9139898d5ef4d9ffd5ff1eb0bbaf482" kindref="member">history_weight</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>历史权重</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>s16<sp/><ref refid="struct__channel__quality_1a09342210d579e23924903731f1c4198a" kindref="member">rx_rssi_average</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>当前事件<sp/>接收rssi平均值</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="struct__input__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__input__info" kindref="compound">_input_info</ref><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>channel_index;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>s8<sp/>rssi;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>md;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>u8<sp/><ref refid="ll__afh_8c_1a5ce136352acda1caad8bb096e6691763" kindref="member">new_online_channels_nums</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>u8<sp/><ref refid="ll__afh_8c_1a49b19c98f399665e878f43d2bc9113e8" kindref="member">new_channel_map</ref>[<ref refid="ll__afh_8c_1aa850c6877eabe7895647653ba4c00b97" kindref="member">CHANNEL_MAP_OCTETS</ref>];</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">list_head<sp/><ref refid="ll__afh_8c_1a5f6af41985bd2c2362e1b6a9f87f0e03" kindref="member">bad_ch_list_head</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__channel__quality" kindref="compound">_channel_quality</ref><sp/>channel_quality[DATA_CHANNEL_NUMS];</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>atomic_t<sp/><ref refid="ll__afh_8c_1a3421f3ca17315f03e7508eea1ac1997f" kindref="member">afh_pend</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AFH_ALGORITHM_WAY<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>WEIGHT_THRESHOLD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>50<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BAD_RX_RSSI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-20L)<sp/>//<sp/>dbm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BAD_COEFFICIENT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WEIGHT_THRESHOLD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(BAD_RX_RSSI<sp/>+<sp/>AMPLIFICATION_FACTOR<sp/>*<sp/>BAD_COEFFICIENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">list_head<sp/>new_bad_ch_list_head;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(AFH_ALGORITHM_WAY<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REDUCE_ONLINE_NUMS<sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CUR_INTERVAL_EFFECT_TIMES(x)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(UPDATE_PERIOD_PROBABLY<sp/>/<sp/>(new_online_channels_nums<sp/>*<sp/>CONN_INTERVAL_MS(x)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>u8<sp/><ref refid="ll__afh_8c_1a0fb82cdfc5ceabd7e6d62df51f99d55e" kindref="member">complete_sample_nums</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">list_head<sp/><ref refid="ll__afh_8c_1a4c056244bd921f5b64456a88dfa4299a" kindref="member">good_ch_list_head</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>u8<sp/><ref refid="ll__afh_8c_1a78f9c4ff53ebae016be64715daf1e099" kindref="member">pre_channel_effect_times</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>const<sp/>u8<sp/>first_used_channels[]<sp/>=<sp/>{9,<sp/>10,<sp/>21,<sp/>22,<sp/>23,<sp/>33,<sp/>34,<sp/>35,<sp/>36};<sp/>//<sp/>exclude<sp/>wifi(2.4G)<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8<sp/><ref refid="ll__afh_8c_1a761bf9755363e31d668226a9c9ca1972" kindref="member">first_used_channels</ref>[]<sp/>=<sp/>{0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>9,<sp/>10,<sp/>11,<sp/>12,<sp/>13,<sp/>14,<sp/>15,<sp/>16,<sp/>17,<sp/>18,<sp/>19,<sp/>20,<sp/>21,<sp/>22,<sp/>23,<sp/>24,<sp/>25,<sp/>26,<sp/>27,<sp/>28,<sp/>29,<sp/>30,<sp/>31,<sp/>32,<sp/>33,<sp/>34,<sp/>35,<sp/>36};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ll__afh_8c_1a2a1dae14f53000ee232bb3203df0b605" kindref="member">afh_printf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format,<sp/>...)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>format);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(log_output_lock()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">logbuf<sp/>*lb<sp/>=<sp/>log_output_start(256);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lb)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>lb-&gt;buf;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb-&gt;len<sp/>=<sp/>print(&amp;p,<sp/>p<sp/>+<sp/>255,<sp/>format,<sp/>args);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_output_end(lb);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*format<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>||<sp/>*format<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_putbyte(*format);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format++;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*format<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>log_print_time();<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>print(NULL,<sp/>0,<sp/>format,<sp/>args);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_output_unlock();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>单向链表</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">slist_head<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">slist_head<sp/>*next;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>singly_list_for_each_entry<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>list_for_each_entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>singly_list_for_each_entry_safe(a,<sp/>b,<sp/>c,<sp/>d)<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>list_for_each_entry(a,<sp/>c,<sp/>d)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>INIT_SINGLY_LIST_HEAD(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>slist_head<sp/>*list)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;next<sp/>=<sp/>list;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>singly_list_add(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>slist_head<sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>slist_head<sp/>*head)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">-&gt;next<sp/>=<sp/>head-&gt;next;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>head-&gt;next<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>singly_list_add_tail(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>slist_head<sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>slist_head<sp/>*head)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">slist_head<sp/>*p;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/>head;<sp/>;<sp/>p<sp/>=<sp/>p-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;next<sp/>==<sp/>head)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;next<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">-&gt;next<sp/>=<sp/>head;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>singly_list_del(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>slist_head<sp/>*<ref refid="struct__channel__quality_1afc4a44e42912e75bd56d151d2c8dc130" kindref="member">entry</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>slist_head<sp/>*head)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">slist_head<sp/>*p;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/>head;<sp/>p-&gt;next<sp/>!=<sp/>head;<sp/>p<sp/>=<sp/>p-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;next<sp/>==<sp/>entry)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;next<sp/>=<sp/>entry-&gt;next;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__afh_8c_1ad9393ac1815b46780df3fc94e7cf0ec1" kindref="member">channle_weight_sort</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct__channel__quality" kindref="compound">_channel_quality</ref><sp/>*member,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>list_head<sp/>*head)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__channel__quality" kindref="compound">_channel_quality</ref><sp/>*p;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>list_for_each_entry(p,<sp/>head,<sp/>entry)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(member-&gt;<ref refid="struct__channel__quality_1ae9139898d5ef4d9ffd5ff1eb0bbaf482" kindref="member">history_weight</ref><sp/>&gt;<sp/>p-&gt;<ref refid="struct__channel__quality_1ae9139898d5ef4d9ffd5ff1eb0bbaf482" kindref="member">history_weight</ref>)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list_add(&amp;member-&gt;<ref refid="struct__channel__quality_1afc4a44e42912e75bd56d151d2c8dc130" kindref="member">entry</ref>,<sp/>p-&gt;<ref refid="struct__channel__quality_1afc4a44e42912e75bd56d151d2c8dc130" kindref="member">entry</ref>.prev);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>list_add_tail(&amp;member-&gt;<ref refid="struct__channel__quality_1afc4a44e42912e75bd56d151d2c8dc130" kindref="member">entry</ref>,<sp/>head);<sp/></highlight><highlight class="comment">//<sp/>权重最大的下沉最底</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AFH_ALGORITHM_WAY<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__afh_8c_1ad507bf4ca22fda726e0a57ff2b6a89ad" kindref="member">channle_average_weight_sort</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct__channel__quality" kindref="compound">_channel_quality</ref><sp/>*member,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>list_head<sp/>*head)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__channel__quality" kindref="compound">_channel_quality</ref><sp/>*p;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>list_for_each_entry(p,<sp/>head,<sp/>entry)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a4393d7b6ecdd9f3371e031e9d40a0335" kindref="member">AFH_ASSERT</ref>(member-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref>,<sp/></highlight><highlight class="stringliteral">&quot;mem<sp/>div<sp/>0,<sp/>ch:%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="ll__afh_8c_1a5176b8881ebc22196ad2e493767ba616" kindref="member">CHANNEL_ID</ref>(member));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a4393d7b6ecdd9f3371e031e9d40a0335" kindref="member">AFH_ASSERT</ref>(p-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref>,<sp/></highlight><highlight class="stringliteral">&quot;list<sp/>div<sp/>0,<sp/>ch:%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="ll__afh_8c_1a5176b8881ebc22196ad2e493767ba616" kindref="member">CHANNEL_ID</ref>(p));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((member-&gt;<ref refid="struct__channel__quality_1a6d9e81ec492f497d90edc8e3f8f27128" kindref="member">average_weight</ref><sp/>/<sp/>member-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref>)<sp/>&gt;<sp/>(p-&gt;<ref refid="struct__channel__quality_1a6d9e81ec492f497d90edc8e3f8f27128" kindref="member">average_weight</ref><sp/>/<sp/>p-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref>))<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list_add(&amp;member-&gt;<ref refid="struct__channel__quality_1afc4a44e42912e75bd56d151d2c8dc130" kindref="member">entry</ref>,<sp/>p-&gt;<ref refid="struct__channel__quality_1afc4a44e42912e75bd56d151d2c8dc130" kindref="member">entry</ref>.prev);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>list_add_tail(&amp;member-&gt;<ref refid="struct__channel__quality_1afc4a44e42912e75bd56d151d2c8dc130" kindref="member">entry</ref>,<sp/>head);<sp/></highlight><highlight class="comment">//<sp/>权重最大的下沉最底</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>AFH_ALGORITHM_WAY<sp/>==<sp/>2<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__afh_8c_1a65db42b248368da0bf94942d3bcc5bcb" kindref="member">AFH_info_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>ble_conn_param<sp/>*conn_param)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>byte,<sp/>bit;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>first_effect_times;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a5ce136352acda1caad8bb096e6691763" kindref="member">new_online_channels_nums</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="ll__afh_8c_1a761bf9755363e31d668226a9c9ca1972" kindref="member">first_used_channels</ref>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>INIT_LIST_HEAD(&amp;<ref refid="ll__afh_8c_1a5f6af41985bd2c2362e1b6a9f87f0e03" kindref="member">bad_ch_list_head</ref>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AFH_ALGORITHM_WAY<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>INIT_LIST_HEAD(&amp;new_bad_ch_list_head);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;WEIGHT_THRESHOLD=%d&quot;</highlight><highlight class="normal">,<sp/>WEIGHT_THRESHOLD);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(AFH_ALGORITHM_WAY<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>INIT_LIST_HEAD(&amp;<ref refid="ll__afh_8c_1a4c056244bd921f5b64456a88dfa4299a" kindref="member">good_ch_list_head</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a4393d7b6ecdd9f3371e031e9d40a0335" kindref="member">AFH_ASSERT</ref>(<ref refid="ll__afh_8c_1a917dd585688a7a581dd2e0f7522418f7" kindref="member">CUR_INTERVAL_EFFECT_TIMES</ref>(conn_param-&gt;interval)<sp/>&lt;<sp/><ref refid="ll__afh_8c_1a066a2fc24e8383fdf5c15b9958f2911e" kindref="member">U8_MAX_LIMIT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;overflow&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>first_effect_times<sp/>=<sp/><ref refid="ll__afh_8c_1a917dd585688a7a581dd2e0f7522418f7" kindref="member">CUR_INTERVAL_EFFECT_TIMES</ref>(conn_param-&gt;interval);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a4393d7b6ecdd9f3371e031e9d40a0335" kindref="member">AFH_ASSERT</ref>(first_effect_times,<sp/></highlight><highlight class="stringliteral">&quot;Can<sp/>not<sp/>be<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;init<sp/>channel_effect_times=%d&quot;</highlight><highlight class="normal">,<sp/>first_effect_times);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>AFH_ALGORITHM_WAY<sp/>==<sp/>1<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>memset((u8<sp/>*)&amp;channel_quality,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(channel_quality));</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(conn_param-&gt;channel,<sp/>0,<sp/><ref refid="ll__afh_8c_1aa850c6877eabe7895647653ba4c00b97" kindref="member">CHANNEL_MAP_OCTETS</ref>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="ll__afh_8c_1a761bf9755363e31d668226a9c9ca1972" kindref="member">first_used_channels</ref>);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/>=<sp/><ref refid="ll__afh_8c_1a7f622febfac431b0a2c967b85201e5c2" kindref="member">GET_BYTE</ref>(<ref refid="ll__afh_8c_1a761bf9755363e31d668226a9c9ca1972" kindref="member">first_used_channels</ref>[i]);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit<sp/>=<sp/><ref refid="ll__afh_8c_1ab6115ef10c1f915c8c47e95361e5419d" kindref="member">GET_BIT</ref>(<ref refid="ll__afh_8c_1a761bf9755363e31d668226a9c9ca1972" kindref="member">first_used_channels</ref>[i]);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn_param-&gt;channel[byte]<sp/>|=<sp/>BIT(bit);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a49b19c98f399665e878f43d2bc9113e8" kindref="member">new_channel_map</ref>[byte]<sp/>|=<sp/>BIT(bit);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>conn_param-&gt;hop<sp/>=<sp/>7;<sp/>//<sp/>跳频值<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;--first_used_channels_map&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info_hexdump(conn_param-&gt;channel,<sp/>5);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="ll__afh_8c_1a4260224e301c33c285aa639e9c6e96ca" kindref="member">DATA_CHANNEL_NUMS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(conn_param-&gt;channel[<ref refid="ll__afh_8c_1a7f622febfac431b0a2c967b85201e5c2" kindref="member">GET_BYTE</ref>(i)]<sp/>&amp;<sp/>BIT(<ref refid="ll__afh_8c_1ab6115ef10c1f915c8c47e95361e5419d" kindref="member">GET_BIT</ref>(i))))<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1ad9393ac1815b46780df3fc94e7cf0ec1" kindref="member">channle_weight_sort</ref>(&amp;channel_quality[i],<sp/>&amp;<ref refid="ll__afh_8c_1a5f6af41985bd2c2362e1b6a9f87f0e03" kindref="member">bad_ch_list_head</ref>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AFH_ALGORITHM_WAY<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel_quality[i].<ref refid="struct__channel__quality_1abc6123abec2712709d30bf9201771d55" kindref="member">pre_interval_effect</ref><sp/>=<sp/>first_effect_times;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>AFH_ALGORITHM_WAY<sp/>==<sp/>2<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>atomic_set(&amp;<ref refid="ll__afh_8c_1a3421f3ca17315f03e7508eea1ac1997f" kindref="member">afh_pend</ref>,<sp/><ref refid="ll__afh_8c_1a06fc87d81c62e9abb8790b6e5713c55baf602a728c42b93395d40e86a5cbb084f" kindref="member">AFH_INPUT_READY</ref>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AFH_ALGORITHM_WAY<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="ll__afh_8c_1a9d3ab867025491e3f202eec06fde85a5" kindref="member">algorithm_of_weight</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*link,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct__channel__quality" kindref="compound">_channel_quality</ref><sp/>*current_channel)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>u16<sp/>current_weight;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a8cd87cc10b493870de19dfdd19b7926f" kindref="member">afh_debug</ref>(</highlight><highlight class="stringliteral">&quot;ch=%2d<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="ll__afh_8c_1a5176b8881ebc22196ad2e493767ba616" kindref="member">CHANNEL_ID</ref>(current_channel));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>current<sp/>channel<sp/>&quot;current<sp/>weight&quot;<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_channel-&gt;<ref refid="struct__channel__quality_1a753df6bff1de4051454d0ec76c377d0a" kindref="member">rx_cnt</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_weight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_weight<sp/>=<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a753df6bff1de4051454d0ec76c377d0a" kindref="member">rx_cnt</ref><sp/>*<sp/><ref refid="ll__afh_8c_1a840303a8f70faabd6401b93ada563edc" kindref="member">AMPLIFICATION_FACTOR</ref><sp/>/<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a20acca67dde05d2f6b340bfe73f1f678" kindref="member">expected_rx_cnt</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a8cd87cc10b493870de19dfdd19b7926f" kindref="member">afh_debug</ref>(</highlight><highlight class="stringliteral">&quot;a_rssi=%d<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a09342210d579e23924903731f1c4198a" kindref="member">rx_rssi_average</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_weight<sp/>+=<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a09342210d579e23924903731f1c4198a" kindref="member">rx_rssi_average</ref><sp/>/<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a753df6bff1de4051454d0ec76c377d0a" kindref="member">rx_cnt</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a09342210d579e23924903731f1c4198a" kindref="member">rx_rssi_average</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a753df6bff1de4051454d0ec76c377d0a" kindref="member">rx_cnt</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a20acca67dde05d2f6b340bfe73f1f678" kindref="member">expected_rx_cnt</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a8cd87cc10b493870de19dfdd19b7926f" kindref="member">afh_debug</ref>(</highlight><highlight class="stringliteral">&quot;cur_w=%d<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>current_weight);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>current<sp/>channel<sp/>&quot;average<sp/>weight&quot;<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a4393d7b6ecdd9f3371e031e9d40a0335" kindref="member">AFH_ASSERT</ref>((current_channel-&gt;<ref refid="struct__channel__quality_1a6d9e81ec492f497d90edc8e3f8f27128" kindref="member">average_weight</ref><sp/>+<sp/>current_weight)<sp/>&lt;=<sp/><ref refid="ll__afh_8c_1a88d3166cbec3b976d05b1c22ed4a4386" kindref="member">U24_MAX_LIMIT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;overflow:0x%x&quot;</highlight><highlight class="normal">,<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a6d9e81ec492f497d90edc8e3f8f27128" kindref="member">average_weight</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a6d9e81ec492f497d90edc8e3f8f27128" kindref="member">average_weight</ref><sp/>+=<sp/>current_weight;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a4393d7b6ecdd9f3371e031e9d40a0335" kindref="member">AFH_ASSERT</ref>((u8)(current_channel-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref><sp/>+<sp/>1),<sp/></highlight><highlight class="stringliteral">&quot;overflow:0x%x&quot;</highlight><highlight class="normal">,<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>current_channel-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref>++;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_channel-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref><sp/>&lt;<sp/><ref refid="ll__afh_8c_1a1d2f6b12269b5b4607a6c1cff59c9fd9" kindref="member">CHANNEL_EFFECT_TIMES</ref>)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a8cd87cc10b493870de19dfdd19b7926f" kindref="member">afh_debug</ref>(</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a6d9e81ec492f497d90edc8e3f8f27128" kindref="member">average_weight</ref><sp/>/=<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>current_channel-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>u16<sp/>weight_threshold<sp/>=<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a6d9e81ec492f497d90edc8e3f8f27128" kindref="member">average_weight</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a8cd87cc10b493870de19dfdd19b7926f" kindref="member">afh_debug</ref>(</highlight><highlight class="stringliteral">&quot;ave_w=%d<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>weight_threshold);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>current<sp/>channel<sp/>&quot;history<sp/>weight&quot;<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>current_channel-&gt;<ref refid="struct__channel__quality_1ae9139898d5ef4d9ffd5ff1eb0bbaf482" kindref="member">history_weight</ref><sp/>=<sp/>(current_channel-&gt;<ref refid="struct__channel__quality_1ae9139898d5ef4d9ffd5ff1eb0bbaf482" kindref="member">history_weight</ref><sp/>+<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a6d9e81ec492f497d90edc8e3f8f27128" kindref="member">average_weight</ref>)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a6d9e81ec492f497d90edc8e3f8f27128" kindref="member">average_weight</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a8cd87cc10b493870de19dfdd19b7926f" kindref="member">afh_debug</ref>(</highlight><highlight class="stringliteral">&quot;his_w=%d\r\n&quot;</highlight><highlight class="normal">,<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1ae9139898d5ef4d9ffd5ff1eb0bbaf482" kindref="member">history_weight</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weight_threshold<sp/>&gt;<sp/>WEIGHT_THRESHOLD)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>get<sp/>a<sp/>new<sp/>bad<sp/>channel<sp/>list<sp/>from<sp/>current<sp/>used<sp/>channel<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__afh_8c_1a2938837cf16a8e208ee2d6adb946fb78" kindref="member">MEMBER_IS_ALONE</ref>(current_channel))<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list_add(&amp;current_channel-&gt;<ref refid="struct__channel__quality_1afc4a44e42912e75bd56d151d2c8dc130" kindref="member">entry</ref>,<sp/>&amp;new_bad_ch_list_head);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a5ce136352acda1caad8bb096e6691763" kindref="member">new_online_channels_nums</ref>--;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__afh_8c_1a5ce136352acda1caad8bb096e6691763" kindref="member">new_online_channels_nums</ref><sp/>&lt;<sp/><ref refid="ll__afh_8c_1ac333c8b9f6812639598cceca38afd6b8" kindref="member">MIN_ONLINE_CHANNEL_NUMS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(AFH_ALGORITHM_WAY<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="ll__afh_8c_1a9d3ab867025491e3f202eec06fde85a5" kindref="member">algorithm_of_weight</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*link,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct__channel__quality" kindref="compound">_channel_quality</ref><sp/>*current_channel)</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>u16<sp/>current_weight;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a8cd87cc10b493870de19dfdd19b7926f" kindref="member">afh_debug</ref>(</highlight><highlight class="stringliteral">&quot;ch=%2d<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="ll__afh_8c_1a5176b8881ebc22196ad2e493767ba616" kindref="member">CHANNEL_ID</ref>(current_channel));</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>current<sp/>channel<sp/>&quot;current<sp/>weight&quot;<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_channel-&gt;<ref refid="struct__channel__quality_1a753df6bff1de4051454d0ec76c377d0a" kindref="member">rx_cnt</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_weight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_weight<sp/>=<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a753df6bff1de4051454d0ec76c377d0a" kindref="member">rx_cnt</ref><sp/>*<sp/><ref refid="ll__afh_8c_1a840303a8f70faabd6401b93ada563edc" kindref="member">AMPLIFICATION_FACTOR</ref><sp/>/<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a20acca67dde05d2f6b340bfe73f1f678" kindref="member">expected_rx_cnt</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a8cd87cc10b493870de19dfdd19b7926f" kindref="member">afh_debug</ref>(</highlight><highlight class="stringliteral">&quot;cnt=%d<sp/>%d<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a753df6bff1de4051454d0ec76c377d0a" kindref="member">rx_cnt</ref>,<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a20acca67dde05d2f6b340bfe73f1f678" kindref="member">expected_rx_cnt</ref>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a8cd87cc10b493870de19dfdd19b7926f" kindref="member">afh_debug</ref>(</highlight><highlight class="stringliteral">&quot;a_rssi=%d<sp/>%d<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a09342210d579e23924903731f1c4198a" kindref="member">rx_rssi_average</ref>,<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a09342210d579e23924903731f1c4198a" kindref="member">rx_rssi_average</ref><sp/>/<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a753df6bff1de4051454d0ec76c377d0a" kindref="member">rx_cnt</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_weight<sp/>+=<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a09342210d579e23924903731f1c4198a" kindref="member">rx_rssi_average</ref><sp/>/<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a753df6bff1de4051454d0ec76c377d0a" kindref="member">rx_cnt</ref>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a09342210d579e23924903731f1c4198a" kindref="member">rx_rssi_average</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a753df6bff1de4051454d0ec76c377d0a" kindref="member">rx_cnt</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a20acca67dde05d2f6b340bfe73f1f678" kindref="member">expected_rx_cnt</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a8cd87cc10b493870de19dfdd19b7926f" kindref="member">afh_debug</ref>(</highlight><highlight class="stringliteral">&quot;cur_w=%d<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>current_weight);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>current<sp/>channel<sp/>&quot;average<sp/>weight&quot;<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a4393d7b6ecdd9f3371e031e9d40a0335" kindref="member">AFH_ASSERT</ref>((current_channel-&gt;<ref refid="struct__channel__quality_1a6d9e81ec492f497d90edc8e3f8f27128" kindref="member">average_weight</ref><sp/>+<sp/>current_weight)<sp/>&lt;=<sp/><ref refid="ll__afh_8c_1a88d3166cbec3b976d05b1c22ed4a4386" kindref="member">U24_MAX_LIMIT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;overflow:0x%x&quot;</highlight><highlight class="normal">,<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a6d9e81ec492f497d90edc8e3f8f27128" kindref="member">average_weight</ref>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a6d9e81ec492f497d90edc8e3f8f27128" kindref="member">average_weight</ref><sp/>+=<sp/>current_weight;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a4393d7b6ecdd9f3371e031e9d40a0335" kindref="member">AFH_ASSERT</ref>((u8)(current_channel-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref><sp/>+<sp/>1),<sp/></highlight><highlight class="stringliteral">&quot;overflow:0x%x&quot;</highlight><highlight class="normal">,<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>current_channel-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref>++;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_channel-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref><sp/>==<sp/><ref refid="ll__afh_8c_1a066a2fc24e8383fdf5c15b9958f2911e" kindref="member">U8_MAX_LIMIT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a8cd87cc10b493870de19dfdd19b7926f" kindref="member">afh_debug</ref>(</highlight><highlight class="stringliteral">&quot;effect_times<sp/>MAX<sp/>LIMIT\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ll__afh_8c_1a2938837cf16a8e208ee2d6adb946fb78" kindref="member">MEMBER_IS_ALONE</ref>(current_channel))<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list_del(&amp;current_channel-&gt;<ref refid="struct__channel__quality_1afc4a44e42912e75bd56d151d2c8dc130" kindref="member">entry</ref>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1ad507bf4ca22fda726e0a57ff2b6a89ad" kindref="member">channle_average_weight_sort</ref>(current_channel,<sp/>&amp;<ref refid="ll__afh_8c_1a4c056244bd921f5b64456a88dfa4299a" kindref="member">good_ch_list_head</ref>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>calculate<sp/>numbers<sp/>which<sp/>sample<sp/>complete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a4393d7b6ecdd9f3371e031e9d40a0335" kindref="member">AFH_ASSERT</ref>(<ref refid="ll__afh_8c_1a917dd585688a7a581dd2e0f7522418f7" kindref="member">CUR_INTERVAL_EFFECT_TIMES</ref>(link-&gt;<ref refid="structle__link_1ab37919366a48faa1b5e84c8b141cd189" kindref="member">ll_data</ref>.interval)<sp/>&lt;<sp/><ref refid="ll__afh_8c_1a066a2fc24e8383fdf5c15b9958f2911e" kindref="member">U8_MAX_LIMIT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;overflow&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>now_channel_effect_times<sp/>=<sp/><ref refid="ll__afh_8c_1a917dd585688a7a581dd2e0f7522418f7" kindref="member">CUR_INTERVAL_EFFECT_TIMES</ref>(link-&gt;<ref refid="structle__link_1ab37919366a48faa1b5e84c8b141cd189" kindref="member">ll_data</ref>.interval);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a8cd87cc10b493870de19dfdd19b7926f" kindref="member">afh_debug</ref>(</highlight><highlight class="stringliteral">&quot;effect=%d<sp/>%d<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>now_channel_effect_times,<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1abc6123abec2712709d30bf9201771d55" kindref="member">pre_interval_effect</ref>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a4393d7b6ecdd9f3371e031e9d40a0335" kindref="member">AFH_ASSERT</ref>(now_channel_effect_times,<sp/></highlight><highlight class="stringliteral">&quot;Can<sp/>not<sp/>be<sp/>0:%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="ll__afh_8c_1a5ce136352acda1caad8bb096e6691763" kindref="member">new_online_channels_nums</ref><sp/>*<sp/><ref refid="ll__afh_8c_1ae221b86652338bea5dc2c70f979f3a74" kindref="member">CONN_INTERVAL_MS</ref>(link-&gt;<ref refid="structle__link_1ab37919366a48faa1b5e84c8b141cd189" kindref="member">ll_data</ref>.interval));</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>now_channel_effect_times)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now_channel_effect_times<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a4b9b4e8fafec544e465d90bcd9c781d2" kindref="member">afh_warn</ref>(</highlight><highlight class="stringliteral">&quot;update<sp/>period<sp/>may=%d<sp/>ms\r\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="ll__afh_8c_1a5ce136352acda1caad8bb096e6691763" kindref="member">new_online_channels_nums</ref><sp/>*<sp/><ref refid="ll__afh_8c_1ae221b86652338bea5dc2c70f979f3a74" kindref="member">CONN_INTERVAL_MS</ref>(link-&gt;<ref refid="structle__link_1ab37919366a48faa1b5e84c8b141cd189" kindref="member">ll_data</ref>.interval));</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a8cd87cc10b493870de19dfdd19b7926f" kindref="member">afh_debug</ref>(</highlight><highlight class="stringliteral">&quot;effect=%d<sp/>%d<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>now_channel_effect_times,<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1abc6123abec2712709d30bf9201771d55" kindref="member">pre_interval_effect</ref>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(now_channel_effect_times<sp/>!=<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1abc6123abec2712709d30bf9201771d55" kindref="member">pre_interval_effect</ref>)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current_channel-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref><sp/>&gt;<sp/>now_channel_effect_times)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(current_channel-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref><sp/>&lt;=<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1abc6123abec2712709d30bf9201771d55" kindref="member">pre_interval_effect</ref>))<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a0fb82cdfc5ceabd7e6d62df51f99d55e" kindref="member">complete_sample_nums</ref>++;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a8cd87cc10b493870de19dfdd19b7926f" kindref="member">afh_debug</ref>(</highlight><highlight class="stringliteral">&quot;ave_w0=%d\r\n&quot;</highlight><highlight class="normal">,<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a6d9e81ec492f497d90edc8e3f8f27128" kindref="member">average_weight</ref><sp/>/<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_channel-&gt;<ref refid="struct__channel__quality_1abc6123abec2712709d30bf9201771d55" kindref="member">pre_interval_effect</ref><sp/>=<sp/>now_channel_effect_times;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_channel-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref><sp/>&lt;<sp/>now_channel_effect_times)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a8cd87cc10b493870de19dfdd19b7926f" kindref="member">afh_debug</ref>(</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_channel-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref><sp/>==<sp/>now_channel_effect_times)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a0fb82cdfc5ceabd7e6d62df51f99d55e" kindref="member">complete_sample_nums</ref>++;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a8cd87cc10b493870de19dfdd19b7926f" kindref="member">afh_debug</ref>(</highlight><highlight class="stringliteral">&quot;ave_w1=%d\r\n&quot;</highlight><highlight class="normal">,<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a6d9e81ec492f497d90edc8e3f8f27128" kindref="member">average_weight</ref><sp/>/<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref>);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a8cd87cc10b493870de19dfdd19b7926f" kindref="member">afh_debug</ref>(</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>calculate<sp/>channel&apos;s<sp/>&quot;history<sp/>weight&quot;<sp/>which<sp/>sample<sp/>complete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="ll__afh_8c_1a0fb82cdfc5ceabd7e6d62df51f99d55e" kindref="member">complete_sample_nums</ref><sp/>==<sp/><ref refid="ll__afh_8c_1a5ce136352acda1caad8bb096e6691763" kindref="member">new_online_channels_nums</ref>)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(current_channel-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref><sp/>==<sp/><ref refid="ll__afh_8c_1a066a2fc24e8383fdf5c15b9958f2911e" kindref="member">U8_MAX_LIMIT</ref>))<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a0fb82cdfc5ceabd7e6d62df51f99d55e" kindref="member">complete_sample_nums</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__channel__quality" kindref="compound">_channel_quality</ref><sp/>*p;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list_for_each_entry(p,<sp/>&amp;<ref refid="ll__afh_8c_1a4c056244bd921f5b64456a88dfa4299a" kindref="member">good_ch_list_head</ref>,<sp/>entry)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct__channel__quality_1a6d9e81ec492f497d90edc8e3f8f27128" kindref="member">average_weight</ref><sp/>/=<sp/>p-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct__channel__quality_1aa80f28f765139165a2e29ea4a04955dc" kindref="member">effect_times</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>current<sp/>channel<sp/>&quot;history<sp/>weight&quot;<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct__channel__quality_1ae9139898d5ef4d9ffd5ff1eb0bbaf482" kindref="member">history_weight</ref><sp/>=<sp/>(p-&gt;<ref refid="struct__channel__quality_1ae9139898d5ef4d9ffd5ff1eb0bbaf482" kindref="member">history_weight</ref><sp/>+<sp/>p-&gt;<ref refid="struct__channel__quality_1a6d9e81ec492f497d90edc8e3f8f27128" kindref="member">average_weight</ref>)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>afh_debug(&quot;his_w=%d\r\n&quot;,<sp/>p-&gt;history_weight);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct__channel__quality_1a6d9e81ec492f497d90edc8e3f8f27128" kindref="member">average_weight</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__afh_8c_1ad592cad4dd75c346be2ac2d61478aa07" kindref="member">AFH_input_FromEventIsr</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*link,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel_index)</highlight></codeline>
<codeline lineno="441"><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__afh_8c_1a06fc87d81c62e9abb8790b6e5713c55baf602a728c42b93395d40e86a5cbb084f" kindref="member">AFH_INPUT_READY</ref><sp/>!=<sp/>atomic_read(&amp;<ref refid="ll__afh_8c_1a3421f3ca17315f03e7508eea1ac1997f" kindref="member">afh_pend</ref>))<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__channel__quality" kindref="compound">_channel_quality</ref><sp/>*current_channel<sp/>=<sp/>&amp;channel_quality[channel_index];</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>current<sp/>channel<sp/>weight<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="ll__afh_8c_1a9d3ab867025491e3f202eec06fde85a5" kindref="member">algorithm_of_weight</ref>(link,<sp/>current_channel);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FALSE<sp/>==<sp/>ret)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>resume<sp/>the<sp/>ll<sp/>thread<sp/>to<sp/>update<sp/>new<sp/>channel<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>atomic_set(&amp;<ref refid="ll__afh_8c_1a3421f3ca17315f03e7508eea1ac1997f" kindref="member">afh_pend</ref>,<sp/><ref refid="ll__afh_8c_1a06fc87d81c62e9abb8790b6e5713c55baf9864f4fe690c6b9e5b5fc9b21af97e1" kindref="member">AFH_OUTPUT_START</ref>);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>thread_resume(&amp;<ref refid="ll__afh_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>-&gt;thread);</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__afh_8c_1a5f24747d7126a02e6a462dba8a9e2feb" kindref="member">AFH_input_FromRxIsr</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct__input__info" kindref="compound">_input_info</ref><sp/>*input)</highlight></codeline>
<codeline lineno="461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__afh_8c_1a06fc87d81c62e9abb8790b6e5713c55baf602a728c42b93395d40e86a5cbb084f" kindref="member">AFH_INPUT_READY</ref><sp/>!=<sp/>atomic_read(&amp;<ref refid="ll__afh_8c_1a3421f3ca17315f03e7508eea1ac1997f" kindref="member">afh_pend</ref>))<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__channel__quality" kindref="compound">_channel_quality</ref><sp/>*current_channel<sp/>=<sp/>&amp;channel_quality[input-&gt;<ref refid="struct__input__info_1aa44a107bcccb29a432f7e94c41fd4626" kindref="member">channel_index</ref>];</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a4393d7b6ecdd9f3371e031e9d40a0335" kindref="member">AFH_ASSERT</ref>((current_channel-&gt;<ref refid="struct__channel__quality_1a753df6bff1de4051454d0ec76c377d0a" kindref="member">rx_cnt</ref><sp/>+<sp/>1)<sp/>&lt;=<sp/><ref refid="ll__afh_8c_1a1e5d0d356c54a8d50edae78818e843a1" kindref="member">U12_MAX_LIMIT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;overflow:0x%x&quot;</highlight><highlight class="normal">,<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a753df6bff1de4051454d0ec76c377d0a" kindref="member">rx_cnt</ref>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a20acca67dde05d2f6b340bfe73f1f678" kindref="member">expected_rx_cnt</ref><sp/>=<sp/>++current_channel-&gt;<ref refid="struct__channel__quality_1a753df6bff1de4051454d0ec76c377d0a" kindref="member">rx_cnt</ref>;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input-&gt;<ref refid="struct__input__info_1ae065f845698ee33dec95d834eb99f33b" kindref="member">md</ref>)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a4393d7b6ecdd9f3371e031e9d40a0335" kindref="member">AFH_ASSERT</ref>((current_channel-&gt;<ref refid="struct__channel__quality_1a20acca67dde05d2f6b340bfe73f1f678" kindref="member">expected_rx_cnt</ref><sp/>+<sp/>1)<sp/>&lt;=<sp/><ref refid="ll__afh_8c_1a1e5d0d356c54a8d50edae78818e843a1" kindref="member">U12_MAX_LIMIT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;overflow:0x%x&quot;</highlight><highlight class="normal">,<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a20acca67dde05d2f6b340bfe73f1f678" kindref="member">expected_rx_cnt</ref>);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a20acca67dde05d2f6b340bfe73f1f678" kindref="member">expected_rx_cnt</ref>++;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current_channel-&gt;<ref refid="struct__channel__quality_1a09342210d579e23924903731f1c4198a" kindref="member">rx_rssi_average</ref><sp/>&lt;<sp/>0)<sp/>&amp;&amp;<sp/>(input-&gt;<ref refid="struct__input__info_1a96e761481fcef73ede48f2f8d95d46c7" kindref="member">rssi</ref><sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a4393d7b6ecdd9f3371e031e9d40a0335" kindref="member">AFH_ASSERT</ref>((s16)(current_channel-&gt;<ref refid="struct__channel__quality_1a09342210d579e23924903731f1c4198a" kindref="member">rx_rssi_average</ref><sp/>+<sp/>input-&gt;<ref refid="struct__input__info_1a96e761481fcef73ede48f2f8d95d46c7" kindref="member">rssi</ref>)<sp/>&lt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;-overflow:%d,<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a09342210d579e23924903731f1c4198a" kindref="member">rx_rssi_average</ref>,<sp/>input-&gt;<ref refid="struct__input__info_1a96e761481fcef73ede48f2f8d95d46c7" kindref="member">rssi</ref>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current_channel-&gt;<ref refid="struct__channel__quality_1a09342210d579e23924903731f1c4198a" kindref="member">rx_rssi_average</ref><sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>(input-&gt;<ref refid="struct__input__info_1a96e761481fcef73ede48f2f8d95d46c7" kindref="member">rssi</ref><sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a4393d7b6ecdd9f3371e031e9d40a0335" kindref="member">AFH_ASSERT</ref>((s16)(current_channel-&gt;<ref refid="struct__channel__quality_1a09342210d579e23924903731f1c4198a" kindref="member">rx_rssi_average</ref><sp/>+<sp/>input-&gt;<ref refid="struct__input__info_1a96e761481fcef73ede48f2f8d95d46c7" kindref="member">rssi</ref>)<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;+overflow:%d,<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a09342210d579e23924903731f1c4198a" kindref="member">rx_rssi_average</ref>,<sp/>input-&gt;<ref refid="struct__input__info_1a96e761481fcef73ede48f2f8d95d46c7" kindref="member">rssi</ref>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a4393d7b6ecdd9f3371e031e9d40a0335" kindref="member">AFH_ASSERT</ref>((current_channel-&gt;<ref refid="struct__channel__quality_1a09342210d579e23924903731f1c4198a" kindref="member">rx_rssi_average</ref><sp/>+<sp/>input-&gt;<ref refid="struct__input__info_1a96e761481fcef73ede48f2f8d95d46c7" kindref="member">rssi</ref>)<sp/>&gt;=<sp/><ref refid="ll__afh_8c_1ab72cdee251f9107b020c634646c87d1b" kindref="member">S16_MIN_LIMIT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-overflow:%d,<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a09342210d579e23924903731f1c4198a" kindref="member">rx_rssi_average</ref>,<sp/>input-&gt;<ref refid="struct__input__info_1a96e761481fcef73ede48f2f8d95d46c7" kindref="member">rssi</ref>);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a4393d7b6ecdd9f3371e031e9d40a0335" kindref="member">AFH_ASSERT</ref>((current_channel-&gt;<ref refid="struct__channel__quality_1a09342210d579e23924903731f1c4198a" kindref="member">rx_rssi_average</ref><sp/>+<sp/>input-&gt;<ref refid="struct__input__info_1a96e761481fcef73ede48f2f8d95d46c7" kindref="member">rssi</ref>)<sp/>&lt;=<sp/><ref refid="ll__afh_8c_1a1790cf8e7506da554bc1acab1d011cd2" kindref="member">S16_MAX_LIMIT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;+overflow:%d,<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a09342210d579e23924903731f1c4198a" kindref="member">rx_rssi_average</ref>,<sp/>input-&gt;<ref refid="struct__input__info_1a96e761481fcef73ede48f2f8d95d46c7" kindref="member">rssi</ref>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>current_channel-&gt;<ref refid="struct__channel__quality_1a09342210d579e23924903731f1c4198a" kindref="member">rx_rssi_average</ref><sp/>+=<sp/>input-&gt;<ref refid="struct__input__info_1a96e761481fcef73ede48f2f8d95d46c7" kindref="member">rssi</ref>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>log_info(&quot;rssi=%d<sp/>%d<sp/><sp/>&quot;,<sp/>current_channel-&gt;rx_rssi_average,<sp/>input-&gt;rssi);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__afh_8c_1aa1f77e6afdd628909ff251aa46d49d2e" kindref="member">ll_channel_map_print</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a4b9b4e8fafec544e465d90bcd9c781d2" kindref="member">afh_warn</ref>(</highlight><highlight class="stringliteral">&quot;ch:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="ll__afh_8c_1a4260224e301c33c285aa639e9c6e96ca" kindref="member">DATA_CHANNEL_NUMS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__afh_8c_1a49b19c98f399665e878f43d2bc9113e8" kindref="member">new_channel_map</ref>[<ref refid="ll__afh_8c_1a7f622febfac431b0a2c967b85201e5c2" kindref="member">GET_BYTE</ref>(i)]<sp/>&amp;<sp/>BIT(<ref refid="ll__afh_8c_1ab6115ef10c1f915c8c47e95361e5419d" kindref="member">GET_BIT</ref>(i)))<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a4b9b4e8fafec544e465d90bcd9c781d2" kindref="member">afh_warn</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a4b9b4e8fafec544e465d90bcd9c781d2" kindref="member">afh_warn</ref>(</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AFH_ALGORITHM_WAY<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__afh_8c_1afd715995fa3b2672a0df0df5e2e40a8a" kindref="member">AFH_output_UpdateChannelMap</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*link)</highlight></codeline>
<codeline lineno="504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__afh_8c_1a06fc87d81c62e9abb8790b6e5713c55baf9864f4fe690c6b9e5b5fc9b21af97e1" kindref="member">AFH_OUTPUT_START</ref><sp/>!=<sp/>atomic_read(&amp;<ref refid="ll__afh_8c_1a3421f3ca17315f03e7508eea1ac1997f" kindref="member">afh_pend</ref>))<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;+++<sp/>AFH<sp/>OUTPUT<sp/>START<sp/>\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>higher<sp/>history_weight<sp/>channel<sp/>retry<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>retry_nums;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>byte,<sp/>bit;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>pseudo_random_genrate((u8<sp/>*)&amp;retry_nums,<sp/>1);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>retry_nums<sp/>=<sp/>btctler_get_rand_from_assign_range(retry_nums,<sp/><ref refid="ll__afh_8c_1a686a991566cf9905efda47511234bf61" kindref="member">MIN_RETRY_NUMS</ref>,<sp/><ref refid="ll__afh_8c_1ade3e9e99eef1d7792d837a8044279dec" kindref="member">MAX_RETRY_NUMS</ref>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a5ce136352acda1caad8bb096e6691763" kindref="member">new_online_channels_nums</ref><sp/>+=<sp/>retry_nums;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(retry_nums--)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/>=<sp/><ref refid="ll__afh_8c_1a7f622febfac431b0a2c967b85201e5c2" kindref="member">GET_BYTE</ref>(<ref refid="ll__afh_8c_1a5176b8881ebc22196ad2e493767ba616" kindref="member">CHANNEL_ID</ref>(<ref refid="ll__afh_8c_1a5f6af41985bd2c2362e1b6a9f87f0e03" kindref="member">bad_ch_list_head</ref>.prev));</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit<sp/>=<sp/><ref refid="ll__afh_8c_1ab6115ef10c1f915c8c47e95361e5419d" kindref="member">GET_BIT</ref>(<ref refid="ll__afh_8c_1a5176b8881ebc22196ad2e493767ba616" kindref="member">CHANNEL_ID</ref>(<ref refid="ll__afh_8c_1a5f6af41985bd2c2362e1b6a9f87f0e03" kindref="member">bad_ch_list_head</ref>.prev));</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a49b19c98f399665e878f43d2bc9113e8" kindref="member">new_channel_map</ref>[byte]<sp/>|=<sp/>BIT(bit);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list_del(<ref refid="ll__afh_8c_1a5f6af41985bd2c2362e1b6a9f87f0e03" kindref="member">bad_ch_list_head</ref>.prev);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>delete<sp/>new<sp/>bad<sp/>channel<sp/>list,<sp/>add<sp/>to<sp/>bad<sp/>channel<sp/>list<sp/>and<sp/>sort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__channel__quality" kindref="compound">_channel_quality</ref><sp/>*p,<sp/>*n;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>list_for_each_entry_safe(p,<sp/>n,<sp/>&amp;new_bad_ch_list_head,<sp/>entry)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a8cd87cc10b493870de19dfdd19b7926f" kindref="member">afh_debug</ref>(</highlight><highlight class="stringliteral">&quot;ch=%2d\r\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="ll__afh_8c_1a5176b8881ebc22196ad2e493767ba616" kindref="member">CHANNEL_ID</ref>(p));</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a8cd87cc10b493870de19dfdd19b7926f" kindref="member">afh_debug</ref>(</highlight><highlight class="stringliteral">&quot;p=0x%x\r\n&quot;</highlight><highlight class="normal">,<sp/>p);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a8cd87cc10b493870de19dfdd19b7926f" kindref="member">afh_debug</ref>(</highlight><highlight class="stringliteral">&quot;head=0x%x\r\n&quot;</highlight><highlight class="normal">,<sp/>&amp;new_bad_ch_list_head);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/>=<sp/><ref refid="ll__afh_8c_1a7f622febfac431b0a2c967b85201e5c2" kindref="member">GET_BYTE</ref>(<ref refid="ll__afh_8c_1a5176b8881ebc22196ad2e493767ba616" kindref="member">CHANNEL_ID</ref>(p));</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit<sp/>=<sp/><ref refid="ll__afh_8c_1ab6115ef10c1f915c8c47e95361e5419d" kindref="member">GET_BIT</ref>(<ref refid="ll__afh_8c_1a5176b8881ebc22196ad2e493767ba616" kindref="member">CHANNEL_ID</ref>(p));</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a49b19c98f399665e878f43d2bc9113e8" kindref="member">new_channel_map</ref>[byte]<sp/>&amp;=<sp/>~BIT(bit);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list_del(p);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1ad9393ac1815b46780df3fc94e7cf0ec1" kindref="member">channle_weight_sort</ref>(p,<sp/>&amp;<ref refid="ll__afh_8c_1a5f6af41985bd2c2362e1b6a9f87f0e03" kindref="member">bad_ch_list_head</ref>);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>update<sp/>channel<sp/>map<sp/>by<sp/>controller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a5e860aba8294c0865bab74c72ce3a8b2" kindref="member">le_channel_map_update</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structhost__channel__classification" kindref="compound">host_channel_classification</ref><sp/>*)<ref refid="ll__afh_8c_1a49b19c98f399665e878f43d2bc9113e8" kindref="member">new_channel_map</ref>);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1aa1f77e6afdd628909ff251aa46d49d2e" kindref="member">ll_channel_map_print</ref>();</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>atomic_set(&amp;<ref refid="ll__afh_8c_1a3421f3ca17315f03e7508eea1ac1997f" kindref="member">afh_pend</ref>,<sp/><ref refid="ll__afh_8c_1a06fc87d81c62e9abb8790b6e5713c55ba4036caebdb09384210a115a457bed89d" kindref="member">AFH_OUTPUT_CONTINUE</ref>);</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(AFH_ALGORITHM_WAY<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__afh_8c_1afd715995fa3b2672a0df0df5e2e40a8a" kindref="member">AFH_output_UpdateChannelMap</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*link)</highlight></codeline>
<codeline lineno="547"><highlight class="normal">{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__afh_8c_1a06fc87d81c62e9abb8790b6e5713c55baf9864f4fe690c6b9e5b5fc9b21af97e1" kindref="member">AFH_OUTPUT_START</ref><sp/>!=<sp/>atomic_read(&amp;<ref refid="ll__afh_8c_1a3421f3ca17315f03e7508eea1ac1997f" kindref="member">afh_pend</ref>))<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;+++<sp/>AFH<sp/>OUTPUT<sp/>START<sp/>\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>byte,<sp/>bit;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__channel__quality" kindref="compound">_channel_quality</ref><sp/>*p,<sp/>*n;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>higher<sp/>history_weight<sp/>channel<sp/>retry<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a5ce136352acda1caad8bb096e6691763" kindref="member">new_online_channels_nums</ref><sp/>-=<sp/><ref refid="ll__afh_8c_1ae0fff37180cb2ff37aca07680deff1b8" kindref="member">REDUCE_ONLINE_NUMS</ref>;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__afh_8c_1a5ce136352acda1caad8bb096e6691763" kindref="member">new_online_channels_nums</ref><sp/>&lt;<sp/><ref refid="ll__afh_8c_1ac333c8b9f6812639598cceca38afd6b8" kindref="member">MIN_ONLINE_CHANNEL_NUMS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8<sp/>retry_nums;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8<sp/>min_retry_nums<sp/>=<sp/><ref refid="ll__afh_8c_1ac333c8b9f6812639598cceca38afd6b8" kindref="member">MIN_ONLINE_CHANNEL_NUMS</ref><sp/>-<sp/><ref refid="ll__afh_8c_1a5ce136352acda1caad8bb096e6691763" kindref="member">new_online_channels_nums</ref>;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8<sp/>max_retry_nums<sp/>=<sp/><ref refid="ll__afh_8c_1afd8aa7348f59062de78e681b2caaf048" kindref="member">MAX_ONLINE_CHANNEL_NUMS</ref><sp/>-<sp/><ref refid="ll__afh_8c_1a5ce136352acda1caad8bb096e6691763" kindref="member">new_online_channels_nums</ref>;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pseudo_random_genrate((u8<sp/>*)&amp;retry_nums,<sp/>1);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retry_nums<sp/>=<sp/>btctler_get_rand_from_assign_range(retry_nums,<sp/>min_retry_nums,<sp/>max_retry_nums);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_online_channels_nums<sp/>+=<sp/>retry_nums;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(retry_nums--)<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="ll__afh_8c_1a5f6af41985bd2c2362e1b6a9f87f0e03" kindref="member">bad_ch_list_head</ref>.next;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="struct__channel__quality_1ae9139898d5ef4d9ffd5ff1eb0bbaf482" kindref="member">history_weight</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putchar(</highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="ll__afh_8c_1a5f6af41985bd2c2362e1b6a9f87f0e03" kindref="member">bad_ch_list_head</ref>.prev;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>afh_debug(&quot;bad_ch=<sp/>%d<sp/><sp/>&quot;,<sp/>CHANNEL_ID(bad_ch_list_head.prev));<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/>=<sp/><ref refid="ll__afh_8c_1a7f622febfac431b0a2c967b85201e5c2" kindref="member">GET_BYTE</ref>(<ref refid="ll__afh_8c_1a5176b8881ebc22196ad2e493767ba616" kindref="member">CHANNEL_ID</ref>(p));</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit<sp/>=<sp/><ref refid="ll__afh_8c_1ab6115ef10c1f915c8c47e95361e5419d" kindref="member">GET_BIT</ref>(<ref refid="ll__afh_8c_1a5176b8881ebc22196ad2e493767ba616" kindref="member">CHANNEL_ID</ref>(p));</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a49b19c98f399665e878f43d2bc9113e8" kindref="member">new_channel_map</ref>[byte]<sp/>|=<sp/>BIT(bit);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list_del(p);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>afh_debug(&quot;\r\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(u8<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="ll__afh_8c_1ae0fff37180cb2ff37aca07680deff1b8" kindref="member">REDUCE_ONLINE_NUMS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="ll__afh_8c_1a4c056244bd921f5b64456a88dfa4299a" kindref="member">good_ch_list_head</ref>.next;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>afh_debug(&quot;good_ch=<sp/>%d<sp/><sp/>&quot;,<sp/>CHANNEL_ID(p));<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/>=<sp/><ref refid="ll__afh_8c_1a7f622febfac431b0a2c967b85201e5c2" kindref="member">GET_BYTE</ref>(<ref refid="ll__afh_8c_1a5176b8881ebc22196ad2e493767ba616" kindref="member">CHANNEL_ID</ref>(p));</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit<sp/>=<sp/><ref refid="ll__afh_8c_1ab6115ef10c1f915c8c47e95361e5419d" kindref="member">GET_BIT</ref>(<ref refid="ll__afh_8c_1a5176b8881ebc22196ad2e493767ba616" kindref="member">CHANNEL_ID</ref>(p));</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a49b19c98f399665e878f43d2bc9113e8" kindref="member">new_channel_map</ref>[byte]<sp/>&amp;=<sp/>~BIT(bit);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list_del(p);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1ad9393ac1815b46780df3fc94e7cf0ec1" kindref="member">channle_weight_sort</ref>(p,<sp/>&amp;<ref refid="ll__afh_8c_1a5f6af41985bd2c2362e1b6a9f87f0e03" kindref="member">bad_ch_list_head</ref>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>afh_debug(&quot;\r\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>list_for_each_entry_safe(p,<sp/>n,<sp/>&amp;<ref refid="ll__afh_8c_1a4c056244bd921f5b64456a88dfa4299a" kindref="member">good_ch_list_head</ref>,<sp/>entry)<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list_del(p);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>update<sp/>channel<sp/>map<sp/>by<sp/>controller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a5e860aba8294c0865bab74c72ce3a8b2" kindref="member">le_channel_map_update</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structhost__channel__classification" kindref="compound">host_channel_classification</ref><sp/>*)<ref refid="ll__afh_8c_1a49b19c98f399665e878f43d2bc9113e8" kindref="member">new_channel_map</ref>);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1aa1f77e6afdd628909ff251aa46d49d2e" kindref="member">ll_channel_map_print</ref>();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>atomic_set(&amp;<ref refid="ll__afh_8c_1a3421f3ca17315f03e7508eea1ac1997f" kindref="member">afh_pend</ref>,<sp/><ref refid="ll__afh_8c_1a06fc87d81c62e9abb8790b6e5713c55ba4036caebdb09384210a115a457bed89d" kindref="member">AFH_OUTPUT_CONTINUE</ref>);</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Link<sp/>Layer<sp/>API</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__afh_8c_1a418a3b39b804f31fca736d577a16e608" kindref="member">master_ll_update_channel_map_done</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>atomic_set(&amp;<ref refid="ll__afh_8c_1a3421f3ca17315f03e7508eea1ac1997f" kindref="member">afh_pend</ref>,<sp/><ref refid="ll__afh_8c_1a06fc87d81c62e9abb8790b6e5713c55ba484b4cfe1983bd13dc6b6c52d56fde44" kindref="member">AFH_OUTPUT_COMPLETE</ref>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>atomic_set(&amp;<ref refid="ll__afh_8c_1a3421f3ca17315f03e7508eea1ac1997f" kindref="member">afh_pend</ref>,<sp/><ref refid="ll__afh_8c_1a06fc87d81c62e9abb8790b6e5713c55baf602a728c42b93395d40e86a5cbb084f" kindref="member">AFH_INPUT_READY</ref>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;---<sp/>AFH<sp/>OUTPUT<sp/>DONE<sp/>\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__afh_8c_1a5005e394524f3252061f4a7749e736b9" kindref="member">conn_evt_probe_evtchannel_handler</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*link,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>param)</highlight></codeline>
<codeline lineno="619"><highlight class="normal">{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_ROLES_IS_SUPPORT_OPTIMIZE(LE_MASTER);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="link__layer_8h_1ae10f97c34c30ab4d52daa0108608dd2b" kindref="member">ROLE_IS_SLAVE</ref>(link)<sp/>||<sp/>(link-&gt;<ref refid="structle__link_1a3d4a7395fc00c95d0f8edebb98d87721" kindref="member">state</ref><sp/>!=<sp/><ref refid="link__layer_8h_1ac36f475ca5b446f4fde4c9b90bec77c8a921891dd756e7e92fb4f8c7b353f8726" kindref="member">LL_CONNECTION_ESTABLISHED</ref>))<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_AFH_IS_SUPPORT_OPTIMIZE();</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1ad592cad4dd75c346be2ac2d61478aa07" kindref="member">AFH_input_FromEventIsr</ref>(link,<sp/>param);</highlight></codeline>
<codeline lineno="629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__afh_8c_1ac1bcacaf9d045509ad21553ec0da301c" kindref="member">conn_rx_probe_channel_handler</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*link,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>ble_rx<sp/>*rx)</highlight></codeline>
<codeline lineno="632"><highlight class="normal">{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_ROLES_IS_SUPPORT_OPTIMIZE(LE_MASTER);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_AFH_IS_SUPPORT_OPTIMIZE();</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="link__layer_8h_1ae10f97c34c30ab4d52daa0108608dd2b" kindref="member">ROLE_IS_SLAVE</ref>(link)<sp/>||<sp/>(link-&gt;<ref refid="structle__link_1a3d4a7395fc00c95d0f8edebb98d87721" kindref="member">state</ref><sp/>!=<sp/><ref refid="link__layer_8h_1ac36f475ca5b446f4fde4c9b90bec77c8a921891dd756e7e92fb4f8c7b353f8726" kindref="member">LL_CONNECTION_ESTABLISHED</ref>))<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__input__info" kindref="compound">_input_info</ref><sp/>info<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="struct__input__info_1aa44a107bcccb29a432f7e94c41fd4626" kindref="member">channel_index</ref><sp/>=<sp/>rx-&gt;channel,</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rssi<sp/>=<sp/>rx-&gt;rssi,</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.md<sp/>=<sp/>rx-&gt;md,</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a5f24747d7126a02e6a462dba8a9e2feb" kindref="member">AFH_input_FromRxIsr</ref>(&amp;info);</highlight></codeline>
<codeline lineno="648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__afh_8c_1a12ab4e73484b34534907707fbac70c98" kindref="member">ll_update_channel_map_post_handler</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*link)</highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_ROLES_IS_SUPPORT_OPTIMIZE(LE_MASTER);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_AFH_IS_SUPPORT_OPTIMIZE();</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="link__layer_8h_1ae10f97c34c30ab4d52daa0108608dd2b" kindref="member">ROLE_IS_SLAVE</ref>(link)<sp/>||<sp/>(link-&gt;<ref refid="structle__link_1a3d4a7395fc00c95d0f8edebb98d87721" kindref="member">state</ref><sp/>!=<sp/><ref refid="link__layer_8h_1ac36f475ca5b446f4fde4c9b90bec77c8a921891dd756e7e92fb4f8c7b353f8726" kindref="member">LL_CONNECTION_ESTABLISHED</ref>))<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1afd715995fa3b2672a0df0df5e2e40a8a" kindref="member">AFH_output_UpdateChannelMap</ref>(link);</highlight></codeline>
<codeline lineno="661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__afh_8c_1af13ece4d6b4e782897f07f64cfc9b322" kindref="member">ll_channel_info_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>ble_conn_param<sp/>*conn_param)</highlight></codeline>
<codeline lineno="664"><highlight class="normal">{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_ROLES_IS_SUPPORT_OPTIMIZE(LE_MASTER);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_AFH_IS_SUPPORT_OPTIMIZE();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;--func=%s&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__afh_8c_1a65db42b248368da0bf94942d3bcc5bcb" kindref="member">AFH_info_init</ref>(conn_param);</highlight></codeline>
<codeline lineno="672"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_afh.c"/>
  </compounddef>
</doxygen>
