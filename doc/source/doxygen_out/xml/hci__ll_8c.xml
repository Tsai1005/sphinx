<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="hci__ll_8c" kind="file" language="C++">
    <compoundname>hci_ll.c</compoundname>
    <includes local="yes">bluetooth.h</includes>
    <includes local="yes">btctrler_task.h</includes>
    <includes local="yes">hci_controller.h</includes>
    <includes refid="link__layer_8h" local="yes">ble/link_layer.h</includes>
    <includes local="yes">ble/hci_ll.h</includes>
    <includes local="yes">tomcrypt.h</includes>
    <includes local="yes">misc_interface.h</includes>
    <includes local="yes">hw_dma.h</includes>
    <includes local="yes">common/debug.h</includes>
    <incdepgraph>
      <node id="2886">
        <label>os/os_type.h</label>
      </node>
      <node id="2882">
        <label>common/atomic.h</label>
      </node>
      <node id="2896">
        <label>common/lbuf.h</label>
      </node>
      <node id="2879">
        <label>common/list.h</label>
      </node>
      <node id="2875">
        <label>btctrler_task.h</label>
      </node>
      <node id="2885">
        <label>common/thread.h</label>
      </node>
      <node id="2888">
        <label>ble/ll_adv.h</label>
        <link refid="ll__adv_8h"/>
        <childnode refid="2880" relation="include">
        </childnode>
      </node>
      <node id="2905">
        <label>common/debug.h</label>
      </node>
      <node id="2890">
        <label>ble/ll_init.h</label>
        <link refid="ll__init_8h"/>
        <childnode refid="2880" relation="include">
        </childnode>
      </node>
      <node id="2892">
        <label>data_extension.h</label>
        <link refid="data__extension_8h"/>
        <childnode refid="2878" relation="include">
        </childnode>
      </node>
      <node id="2895">
        <label>ble/ll_iso.h</label>
        <link refid="ll__iso_8h"/>
        <childnode refid="2883" relation="include">
        </childnode>
        <childnode refid="2896" relation="include">
        </childnode>
        <childnode refid="2885" relation="include">
        </childnode>
      </node>
      <node id="2878">
        <label>typedef.h</label>
      </node>
      <node id="2873">
        <label>/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c</label>
        <link refid="hci_ll.c"/>
        <childnode refid="2874" relation="include">
        </childnode>
        <childnode refid="2875" relation="include">
        </childnode>
        <childnode refid="2876" relation="include">
        </childnode>
        <childnode refid="2877" relation="include">
        </childnode>
        <childnode refid="2901" relation="include">
        </childnode>
        <childnode refid="2902" relation="include">
        </childnode>
        <childnode refid="2903" relation="include">
        </childnode>
        <childnode refid="2904" relation="include">
        </childnode>
        <childnode refid="2905" relation="include">
        </childnode>
      </node>
      <node id="2884">
        <label>white_list.h</label>
        <link refid="white__list_8h"/>
        <childnode refid="2878" relation="include">
        </childnode>
      </node>
      <node id="2898">
        <label>audio_codec.h</label>
        <link refid="audio__codec_8h"/>
        <childnode refid="2883" relation="include">
        </childnode>
      </node>
      <node id="2889">
        <label>ble/ll_scan.h</label>
        <link refid="ll__scan_8h"/>
        <childnode refid="2880" relation="include">
        </childnode>
      </node>
      <node id="2874">
        <label>bluetooth.h</label>
      </node>
      <node id="2887">
        <label>ble/llcp.h</label>
        <link refid="llcp_8h"/>
        <childnode refid="2878" relation="include">
        </childnode>
        <childnode refid="2883" relation="include">
        </childnode>
      </node>
      <node id="2893">
        <label>multiple_phys.h</label>
        <link refid="multiple__phys_8h"/>
        <childnode refid="2878" relation="include">
        </childnode>
      </node>
      <node id="2891">
        <label>resolve_list.h</label>
        <link refid="resolve__list_8h"/>
        <childnode refid="2878" relation="include">
        </childnode>
      </node>
      <node id="2880">
        <label>ble_interface.h</label>
      </node>
      <node id="2902">
        <label>tomcrypt.h</label>
      </node>
      <node id="2894">
        <label>ble/ll_cte.h</label>
        <link refid="ll__cte_8h"/>
        <childnode refid="2883" relation="include">
        </childnode>
      </node>
      <node id="2876">
        <label>hci_controller.h</label>
      </node>
      <node id="2881">
        <label>common/sys_timer.h</label>
      </node>
      <node id="2901">
        <label>ble/hci_ll.h</label>
      </node>
      <node id="2877">
        <label>ble/link_layer.h</label>
        <link refid="link__layer_8h"/>
        <childnode refid="2878" relation="include">
        </childnode>
        <childnode refid="2879" relation="include">
        </childnode>
        <childnode refid="2880" relation="include">
        </childnode>
        <childnode refid="2881" relation="include">
        </childnode>
        <childnode refid="2882" relation="include">
        </childnode>
        <childnode refid="2883" relation="include">
        </childnode>
        <childnode refid="2884" relation="include">
        </childnode>
        <childnode refid="2885" relation="include">
        </childnode>
        <childnode refid="2886" relation="include">
        </childnode>
        <childnode refid="2887" relation="include">
        </childnode>
        <childnode refid="2888" relation="include">
        </childnode>
        <childnode refid="2889" relation="include">
        </childnode>
        <childnode refid="2890" relation="include">
        </childnode>
        <childnode refid="2891" relation="include">
        </childnode>
        <childnode refid="2892" relation="include">
        </childnode>
        <childnode refid="2893" relation="include">
        </childnode>
        <childnode refid="2894" relation="include">
        </childnode>
        <childnode refid="2895" relation="include">
        </childnode>
        <childnode refid="2897" relation="include">
        </childnode>
        <childnode refid="2899" relation="include">
        </childnode>
        <childnode refid="2900" relation="include">
        </childnode>
      </node>
      <node id="2883">
        <label>ll_defines.h</label>
        <link refid="ll__defines_8h"/>
        <childnode refid="2878" relation="include">
        </childnode>
      </node>
      <node id="2899">
        <label>ble/ll_cis.h</label>
        <link refid="ll__cis_8h"/>
        <childnode refid="2895" relation="include">
        </childnode>
        <childnode refid="2877" relation="include">
        </childnode>
      </node>
      <node id="2904">
        <label>hw_dma.h</label>
      </node>
      <node id="2897">
        <label>ble/ll_bis.h</label>
        <link refid="ll__bis_8h"/>
        <childnode refid="2895" relation="include">
        </childnode>
        <childnode refid="2898" relation="include">
        </childnode>
      </node>
      <node id="2900">
        <label>ble/ll_pc.h</label>
        <link refid="ll__pc_8h"/>
        <childnode refid="2883" relation="include">
        </childnode>
      </node>
      <node id="2903">
        <label>misc_interface.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="union__adv__data" prot="public">_adv_data</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="hci__ll_8c_1a6c6991cba0e2995d7d9aec73e0324317" prot="public" static="no">
        <name>LOG_TAG_CONST</name>
        <initializer>HCI_LL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="23" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hci__ll_8c_1a7ce0df38eb467e59f209470c8f5ac4e6" prot="public" static="no">
        <name>LOG_TAG</name>
        <initializer>&quot;[HCI LL]&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="24" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hci__ll_8c_1a69321c8a2a0b07a07fb5088e82e25eb0" prot="public" static="no">
        <name>LOG_INFO_ENABLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="25" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hci__ll_8c_1a04135f631fe91199f05b1d816dda8756" prot="public" static="no">
        <name>LOG_DUMP_ENABLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="26" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hci__ll_8c_1a996a3658d1dc07709f7962fa7c464e39" prot="public" static="no">
        <name>HAVE_CMD_BUFF_EN</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="36" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="hci__ll_8c_1a073b3c35a82efb22a6b3b4196b0cee22" prot="public" static="yes" mutable="no">
        <type>u32</type>
        <definition>u32 hci_cmd_tmp_buff[32]</definition>
        <argsstring>[32]</argsstring>
        <name>hci_cmd_tmp_buff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="39" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hci__ll_8c_1a34ccea6ef5826bd08e5303ba92dbf6ae" prot="public" static="yes" mutable="no">
        <type>hci_ll_param_t</type>
        <definition>hci_ll_param_t config_hci_ll_param</definition>
        <argsstring></argsstring>
        <name>config_hci_ll_param</name>
        <initializer>= {
    .Own_Address_Type = 0,
    .Adv_Filter_Policy = 0,
    .Scan_Filter_Policy = 0,
    .initiator_filter_policy = 0,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="43" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hci__ll_8c_1aeeff252aa3abfa4e4d3fae6c189fb84f" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char g_le_name[18]</definition>
        <argsstring>[18]</argsstring>
        <name>g_le_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="153" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hci__ll_8c_1a8dacf3eb0de58fe35ca3afb587a686d4" prot="public" static="yes" mutable="no">
        <type>const struct <ref refid="structconnection__parameter" kindref="compound">connection_parameter</ref></type>
        <definition>const struct connection_parameter create_param_default</definition>
        <argsstring></argsstring>
        <name>create_param_default</name>
        <initializer>= {
    .le_scan_interval = 60,
    .le_scan_window = 30,
    
    .peer_address_type = 0,
    .peer_address = {0, 0, 0, 0, 0, 0},
    
    .conn_interval_min = 0x6,
    .conn_interval_max = 0x20,
    .conn_latency = 0,
    .supervision_timeout = 0x180,
    .minimum_ce_length = 1,
    .maximum_ce_length = 1,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="185" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="191" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="hci__ll_8c_1acf28d249637b617a4c1cbdf202c9bdf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_init</definition>
        <argsstring>(void)</argsstring>
        <name>ll_hci_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="50" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1aa338695088a8c21f70e03f6e2f46553e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_reset</definition>
        <argsstring>(void)</argsstring>
        <name>ll_hci_reset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="55" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a7c454349609bd939408825400f2a9d15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_destory</definition>
        <argsstring>(void)</argsstring>
        <name>ll_hci_destory</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="60" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="60" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a5b21ded1a4f0e063ee7698f17c3c7f94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_set_event_mask</definition>
        <argsstring>(const u8 *mask)</argsstring>
        <name>ll_hci_set_event_mask</name>
        <param>
          <type>const u8 *</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="69" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a8deded2a4ff9e585a671f560603a1718" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_adv_set_params</definition>
        <argsstring>(uint16_t adv_int_min, uint16_t adv_int_max, uint8_t adv_type, uint8_t direct_address_type, btctler_bd_addr_t direct_address, uint8_t channel_map, uint8_t filter_policy)</argsstring>
        <name>ll_hci_adv_set_params</name>
        <param>
          <type>uint16_t</type>
          <declname>adv_int_min</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>adv_int_max</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>adv_type</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>direct_address_type</declname>
        </param>
        <param>
          <type>btctler_bd_addr_t</type>
          <declname>direct_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel_map</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>filter_policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="74" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="74" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1aa5ae3168613b0072c6355f2d6c7136e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_adv_set_data</definition>
        <argsstring>(uint8_t advertising_data_length, uint8_t *advertising_data)</argsstring>
        <name>ll_hci_adv_set_data</name>
        <param>
          <type>uint8_t</type>
          <declname>advertising_data_length</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>advertising_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="107" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="107" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1accbcf0c9b36f409e740672ddf76a0489" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_adv_scan_response_set_data</definition>
        <argsstring>(uint8_t scan_response_data_length, uint8_t *scan_response_data)</argsstring>
        <name>ll_hci_adv_scan_response_set_data</name>
        <param>
          <type>uint8_t</type>
          <declname>scan_response_data_length</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>scan_response_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="120" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="120" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1aefa2af90040d2010b07b8aec8701b927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_set_random_address</definition>
        <argsstring>(u8 *addr)</argsstring>
        <name>ll_hci_set_random_address</name>
        <param>
          <type>u8 *</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="137" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1aaf1e49da876df3f434668045f6d3ceee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 ll_hci_get_acl_data_len</definition>
        <argsstring>(void)</argsstring>
        <name>ll_hci_get_acl_data_len</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="143" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a1775007889b96592f2c8493087390780" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 ll_hci_get_acl_total_num</definition>
        <argsstring>(void)</argsstring>
        <name>ll_hci_get_acl_total_num</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="148" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1af3197b61e8e4e22920fdb43f890942e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_set_name</definition>
        <argsstring>(const char *name)</argsstring>
        <name>ll_hci_set_name</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="155" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="155" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a9149d25f26cf50ac977ae82aa6331488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_scan_set_params</definition>
        <argsstring>(uint8_t scan_type, uint16_t scan_interval, uint16_t scan_window)</argsstring>
        <name>ll_hci_scan_set_params</name>
        <param>
          <type>uint8_t</type>
          <declname>scan_type</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>scan_interval</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>scan_window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="166" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="166" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a0398a4cbfecc49f2a7816fd84ee77182" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ll_hci_adv_enable</definition>
        <argsstring>(bool enable)</argsstring>
        <name>ll_hci_adv_enable</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="179" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="179" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a2ec21cfed85459155ad76652a6b0aa55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ll_hci_scan_enable</definition>
        <argsstring>(bool enable, u8 filter_duplicates)</argsstring>
        <name>ll_hci_scan_enable</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <param>
          <type>u8</type>
          <declname>filter_duplicates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="185" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="185" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1add4c9cf43ccca17ff0ae427c085112e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ll_hci_create_conn</definition>
        <argsstring>(u8 *conn_param, u8 *addr_param)</argsstring>
        <name>ll_hci_create_conn</name>
        <param>
          <type>u8 *</type>
          <declname>conn_param</declname>
        </param>
        <param>
          <type>u8 *</type>
          <declname>addr_param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="206" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="206" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1ac2d4656ace43aac4639a3da1c21201d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ll_hci_create_conn_cancel</definition>
        <argsstring>(void)</argsstring>
        <name>ll_hci_create_conn_cancel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="225" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="225" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a9a608048b53d1da33ce1ddfb49031046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ll_hci_vendor_send_key_num</definition>
        <argsstring>(u16 conn_handle, u8 num)</argsstring>
        <name>ll_hci_vendor_send_key_num</name>
        <param>
          <type>u16</type>
          <declname>conn_handle</declname>
        </param>
        <param>
          <type>u8</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="231" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="231" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1aa2b7304a0e0ebbd4c8a74281d1765260" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ll_vendor_latency_hold_cnt</definition>
        <argsstring>(u16 conn_handle, u16 hold_cnt)</argsstring>
        <name>ll_vendor_latency_hold_cnt</name>
        <param>
          <type>u16</type>
          <declname>conn_handle</declname>
        </param>
        <param>
          <type>u16</type>
          <declname>hold_cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="237" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="237" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a5fa0187cd6972fec29c61fbcaa82a6b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ll_hci_encryption</definition>
        <argsstring>(u8 *key, u8 *plaintext_data)</argsstring>
        <name>ll_hci_encryption</name>
        <param>
          <type>u8 *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>u8 *</type>
          <declname>plaintext_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="243" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="243" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a4b58a638204121715aca436bd51bf367" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ll_hci_get_le_rand</definition>
        <argsstring>(void)</argsstring>
        <name>ll_hci_get_le_rand</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="258" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="258" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a281a058608e4dd212e7d14dc56441d9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ll_hci_start_encryption</definition>
        <argsstring>(u16 handle, u32 rand_low, u32 rand_high, u16 peer_ediv, u8 *ltk)</argsstring>
        <name>ll_hci_start_encryption</name>
        <param>
          <type>u16</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>rand_low</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>rand_high</declname>
        </param>
        <param>
          <type>u16</type>
          <declname>peer_ediv</declname>
        </param>
        <param>
          <type>u8 *</type>
          <declname>ltk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="264" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="264" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1aa75500e50b980ce381cf9994a980f635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ll_hci_long_term_key_request_reply</definition>
        <argsstring>(u16 handle, u8 *ltk)</argsstring>
        <name>ll_hci_long_term_key_request_reply</name>
        <param>
          <type>u16</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>u8 *</type>
          <declname>ltk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="278" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="278" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a85be9dfc3f43fed420e42458d7afad31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ll_hci_long_term_key_request_nagative_reply</definition>
        <argsstring>(u16 handle)</argsstring>
        <name>ll_hci_long_term_key_request_nagative_reply</name>
        <param>
          <type>u16</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="289" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="289" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1ae82e69505f122ada3449eb1f249f6d1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ll_hci_connection_update</definition>
        <argsstring>(u16 handle, u16 conn_interval_min, u16 conn_interval_max, u16 conn_latency, u16 supervision_timeout, u16 minimum_ce_length, u16 maximum_ce_length)</argsstring>
        <name>ll_hci_connection_update</name>
        <param>
          <type>u16</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>u16</type>
          <declname>conn_interval_min</declname>
        </param>
        <param>
          <type>u16</type>
          <declname>conn_interval_max</declname>
        </param>
        <param>
          <type>u16</type>
          <declname>conn_latency</declname>
        </param>
        <param>
          <type>u16</type>
          <declname>supervision_timeout</declname>
        </param>
        <param>
          <type>u16</type>
          <declname>minimum_ce_length</declname>
        </param>
        <param>
          <type>u16</type>
          <declname>maximum_ce_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="296" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="296" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a26958f498950b66d52a275b0c556f2ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ll_hci_disconnect</definition>
        <argsstring>(u16 handle, u8 reason)</argsstring>
        <name>ll_hci_disconnect</name>
        <param>
          <type>u16</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>u8</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="308" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="308" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a9e19a2fbf5866b83ced12023a518357e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ll_hci_read_local_p256_pb_key</definition>
        <argsstring>(void)</argsstring>
        <name>ll_hci_read_local_p256_pb_key</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="315" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="315" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1aceacc6cad915382a40c0389bcd74be8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ll_hci_generate_dhkey</definition>
        <argsstring>(const u8 *data, u32 size)</argsstring>
        <name>ll_hci_generate_dhkey</name>
        <param>
          <type>const u8 *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="322" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="322" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a26402e5bd1058183da458438d7ed20a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_set_data_length</definition>
        <argsstring>(u16 conn_handle, u16 tx_octets, u16 tx_time)</argsstring>
        <name>ll_hci_set_data_length</name>
        <param>
          <type>u16</type>
          <declname>conn_handle</declname>
        </param>
        <param>
          <type>u16</type>
          <declname>tx_octets</declname>
        </param>
        <param>
          <type>u16</type>
          <declname>tx_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="329" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="329" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a0ba4c4ddbb6a1799d36c2ce6f97650c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_set_ext_adv_params</definition>
        <argsstring>(u8 *data, u32 size)</argsstring>
        <name>ll_hci_set_ext_adv_params</name>
        <param>
          <type>u8 *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="337" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="337" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1add7d6dc583ff343548dbb3e8de1d931c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_set_ext_adv_data</definition>
        <argsstring>(u8 *data, u32 size)</argsstring>
        <name>ll_hci_set_ext_adv_data</name>
        <param>
          <type>u8 *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="345" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="345" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a54e0ad93d7cde18eb637a0549a4cdced" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_set_ext_adv_enable</definition>
        <argsstring>(u8 *data, u32 size)</argsstring>
        <name>ll_hci_set_ext_adv_enable</name>
        <param>
          <type>u8 *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="353" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="353" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1ae1ed5743f4e7aa6e30c54693395667d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_set_phy</definition>
        <argsstring>(u16 conn_handle, u8 all_phys, u8 tx_phy, u8 rx_phy, u16 phy_options)</argsstring>
        <name>ll_hci_set_phy</name>
        <param>
          <type>u16</type>
          <declname>conn_handle</declname>
        </param>
        <param>
          <type>u8</type>
          <declname>all_phys</declname>
        </param>
        <param>
          <type>u8</type>
          <declname>tx_phy</declname>
        </param>
        <param>
          <type>u8</type>
          <declname>rx_phy</declname>
        </param>
        <param>
          <type>u16</type>
          <declname>phy_options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="361" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="361" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1adda44554fa73b519b356409c69d5271b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_set_ext_scan_params</definition>
        <argsstring>(u8 *data, u32 size)</argsstring>
        <name>ll_hci_set_ext_scan_params</name>
        <param>
          <type>u8 *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="369" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="369" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a1a0ab9a3f99770cc28757d468ad866f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_set_ext_scan_enable</definition>
        <argsstring>(u8 *data, u32 size)</argsstring>
        <name>ll_hci_set_ext_scan_enable</name>
        <param>
          <type>u8 *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="377" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="377" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1aded0e41d057cc19758cd101c82d9c5ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_ext_create_conn</definition>
        <argsstring>(u8 *data, u32 size)</argsstring>
        <name>ll_hci_ext_create_conn</name>
        <param>
          <type>u8 *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="385" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="385" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1ae84ea842f2d51a553fd2758f8d14f43a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_set_periodic_adv_params</definition>
        <argsstring>(u8 *data, u32 size)</argsstring>
        <name>ll_hci_set_periodic_adv_params</name>
        <param>
          <type>u8 *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="393" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="393" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a3468fb4eb6015f0b110e0df8df6f0736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_set_periodic_adv_data</definition>
        <argsstring>(u8 *data, u32 size)</argsstring>
        <name>ll_hci_set_periodic_adv_data</name>
        <param>
          <type>u8 *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="402" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="402" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a70894b777b4b2df6489c059eb1d23dba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_set_periodic_adv_enable</definition>
        <argsstring>(u8 *data, u32 size)</argsstring>
        <name>ll_hci_set_periodic_adv_enable</name>
        <param>
          <type>u8 *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="411" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="411" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a1cc8bcf5b5d446dbb997825bc57dc649" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_periodic_adv_creat_sync</definition>
        <argsstring>(u8 *data, u32 size)</argsstring>
        <name>ll_hci_periodic_adv_creat_sync</name>
        <param>
          <type>u8 *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="420" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="420" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a3d656dc009d1c40a6c85cfbd3025f3a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_cmd_handler</definition>
        <argsstring>(int *cmd)</argsstring>
        <name>ll_hci_cmd_handler</name>
        <param>
          <type>int *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="429" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="429" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a3b6fb7a968146074a6701e14135d98bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_event_handler</definition>
        <argsstring>(int *msg)</argsstring>
        <name>ll_event_handler</name>
        <param>
          <type>int *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="653" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="653" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a30fb274d9cffc3ab22cf97d9dae3a9f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_hci_private_free_dma_rx</definition>
        <argsstring>(u8 *rx_head)</argsstring>
        <name>ll_hci_private_free_dma_rx</name>
        <param>
          <type>u8 *</type>
          <declname>rx_head</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="667" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="667" bodyend="672"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a96391ec96506f7515a0c63498c05da43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hci_ll_param_t *</type>
        <definition>hci_ll_param_t* ll_hci_param_config_get</definition>
        <argsstring>(void)</argsstring>
        <name>ll_hci_param_config_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="675" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="675" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1aeebdb1c20c26ddbca0e9551106f03a96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int le_controller_get_mac</definition>
        <argsstring>(void *addr)</argsstring>
        <name>le_controller_get_mac</name>
        <param>
          <type>void *</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="680" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll_cmds.c" bodystart="655" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1a44bacfe5ea2134704dc94464edefa973" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int le_controller_get_random_mac</definition>
        <argsstring>(void *addr)</argsstring>
        <name>le_controller_get_random_mac</name>
        <param>
          <type>void *</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="681" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll_cmds.c" bodystart="670" bodyend="676"/>
      </memberdef>
      <memberdef kind="function" id="hci__ll_8c_1ae4b35f54bae5945839793bf0aff5c17f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hci_ll_get_device_address</definition>
        <argsstring>(uint8_t *addr_type, u8 *addr)</argsstring>
        <name>hci_ll_get_device_address</name>
        <param>
          <type>uint8_t *</type>
          <declname>addr_type</declname>
        </param>
        <param>
          <type>u8 *</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" line="682" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c" bodystart="682" bodyend="693"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*********************************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Filename<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>hci_ll.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Description<sp/><sp/><sp/><sp/><sp/>:<sp/>对应Vendor<sp/>HCI<sp/>使用，去掉命令解释</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Author<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Bingquan</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Email<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bingquan_cai@zh-jieli.com</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Last<sp/>modifiled<sp/><sp/>:<sp/>2018-12-03<sp/>19:50</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Copyright:(c)JIELI<sp/><sp/>2011-2017<sp/><sp/>@<sp/>,<sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*********************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;bluetooth.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;btctrler_task.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hci_controller.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="link__layer_8h" kindref="compound">ble/link_layer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ble/hci_ll.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tomcrypt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;misc_interface.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hw_dma.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_TAG_CONST<sp/><sp/><sp/>HCI_LL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_TAG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;[HCI<sp/>LL]&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_INFO_ENABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_DUMP_ENABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/debug.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_MS_EXTENSIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>bss_seg(&quot;.ble_hci_bss&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>data_seg(&quot;.ble_hci_data&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>const_seg(&quot;.ble_hci_const&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>code_seg(&quot;.ble_hci_code&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAVE_CMD_BUFF_EN<sp/><sp/><sp/>1<sp/><sp/>//wl80<sp/>need<sp/>static<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_CMD_BUFF_EN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>u32<sp/><ref refid="hci__ll_8c_1a073b3c35a82efb22a6b3b4196b0cee22" kindref="member">hci_cmd_tmp_buff</ref>[32];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//为了保留原有API接口，增加static变量修复接口配置</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>hci_ll_param_t<sp/><ref refid="hci__ll_8c_1a34ccea6ef5826bd08e5303ba92dbf6ae" kindref="member">config_hci_ll_param</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>.Own_Address_Type<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>.Adv_Filter_Policy<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>.Scan_Filter_Policy<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>.initiator_filter_policy<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1acf28d249637b617a4c1cbdf202c9bdf0" kindref="member">ll_hci_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="link__layer_8c_1a3fdc7c4f244a8ea1901c7beda1846993" kindref="member">ll_init</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1aa338695088a8c21f70e03f6e2f46553e" kindref="member">ll_hci_reset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="link__layer_8c_1ae7477dec64dd05f8e8792bed690900d2" kindref="member">ll_reset</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a7c454349609bd939408825400f2a9d15" kindref="member">ll_hci_destory</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BLUETOOTH_5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="extended__advertising_8h_1a8bad073b914562f1c3008f3b6abc9c3e" kindref="member">ll_ext_destroy</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="link__layer_8c_1a2a9c0c14ed733611247ef69e783c671b" kindref="member">ll_destroy</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a5b21ded1a4f0e063ee7698f17c3c7f94" kindref="member">ll_hci_set_event_mask</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8<sp/>*mask)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<ref refid="hci__ll__cmds_8c_1a58e8c0445052dfd3f02f1dccdd04267f" kindref="member">le_param</ref>.<ref refid="structle__parameter_1aa5cbefc401ae1a973146f4102c0afb87" kindref="member">event_mask</ref>,<sp/>mask,<sp/>8);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a8deded2a4ff9e585a671f560603a1718" kindref="member">ll_hci_adv_set_params</ref>(uint16_t<sp/>adv_int_min,<sp/>uint16_t<sp/>adv_int_max,<sp/>uint8_t<sp/>adv_type,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>direct_address_type,<sp/>btctler_bd_addr_t<sp/>direct_address,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>channel_map,<sp/>uint8_t<sp/>filter_policy)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structadvertising__param" kindref="compound">advertising_param</ref><sp/><ref refid="ll__adv_8c_1a49186ac0969a4a850d70568811c98eb7" kindref="member">adv_param</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1a49186ac0969a4a850d70568811c98eb7" kindref="member">adv_param</ref>.<ref refid="structadvertising__param_1abab8370e9815e61ae00bf08104800936" kindref="member">Advertising_Interval_Min</ref><sp/><sp/>=<sp/>adv_int_min;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1a49186ac0969a4a850d70568811c98eb7" kindref="member">adv_param</ref>.<ref refid="structadvertising__param_1adbf60ecfc2c43afe22cb69fd8981d532" kindref="member">Advertising_Interval_Max</ref><sp/><sp/>=<sp/>adv_int_max;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1a49186ac0969a4a850d70568811c98eb7" kindref="member">adv_param</ref>.<ref refid="structadvertising__param_1a949315221942f26eee48ba6ffe0f413f" kindref="member">Advertising_Type</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>adv_type;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1a49186ac0969a4a850d70568811c98eb7" kindref="member">adv_param</ref>.<ref refid="structadvertising__param_1ae9f31cf491eebd2a78688ffcba9674cc" kindref="member">Peer_Address_Type</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>direct_address_type;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<ref refid="ll__adv_8c_1a49186ac0969a4a850d70568811c98eb7" kindref="member">adv_param</ref>.<ref refid="structadvertising__param_1a8215e17cfbc2dd6f5735a76ea1b407b2" kindref="member">Peer_Address</ref>,<sp/>direct_address,<sp/>6);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1a49186ac0969a4a850d70568811c98eb7" kindref="member">adv_param</ref>.<ref refid="structadvertising__param_1a5f3303d4951ba29e7d8b5408db045d7b" kindref="member">Advertising_Channel_Map</ref><sp/><sp/><sp/>=<sp/>channel_map;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1a49186ac0969a4a850d70568811c98eb7" kindref="member">adv_param</ref>.<ref refid="structadvertising__param_1a487f492689821f1f86990c1c5e3be728" kindref="member">Advertising_Filter_Policy</ref><sp/>=<sp/><ref refid="hci__ll_8c_1a34ccea6ef5826bd08e5303ba92dbf6ae" kindref="member">config_hci_ll_param</ref>.Adv_Filter_Policy;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1a49186ac0969a4a850d70568811c98eb7" kindref="member">adv_param</ref>.<ref refid="structadvertising__param_1a2926accf26cc3601effe9fd7b1cf1f7d" kindref="member">Own_Address_Type</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="hci__ll_8c_1a34ccea6ef5826bd08e5303ba92dbf6ae" kindref="member">config_hci_ll_param</ref>.Own_Address_Type;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ll_adv_set_params(&amp;adv_param);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>buf[(15<sp/>+<sp/>3)<sp/>/<sp/>4];</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(buf,<sp/>&amp;<ref refid="ll__adv_8c_1a49186ac0969a4a850d70568811c98eb7" kindref="member">adv_param</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structadvertising__param" kindref="compound">advertising_param</ref>));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>5,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_SET_ADVERTISING_PARAMETERS),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[0],<sp/>buf[1],<sp/>buf[2],<sp/>buf[3]);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="union__adv__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="union__adv__data" kindref="compound">_adv_data</ref><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structadvertising__data" kindref="compound">advertising_data</ref><sp/>adv_data;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/><ref refid="union__adv__data_1a542bf8c66d53b9b953c102727af05903" kindref="member">buf</ref>[(32<sp/>+<sp/>3)<sp/>/<sp/>4];</highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1aa5ae3168613b0072c6355f2d6c7136e1" kindref="member">ll_hci_adv_set_data</ref>(uint8_t<sp/>advertising_data_length,<sp/>uint8_t<sp/>*<ref refid="structadvertising__data" kindref="compound">advertising_data</ref>)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="union__adv__data" kindref="compound">_adv_data</ref><sp/>data<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="union__adv__data_1ae3f9636f87dd15824e8fc06fc613133c" kindref="member">adv_data</ref>.<ref refid="structadvertising__data_1ad016ee363d90119906b71bd4387cf245" kindref="member">length</ref><sp/>=<sp/>advertising_data_length,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(data.<ref refid="union__adv__data_1ae3f9636f87dd15824e8fc06fc613133c" kindref="member">adv_data</ref>.<ref refid="structadvertising__data_1a5b5a28fc73abc664641e7c7e60e85c36" kindref="member">data</ref>,<sp/>advertising_data,<sp/>advertising_data_length);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>9,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_SET_ADVERTISING_DATA),</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.<ref refid="union__adv__data_1a542bf8c66d53b9b953c102727af05903" kindref="member">buf</ref>[0],<sp/>data.<ref refid="union__adv__data_1a542bf8c66d53b9b953c102727af05903" kindref="member">buf</ref>[1],<sp/>data.<ref refid="union__adv__data_1a542bf8c66d53b9b953c102727af05903" kindref="member">buf</ref>[2],<sp/>data.<ref refid="union__adv__data_1a542bf8c66d53b9b953c102727af05903" kindref="member">buf</ref>[3],<sp/>data.<ref refid="union__adv__data_1a542bf8c66d53b9b953c102727af05903" kindref="member">buf</ref>[4],<sp/>data.<ref refid="union__adv__data_1a542bf8c66d53b9b953c102727af05903" kindref="member">buf</ref>[5],<sp/>data.<ref refid="union__adv__data_1a542bf8c66d53b9b953c102727af05903" kindref="member">buf</ref>[6],<sp/>data.<ref refid="union__adv__data_1a542bf8c66d53b9b953c102727af05903" kindref="member">buf</ref>[7]);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1accbcf0c9b36f409e740672ddf76a0489" kindref="member">ll_hci_adv_scan_response_set_data</ref>(uint8_t<sp/>scan_response_data_length,<sp/>uint8_t<sp/>*scan_response_data)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structscan__response" kindref="compound">scan_response</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_resp_data;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>scan_resp_data.<ref refid="structscan__response_1a7360e25049f28935dd0b63914adf5878" kindref="member">length</ref><sp/>=<sp/>scan_response_data_length;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(scan_resp_data.<ref refid="structscan__response_1ae5e2a6a3fc40b7bfb6b43cd1fb1f4101" kindref="member">data</ref>,<sp/>scan_response_data,<sp/>scan_response_data_length);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ll_adv_set_scan_rsp_data(&amp;scan_resp_data);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>buf[(32<sp/>+<sp/>3)<sp/>/<sp/>4];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(buf,<sp/>&amp;scan_resp_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structscan__response" kindref="compound">scan_response</ref>));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>9,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_SET_SCAN_RESPONSE_DATA),</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[0],<sp/>buf[1],<sp/>buf[2],<sp/>buf[3],<sp/>buf[4],<sp/>buf[5],<sp/>buf[6],<sp/>buf[7]);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1aefa2af90040d2010b07b8aec8701b927" kindref="member">ll_hci_set_random_address</ref>(u8<sp/>*addr)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<ref refid="hci__ll__cmds_8c_1a58e8c0445052dfd3f02f1dccdd04267f" kindref="member">le_param</ref>.<ref refid="structle__parameter_1a8af2272608273289c68ab91c51ee5ab9" kindref="member">random_address</ref>,<sp/>addr,<sp/>6);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">u16<sp/><ref refid="hci__ll_8c_1aaf1e49da876df3f434668045f6d3ceee" kindref="member">ll_hci_get_acl_data_len</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hci__ll__cmds_8c_1a58e8c0445052dfd3f02f1dccdd04267f" kindref="member">le_param</ref>.<ref refid="structle__parameter_1a944c71c79ca15860ac3a085827c6f1c1" kindref="member">acl_data_packet_length</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">u16<sp/><ref refid="hci__ll_8c_1a1775007889b96592f2c8493087390780" kindref="member">ll_hci_get_acl_total_num</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hci__ll__cmds_8c_1a58e8c0445052dfd3f02f1dccdd04267f" kindref="member">le_param</ref>.<ref refid="structle__parameter_1a94df935feb9ef3a1e4e168a4149417ad" kindref="member">acl_packets_total_num</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1aeeff252aa3abfa4e4d3fae6c189fb84f" kindref="member">g_le_name</ref>[18];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1af3197b61e8e4e22920fdb43f890942e5" kindref="member">ll_hci_set_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>u16<sp/>name_len;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>name_len<sp/>=<sp/>strlen(name)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(g_le_name,<sp/>name,<sp/>name_len);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>log_debug(</highlight><highlight class="stringliteral">&quot;local_name<sp/>%d<sp/>/<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>name_len,<sp/>name);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a9149d25f26cf50ac977ae82aa6331488" kindref="member">ll_hci_scan_set_params</ref>(uint8_t<sp/>scan_type,<sp/>uint16_t<sp/>scan_interval,<sp/>uint16_t<sp/>scan_window)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structscan__parameter" kindref="compound">scan_parameter</ref><sp/>sacn_params<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structscan__parameter_1acf82f0f6f6c9d5d0ba91b5e50774f1b7" kindref="member">LE_Scan_Type</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>scan_type,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.LE_Scan_Interval<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>scan_interval,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.LE_Scan_Window<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>scan_window,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Own_Address_Type<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="hci__ll_8c_1a34ccea6ef5826bd08e5303ba92dbf6ae" kindref="member">config_hci_ll_param</ref>.Own_Address_Type,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Scanning_Filter_Policy<sp/>=<sp/><ref refid="hci__ll_8c_1a34ccea6ef5826bd08e5303ba92dbf6ae" kindref="member">config_hci_ll_param</ref>.Scan_Filter_Policy,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__scan_8c_1a04992606b855c63dd625fe19e147b2af" kindref="member">ll_scan_set_params</ref>(&amp;sacn_params);</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a0398a4cbfecc49f2a7816fd84ee77182" kindref="member">ll_hci_adv_enable</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>1,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_SET_ADVERTISE_ENABLE),<sp/>enable);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a2ec21cfed85459155ad76652a6b0aa55" kindref="member">ll_hci_scan_enable</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable,<sp/>u8<sp/>filter_duplicates)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>2,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_SET_SCAN_ENABLE),<sp/>enable,<sp/>filter_duplicates);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconnection__parameter" kindref="compound">connection_parameter</ref><sp/>create_param_default<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structconnection__parameter_1a59c89bb387310f9ee91afef640ae2c36" kindref="member">le_scan_interval</ref><sp/>=<sp/>60,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>.le_scan_window<sp/>=<sp/>30,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>.initiator_filter_policy<sp/>=<sp/>0,<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>.peer_address_type<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>.peer_address<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>.own_address_type<sp/>=<sp/>0,<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>.conn_interval_min<sp/>=<sp/>0x6,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>.conn_interval_max<sp/>=<sp/>0x20,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>.conn_latency<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>.supervision_timeout<sp/>=<sp/>0x180,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>.minimum_ce_length<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>.maximum_ce_length<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="204"><highlight class="normal">};</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1add4c9cf43ccca17ff0ae427c085112e6" kindref="member">ll_hci_create_conn</ref>(u8<sp/>*conn_param,<sp/>u8<sp/>*addr_param)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconnection__parameter" kindref="compound">connection_parameter</ref><sp/>create_param;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;create_param,<sp/>&amp;create_param_default,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnection__parameter" kindref="compound">connection_parameter</ref>));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>create_param.<ref refid="structconnection__parameter_1a5da881d213e0cc9479afdd5ce461b126" kindref="member">initiator_filter_policy</ref><sp/>=<sp/><ref refid="hci__ll_8c_1a34ccea6ef5826bd08e5303ba92dbf6ae" kindref="member">config_hci_ll_param</ref>.initiator_filter_policy;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>create_param.<ref refid="structconnection__parameter_1a28362c7242677773b7e962a20709c951" kindref="member">own_address_type</ref><sp/>=<sp/><ref refid="hci__ll_8c_1a34ccea6ef5826bd08e5303ba92dbf6ae" kindref="member">config_hci_ll_param</ref>.Own_Address_Type,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;create_param.<ref refid="structconnection__parameter_1afd774d23de273a1e87ce6556826d2d68" kindref="member">conn_interval_max</ref>,<sp/>conn_param,<sp/>6);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;create_param.<ref refid="structconnection__parameter_1ab5e28141eb82bc6f9f94af3ec9e16fae" kindref="member">peer_address_type</ref>,<sp/>addr_param,<sp/>7);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf_buf(&amp;create_param,sizeof(struct<sp/>connection_parameter));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_CMD_BUFF_EN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<ref refid="hci__ll_8c_1a073b3c35a82efb22a6b3b4196b0cee22" kindref="member">hci_cmd_tmp_buff</ref>,<sp/>&amp;create_param,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnection__parameter" kindref="compound">connection_parameter</ref>));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>1,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_CREATE_CONNECTION),<sp/><ref refid="hci__ll_8c_1a073b3c35a82efb22a6b3b4196b0cee22" kindref="member">hci_cmd_tmp_buff</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>1,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_CREATE_CONNECTION),<sp/>&amp;create_param);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1ac2d4656ace43aac4639a3da1c21201d4" kindref="member">ll_hci_create_conn_cancel</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_CREATE_CONNECTION_CANCEL));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a9a608048b53d1da33ce1ddfb49031046" kindref="member">ll_hci_vendor_send_key_num</ref>(u16<sp/>conn_handle,<sp/>u8<sp/>num)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>2,<sp/>OPCODE(OGF_VENDOR_LE_CONTROLLER,<sp/>HCI_LE_VENDOR_TEST_KEY_NUM),<sp/>conn_handle,<sp/>num);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1aa2b7304a0e0ebbd4c8a74281d1765260" kindref="member">ll_vendor_latency_hold_cnt</ref>(u16<sp/>conn_handle,<sp/>u16<sp/>hold_cnt)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>2,<sp/>OPCODE(OGF_VENDOR_LE_CONTROLLER,<sp/>HCI_LE_VENDOR_LATENCY_HOLD_CNT),<sp/>conn_handle,<sp/>hold_cnt);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a5fa0187cd6972fec29c61fbcaa82a6b1" kindref="member">ll_hci_encryption</ref>(u8<sp/>*key,<sp/>u8<sp/>*plaintext_data)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>word1[4];</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>word2[4];</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy((u8<sp/>*)word1,<sp/>key,<sp/>16);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy((u8<sp/>*)word2,<sp/>plaintext_data,<sp/>16);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>4<sp/>+<sp/>4,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_ENCRYPT),</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word1[0],<sp/>word1[1],<sp/>word1[2],<sp/>word1[3],</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word2[0],<sp/>word2[1],<sp/>word2[2],<sp/>word2[3]);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a4b58a638204121715aca436bd51bf367" kindref="member">ll_hci_get_le_rand</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_RAND));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a281a058608e4dd212e7d14dc56441d9a" kindref="member">ll_hci_start_encryption</ref>(u16<sp/>handle,<sp/>u32<sp/>rand_low,<sp/>u32<sp/>rand_high,<sp/>u16<sp/>peer_ediv,<sp/>u8<sp/>*ltk)</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhci__le__start__encryption__parameter" kindref="compound">hci_le_start_encryption_parameter</ref><sp/>*param<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="hci__ll_8c_1a073b3c35a82efb22a6b3b4196b0cee22" kindref="member">hci_cmd_tmp_buff</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>param-&gt;<ref refid="structhci__le__start__encryption__parameter_1a435f202c1413fc6dfc47922dcdd1b41e" kindref="member">connection_handle</ref><sp/>=<sp/>handle;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;param-&gt;<ref refid="structhci__le__start__encryption__parameter_1a8b49f6f47ef8ce124698a5337c3305f8" kindref="member">random_number</ref>[0],<sp/>&amp;rand_low,<sp/>4);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;param-&gt;<ref refid="structhci__le__start__encryption__parameter_1a8b49f6f47ef8ce124698a5337c3305f8" kindref="member">random_number</ref>[4],<sp/>&amp;rand_high,<sp/>4);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>param-&gt;<ref refid="structhci__le__start__encryption__parameter_1a2daee9870a0b7b8986180234ed9e901c" kindref="member">encrypted_diversifier</ref><sp/>=<sp/>peer_ediv;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy((u8<sp/>*)param-&gt;<ref refid="structhci__le__start__encryption__parameter_1ab7aff87125644d840d30c81cbcfe28c6" kindref="member">long_term_key</ref>,<sp/>ltk,<sp/>16);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>1,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_START_ENCRYPT),<sp/>param);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1aa75500e50b980ce381cf9994a980f635" kindref="member">ll_hci_long_term_key_request_reply</ref>(u16<sp/>handle,<sp/>u8<sp/>*ltk)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>word[4];</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy((u8<sp/>*)word,<sp/>ltk,<sp/>16);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>1<sp/>+<sp/>4,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_LONG_TERM_KEY_REQUEST_REPLY),</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle,<sp/>word[0],<sp/>word[1],<sp/>word[2],<sp/>word[3]);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a85be9dfc3f43fed420e42458d7afad31" kindref="member">ll_hci_long_term_key_request_nagative_reply</ref>(u16<sp/>handle)</highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>1,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_LONG_TERM_KEY_REQUEST_NAGATIVE_REPLY),<sp/>handle);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1ae82e69505f122ada3449eb1f249f6d1f" kindref="member">ll_hci_connection_update</ref>(u16<sp/>handle,<sp/>u16<sp/>conn_interval_min,<sp/>u16<sp/>conn_interval_max,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u16<sp/>conn_latency,<sp/>u16<sp/>supervision_timeout,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u16<sp/>minimum_ce_length,<sp/>u16<sp/>maximum_ce_length)</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>7,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_CONNECTION_UPDATE),</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle,<sp/>conn_interval_min,<sp/>conn_interval_max,<sp/>conn_latency,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>supervision_timeout,<sp/>minimum_ce_length,<sp/>maximum_ce_length);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a26958f498950b66d52a275b0c556f2ae" kindref="member">ll_hci_disconnect</ref>(u16<sp/>handle,<sp/>u8<sp/>reason)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>2,<sp/>OPCODE(OGF_LINK_CONTROL,<sp/>HCI_DISCONNECT),<sp/>handle,<sp/>reason);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a9e19a2fbf5866b83ced12023a518357e" kindref="member">ll_hci_read_local_p256_pb_key</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_READ_LOCAL_P256_PUBLIC_KEY));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1aceacc6cad915382a40c0389bcd74be8c" kindref="member">ll_hci_generate_dhkey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8<sp/>*data,<sp/>u32<sp/>size)</highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>1<sp/>+<sp/>1,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_GENERATE_DHKEY),<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a26402e5bd1058183da458438d7ed20a7" kindref="member">ll_hci_set_data_length</ref>(u16<sp/>conn_handle,<sp/>u16<sp/>tx_octets,<sp/>u16<sp/>tx_time)</highlight></codeline>
<codeline lineno="330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_FEATURES_IS_SUPPORT_OPTIMIZE(LE_DATA_PACKET_LENGTH_EXTENSION);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>3,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_SET_DATA_LENGTH),<sp/>\</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn_handle,<sp/>tx_octets,<sp/>tx_time);</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a0ba4c4ddbb6a1799d36c2ce6f97650c9" kindref="member">ll_hci_set_ext_adv_params</ref>(u8<sp/>*data,<sp/>u32<sp/>size)</highlight></codeline>
<codeline lineno="338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_ROLES_IS_SUPPORT_OPTIMIZE(LE_SLAVE);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_FEATURES_IS_SUPPORT_OPTIMIZE(LE_EXTENDED_ADVERTISING);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>2,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_SET_EXT_ADVERTISING_PARAMETERS),<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1add7d6dc583ff343548dbb3e8de1d931c" kindref="member">ll_hci_set_ext_adv_data</ref>(u8<sp/>*data,<sp/>u32<sp/>size)</highlight></codeline>
<codeline lineno="346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_ROLES_IS_SUPPORT_OPTIMIZE(LE_SLAVE);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_FEATURES_IS_SUPPORT_OPTIMIZE(LE_EXTENDED_ADVERTISING);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>2,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_SET_EXT_ADVERTISING_DATA),<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a54e0ad93d7cde18eb637a0549a4cdced" kindref="member">ll_hci_set_ext_adv_enable</ref>(u8<sp/>*data,<sp/>u32<sp/>size)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_ROLES_IS_SUPPORT_OPTIMIZE(LE_SLAVE);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_FEATURES_IS_SUPPORT_OPTIMIZE(LE_EXTENDED_ADVERTISING);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>2,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_SET_EXT_ADVERTISE_ENABLE),<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1ae1ed5743f4e7aa6e30c54693395667d4" kindref="member">ll_hci_set_phy</ref>(u16<sp/>conn_handle,<sp/>u8<sp/>all_phys,<sp/>u8<sp/>tx_phy,<sp/>u8<sp/>rx_phy,<sp/>u16<sp/>phy_options)</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_FEATURES_IS_SUPPORT_OPTIMIZE(LE_2M_PHY<sp/>|<sp/>LE_CODED_PHY);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>5,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_SET_PHY),<sp/>\</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn_handle,<sp/>all_phys,<sp/>tx_phy,<sp/>rx_phy,<sp/>phy_options);</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1adda44554fa73b519b356409c69d5271b" kindref="member">ll_hci_set_ext_scan_params</ref>(u8<sp/>*data,<sp/>u32<sp/>size)</highlight></codeline>
<codeline lineno="370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_ROLES_IS_SUPPORT_OPTIMIZE(LE_MASTER);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_FEATURES_IS_SUPPORT_OPTIMIZE(LE_EXTENDED_ADVERTISING);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>2,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_SET_EXTENDED_SCAN_PARAMETERS),<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a1a0ab9a3f99770cc28757d468ad866f2" kindref="member">ll_hci_set_ext_scan_enable</ref>(u8<sp/>*data,<sp/>u32<sp/>size)</highlight></codeline>
<codeline lineno="378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_ROLES_IS_SUPPORT_OPTIMIZE(LE_MASTER);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_FEATURES_IS_SUPPORT_OPTIMIZE(LE_EXTENDED_ADVERTISING);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>2,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_EXTENDED_SCAN_ENABLE),<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1aded0e41d057cc19758cd101c82d9c5ba" kindref="member">ll_hci_ext_create_conn</ref>(u8<sp/>*data,<sp/>u32<sp/>size)</highlight></codeline>
<codeline lineno="386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_ROLES_IS_SUPPORT_OPTIMIZE(LE_MASTER);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_FEATURES_IS_SUPPORT_OPTIMIZE(LE_EXTENDED_ADVERTISING);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>2,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_EXTENDED_CREATE_CONNECTION),<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1ae84ea842f2d51a553fd2758f8d14f43a" kindref="member">ll_hci_set_periodic_adv_params</ref>(u8<sp/>*data,<sp/>u32<sp/>size)</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_ROLES_IS_SUPPORT_OPTIMIZE(LE_SLAVE);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_FEATURES_IS_SUPPORT_OPTIMIZE(LE_EXTENDED_ADVERTISING);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_FEATURES_IS_SUPPORT_OPTIMIZE(LE_PERIODIC_ADVERTISING);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>2,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_SET_PERIODIC_ADVERTISING_PARAMETERS),<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a3468fb4eb6015f0b110e0df8df6f0736" kindref="member">ll_hci_set_periodic_adv_data</ref>(u8<sp/>*data,<sp/>u32<sp/>size)</highlight></codeline>
<codeline lineno="403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_ROLES_IS_SUPPORT_OPTIMIZE(LE_SLAVE);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_FEATURES_IS_SUPPORT_OPTIMIZE(LE_EXTENDED_ADVERTISING);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_FEATURES_IS_SUPPORT_OPTIMIZE(LE_PERIODIC_ADVERTISING);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>2,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_SET_PERIODIC_ADVERTISING_DATA),<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a70894b777b4b2df6489c059eb1d23dba" kindref="member">ll_hci_set_periodic_adv_enable</ref>(u8<sp/>*data,<sp/>u32<sp/>size)</highlight></codeline>
<codeline lineno="412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_ROLES_IS_SUPPORT_OPTIMIZE(LE_SLAVE);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_FEATURES_IS_SUPPORT_OPTIMIZE(LE_EXTENDED_ADVERTISING);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_FEATURES_IS_SUPPORT_OPTIMIZE(LE_PERIODIC_ADVERTISING);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>2,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_SET_PERIODIC_ADVERTISING_ENABLE),<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a1cc8bcf5b5d446dbb997825bc57dc649" kindref="member">ll_hci_periodic_adv_creat_sync</ref>(u8<sp/>*data,<sp/>u32<sp/>size)</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_ROLES_IS_SUPPORT_OPTIMIZE(LE_MASTER);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_FEATURES_IS_SUPPORT_OPTIMIZE(LE_EXTENDED_ADVERTISING);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_FEATURES_IS_SUPPORT_OPTIMIZE(LE_PERIODIC_ADVERTISING);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_hci_cmd_to_task(1<sp/>+<sp/>2,<sp/>OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_PERIODIC_ADVERTISING_CREATE_SYNC),<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a3d656dc009d1c40a6c85cfbd3025f3a9" kindref="member">ll_hci_cmd_handler</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*cmd)</highlight></codeline>
<codeline lineno="430"><highlight class="normal">{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>u16<sp/>opcode<sp/>=<sp/>cmd[0];</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ocf<sp/>=<sp/>opcode<sp/>&amp;<sp/>0x3ff;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opcode<sp/>==<sp/><sp/>HCI_DISCONNECT)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Link<sp/>Controll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_ROLES_IS_SUPPORT((LE_MASTER<sp/>|<sp/>LE_SLAVE)))<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_DISCONNECT<sp/>0x%x,<sp/>0x%x&quot;</highlight><highlight class="normal">,<sp/>cmd[1],<sp/>cmd[2]);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">disconnect_paramter<sp/>data;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.connection_handle<sp/>=<sp/>cmd[1];</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.reason<sp/>=<sp/>cmd[2];</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="link__layer_8c_1a022c18655b36b96303b13e0df798933d" kindref="member">ll_push_control_data</ref>(opcode,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__hci_emit_event_of_cmd_status(opcode,<sp/>status);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ocf)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Link<sp/>Controll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_DISCONNECT:</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_ROLES_IS_SUPPORT((LE_MASTER<sp/>|<sp/>LE_SLAVE)))<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_DISCONNECT<sp/>0x%x,<sp/>0x%x&quot;</highlight><highlight class="normal">,<sp/>cmd[1],<sp/>cmd[2]);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">disconnect_paramter<sp/>data;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.connection_handle<sp/>=<sp/>cmd[1];</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.reason<sp/>=<sp/>cmd[2];</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="link__layer_8c_1a022c18655b36b96303b13e0df798933d" kindref="member">ll_push_control_data</ref>(opcode,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__hci_emit_event_of_cmd_status(opcode,<sp/>status);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_SET_ADVERTISING_PARAMETERS:</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_ROLES_IS_SUPPORT(LE_ADV))<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_LE_SET_ADVERTISING_PARAMETERS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structadvertising__param" kindref="compound">advertising_param</ref><sp/>adv_param;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;adv_param,<sp/>cmd<sp/>+<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structadvertising__param" kindref="compound">advertising_param</ref>));</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1a334fc05d856811c324fa2490c78ad795" kindref="member">ll_adv_set_params</ref>(&amp;adv_param);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_SET_ADVERTISING_DATA:</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_ROLES_IS_SUPPORT(LE_ADV))<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_LE_SET_ADVERTISING_DATA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">advertising_data<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv_data;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;adv_data,<sp/>cmd<sp/>+<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>advertising_data));</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1a62bc386d445c6bb3491e3a7742ee3a8d" kindref="member">ll_adv_set_adv_data</ref>(&amp;adv_data);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_SET_SCAN_RESPONSE_DATA:</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_ROLES_IS_SUPPORT(LE_ADV))<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_LE_SET_SCAN_RESPONSE_DATA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structscan__response" kindref="compound">scan_response</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_resp_data;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;scan_resp_data,<sp/>cmd<sp/>+<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structscan__response" kindref="compound">scan_response</ref>));</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1a2d83abd546511aaf56f0428609f0e571" kindref="member">ll_adv_set_scan_rsp_data</ref>(&amp;scan_resp_data);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_SET_ADVERTISE_ENABLE:</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_LE_SET_ADVERTISE_ENABLE<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>cmd[1]<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Enable&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Disable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd[1])<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="ll__adv_8c_1ad856172178e2cbdda13ffe00f4138f91" kindref="member">ll_adv_open</ref>();</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="ll__adv_8c_1ade113f482e2a470d1c732e11753d21ab" kindref="member">ll_adv_close</ref>();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_SET_SCAN_ENABLE:</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_LE_SET_SCAN_ENABLE<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>cmd[1]<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Enable&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Disable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd[1])<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structscan__enable__parameter" kindref="compound">scan_enable_parameter</ref><sp/>scan_enable;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_enable.<ref refid="structscan__enable__parameter_1ac541c632f4e42667b8a02f5240adac5b" kindref="member">filter_duplicates</ref><sp/>=<sp/>cmd[2];</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="ll__scan_8c_1abba980076d6b8c16c1fb55999eff97a7" kindref="member">ll_scan_open</ref>(&amp;scan_enable);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="ll__scan_8c_1a00e99c403246b29c406c1186bd70eae4" kindref="member">ll_scan_close</ref>();</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_CREATE_CONNECTION:</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_LE_CREATE_CONNECTION&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf_buf((void*)cmd[1],16);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="ll__init_8c_1a87d8d3ddda708b61c76dae8b2c793ad0" kindref="member">ll_init_open</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)cmd[1]);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_CREATE_CONNECTION_CANCEL:</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_LE_CREATE_CONNECTION_CANCEL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="ll__init_8c_1a3b001c687c4393c4cea5c5e26b426895" kindref="member">ll_init_close</ref>();</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_ENCRYPT:</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_LE_ENCRYPT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_FEATURES_IS_SUPPORT(LE_ENCRYPTION))<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8<sp/>key[16];</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8<sp/>plaintext_data[16];</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8<sp/>enc[16];</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(key,<sp/>cmd<sp/>+<sp/>1,<sp/>16);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(plaintext_data,<sp/>cmd<sp/>+<sp/>5,<sp/>16);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aes128_start((u8<sp/>*)key,<sp/>(u8<sp/>*)plaintext_data,<sp/>enc);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__hci_emit_event_of_cmd_complete(OPCODE(OGF_LE_CONTROLLER,<sp/>HCI_LE_ENCRYPT),<sp/></highlight><highlight class="stringliteral">&quot;1c16&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>enc);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_RAND:</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_LE_RAND&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8<sp/>rand[8];</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pseudo_random_genrate(rand,<sp/>ARRAY_SIZE(rand));</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__hci_emit_event_of_cmd_complete(opcode,<sp/></highlight><highlight class="stringliteral">&quot;1c08&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>rand);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_START_ENCRYPT:</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_LE_START_ENCRYPT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_ROLES_IS_SUPPORT((LE_MASTER<sp/>|<sp/>LE_SLAVE)))<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_FEATURES_IS_SUPPORT(LE_ENCRYPTION))<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="llcp__sm__encrypt_8c_1a638333bd74f320cd5c9943d15bf2fc22" kindref="member">ll_enable_encryption</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structhci__le__start__encryption__parameter" kindref="compound">hci_le_start_encryption_parameter</ref><sp/>*)cmd[1]);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__hci_emit_event_of_cmd_status(opcode,<sp/>status);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_LONG_TERM_KEY_REQUEST_REPLY:</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_LE_LONG_TERM_KEY_REQUEST_REPLY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_ROLES_IS_SUPPORT((LE_MASTER<sp/>|<sp/>LE_SLAVE)))<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_FEATURES_IS_SUPPORT(LE_ENCRYPTION))<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>log_info_hexdump(data,<sp/>size);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhci__le__long__term__key__request__reply__parameter" kindref="compound">hci_le_long_term_key_request_reply_parameter</ref><sp/>data;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.<ref refid="structhci__le__long__term__key__request__reply__parameter_1a1d254e45e30bea59ed281e92903205ac" kindref="member">connection_handle</ref><sp/>=<sp/>cmd[1];</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(data.<ref refid="structhci__le__long__term__key__request__reply__parameter_1a21e30cc54858751113deafe5bd62a232" kindref="member">long_term_key</ref>,<sp/>cmd<sp/>+<sp/>2,<sp/>16);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>log_info_hexdump((u8<sp/>*)data,<sp/>sizeof(struct<sp/>long_term_key_request_reply_parameter));<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="llcp__sm__encrypt_8c_1a6edd646aeb175eca1bbc47b8dbe956da" kindref="member">ll_long_term_key_request_reply</ref>(&amp;data);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__hci_emit_event_of_cmd_complete(opcode,<sp/></highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal">,<sp/>status,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>READ_CONNECTION_HANDLE(&amp;data));</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_LONG_TERM_KEY_REQUEST_NAGATIVE_REPLY:</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_LE_LONG_TERM_KEY_REQUEST_NAGATIVE_REPLY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_ROLES_IS_SUPPORT((LE_MASTER<sp/>|<sp/>LE_SLAVE)))<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_FEATURES_IS_SUPPORT(LE_ENCRYPTION))<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structhci__le__long__term__key__request__reply__parameter_1a1d254e45e30bea59ed281e92903205ac" kindref="member">connection_handle</ref><sp/>=<sp/>cmd[1];</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="llcp__sm__encrypt_8c_1a75ceb840ac4b75a72e733a3b8566176c" kindref="member">ll_long_term_key_request_nagative_reply</ref>(connection_handle);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__hci_emit_event_of_cmd_complete(opcode,<sp/></highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal">,<sp/>status,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connection_handle);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_CONNECTION_UPDATE:</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_LE_CONNECTION_UPDATE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_ROLES_IS_SUPPORT(LE_MASTER))<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhci__le__connection__update__parameter" kindref="compound">hci_le_connection_update_parameter</ref><sp/>data;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.<ref refid="structhci__le__connection__update__parameter_1a27b3ebb94429db16a581da4d893e6494" kindref="member">connection_handle</ref><sp/><sp/>=<sp/>cmd[1];</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.<ref refid="structhci__le__connection__update__parameter_1ade5baf82dc9ce38840b39d6d163fb02b" kindref="member">Conn_Interval_Min</ref><sp/><sp/>=<sp/>cmd[2];</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.<ref refid="structhci__le__connection__update__parameter_1a05a4c3cc0653be5acd78315848f6a68c" kindref="member">Conn_Interval_Max</ref><sp/><sp/>=<sp/>cmd[3];</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.<ref refid="structhci__le__connection__update__parameter_1af08e3aa08701a856493acd174131e7c0" kindref="member">Conn_Latency</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>cmd[4];</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.<ref refid="structhci__le__connection__update__parameter_1a2ab41735262f21cd9d8cb86ee7ebb966" kindref="member">Supervision_Timeout</ref><sp/>=<sp/>cmd[5];</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.<ref refid="structhci__le__connection__update__parameter_1a9dddb17e13c21a6b899037c0176e73cb" kindref="member">Minimum_CE_Length</ref><sp/>=<sp/>cmd[6];</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.<ref refid="structhci__le__connection__update__parameter_1a3f34cae1acaadd6bbc1f3f89fa31c4a1" kindref="member">Maximum_CE_Length</ref><sp/>=<sp/>cmd[7];</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="llcp__sm__conn__update_8c_1a8716a18d7777da35138f1bea47023dd6" kindref="member">ll_connection_update</ref>(&amp;data);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__hci_emit_event_of_cmd_status(opcode,<sp/>status);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_READ_LOCAL_P256_PUBLIC_KEY:</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__hci_emit_event_of_cmd_status(opcode,<sp/>0);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ll_read_local_p256_public_key(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ll_read_local_p256_public_key();</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_GENERATE_DHKEY:</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__hci_emit_event_of_cmd_status(opcode,<sp/>0);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ll_generate_dh_key(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8<sp/>*<sp/>data,<sp/>u32<sp/>size);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ll_generate_dh_key((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8<sp/>*)cmd[1],<sp/>cmd[2]);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_VENDOR_TEST_KEY_NUM:</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_ROLES_IS_SUPPORT((LE_MASTER<sp/>|<sp/>LE_SLAVE)))<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtest__key__num__parameter" kindref="compound">test_key_num_parameter</ref><sp/>data;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.<ref refid="structtest__key__num__parameter_1a1a8ace5a66d4ee39844646d5f5a04689" kindref="member">connection_handle</ref><sp/>=<sp/>cmd[1];</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.<ref refid="structtest__key__num__parameter_1a5236e99c10e44f6937b381d0e9241c43" kindref="member">key_num</ref><sp/>=<sp/>cmd[2];</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="link__layer_8c_1a022c18655b36b96303b13e0df798933d" kindref="member">ll_push_control_data</ref>(opcode,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__hci_emit_event_of_cmd_status(opcode,<sp/>status);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_VENDOR_LATENCY_HOLD_CNT:</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_ROLES_IS_SUPPORT((LE_MASTER<sp/>|<sp/>LE_SLAVE)))<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u16<sp/>hold_par[2];</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hold_par[0]<sp/>=<sp/>cmd[1];</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hold_par[1]<sp/>=<sp/>cmd[2];</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="link__layer_8c_1a022c18655b36b96303b13e0df798933d" kindref="member">ll_push_control_data</ref>(opcode,<sp/>hold_par);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__hci_emit_event_of_cmd_status(opcode,<sp/>status);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_SET_DATA_LENGTH:</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LE_FEATURES_IS_SUPPORT_OPTIMIZE(LE_DATA_PACKET_LENGTH_EXTENSION);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhci__le__set__data__length__parameter" kindref="compound">hci_le_set_data_length_parameter</ref><sp/>data_length_param<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structhci__le__set__data__length__parameter_1a8b0bde9fbe98f707487e2304c0d52f8f" kindref="member">connection_handle</ref><sp/>=<sp/>cmd[1],</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.txoctets<sp/>=<sp/>cmd[2],</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.txtime<sp/>=<sp/>cmd[3],</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="link__layer_8c_1a022c18655b36b96303b13e0df798933d" kindref="member">ll_push_control_data</ref>(opcode,<sp/>&amp;data_length_param);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__hci_emit_event_of_cmd_complete(opcode,<sp/></highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal">,<sp/>status,<sp/>READ_CONNECTION_HANDLE(&amp;data_length_param));</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BLUETOOTH_5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_SET_PHY:</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LE_FEATURES_IS_SUPPORT_OPTIMIZE(LE_2M_PHY<sp/>|<sp/>LE_CODED_PHY);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structset__phy__param" kindref="compound">set_phy_param</ref><sp/>phy_param<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structset__phy__param_1ad5be7b19ba9e4d5a72749ca3916a41ff" kindref="member">Connection_Handle</ref><sp/>=<sp/>cmd[1],</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ALL_PHYs<sp/>=<sp/>cmd[2],</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.TX_PHYs<sp/>=<sp/>cmd[3],</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.RX_PHYs<sp/>=<sp/>cmd[4],</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.PHY_Options<sp/>=<sp/>cmd[5],</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="multiple__phys_8h_1a63c635abc2ff7fbd335c2b69356e637a" kindref="member">le_cmd_set_phy</ref>(opcode,<sp/>(u8<sp/>*)&amp;phy_param,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(phy_param));</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>le_controller_handler_for_ble5(opcode,<sp/>(const<sp/>u8<sp/>*)cmd[1],<sp/>cmd[2]);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BLUETOOTH_5<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a3b6fb7a968146074a6701e14135d98bb" kindref="member">ll_event_handler</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*msg)</highlight></codeline>
<codeline lineno="654"><highlight class="normal">{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmd<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>struct<sp/>lmp_connection<sp/>*conn;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>struct<sp/>bredr_link_rx<sp/>*rx;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg[1])<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LL_EVENT_ACL_TX_POST:</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LL_EVENT_RX:</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a30fb274d9cffc3ab22cf97d9dae3a9f8" kindref="member">ll_hci_private_free_dma_rx</ref>(u8<sp/>*rx_head)</highlight></codeline>
<codeline lineno="668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ble_rx<sp/>*rx<sp/>=<sp/>container_of(rx_head,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>ble_rx,<sp/>head);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>hw_dma_free(rx);</highlight></codeline>
<codeline lineno="672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal">hci_ll_param_t<sp/>*<ref refid="hci__ll_8c_1a96391ec96506f7515a0c63498c05da43" kindref="member">ll_hci_param_config_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="676"><highlight class="normal">{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="hci__ll_8c_1a34ccea6ef5826bd08e5303ba92dbf6ae" kindref="member">config_hci_ll_param</ref>;</highlight><highlight class="comment">//return<sp/>for<sp/>set;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1aeebdb1c20c26ddbca0e9551106f03a96" kindref="member">le_controller_get_mac</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*addr);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1a44bacfe5ea2134704dc94464edefa973" kindref="member">le_controller_get_random_mac</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*addr);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hci__ll_8c_1ae4b35f54bae5945839793bf0aff5c17f" kindref="member">hci_ll_get_device_address</ref>(uint8_t<sp/>*addr_type,<sp/>u8<sp/>*addr)</highlight></codeline>
<codeline lineno="683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;config_hci_ll_param.Own_Address_Type<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="hci__ll_8c_1a34ccea6ef5826bd08e5303ba92dbf6ae" kindref="member">config_hci_ll_param</ref>.Own_Address_Type);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hci__ll_8c_1a34ccea6ef5826bd08e5303ba92dbf6ae" kindref="member">config_hci_ll_param</ref>.Own_Address_Type<sp/>==<sp/>0<sp/>||<sp/><ref refid="hci__ll_8c_1a34ccea6ef5826bd08e5303ba92dbf6ae" kindref="member">config_hci_ll_param</ref>.Own_Address_Type<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hci__ll_8c_1aeebdb1c20c26ddbca0e9551106f03a96" kindref="member">le_controller_get_mac</ref>(addr);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*addr_type<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hci__ll_8c_1a44bacfe5ea2134704dc94464edefa973" kindref="member">le_controller_get_random_mac</ref>(addr);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*addr_type<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/hci_ll.c"/>
  </compounddef>
</doxygen>
