<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ll__cte_8c" kind="file" language="C++">
    <compoundname>ll_cte.c</compoundname>
    <includes refid="link__layer_8h" local="yes">ble/link_layer.h</includes>
    <includes local="yes">hci_controller.h</includes>
    <includes local="yes">btcontroller_heap.h</includes>
    <incdepgraph>
      <node id="3276">
        <label>os/os_type.h</label>
      </node>
      <node id="3272">
        <label>common/atomic.h</label>
      </node>
      <node id="3286">
        <label>common/lbuf.h</label>
      </node>
      <node id="3269">
        <label>common/list.h</label>
      </node>
      <node id="3275">
        <label>common/thread.h</label>
      </node>
      <node id="3278">
        <label>ble/ll_adv.h</label>
        <link refid="ll__adv_8h"/>
        <childnode refid="3270" relation="include">
        </childnode>
      </node>
      <node id="3280">
        <label>ble/ll_init.h</label>
        <link refid="ll__init_8h"/>
        <childnode refid="3270" relation="include">
        </childnode>
      </node>
      <node id="3282">
        <label>data_extension.h</label>
        <link refid="data__extension_8h"/>
        <childnode refid="3268" relation="include">
        </childnode>
      </node>
      <node id="3285">
        <label>ble/ll_iso.h</label>
        <link refid="ll__iso_8h"/>
        <childnode refid="3273" relation="include">
        </childnode>
        <childnode refid="3286" relation="include">
        </childnode>
        <childnode refid="3275" relation="include">
        </childnode>
      </node>
      <node id="3266">
        <label>/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_cte.c</label>
        <link refid="ll_cte.c"/>
        <childnode refid="3267" relation="include">
        </childnode>
        <childnode refid="3291" relation="include">
        </childnode>
        <childnode refid="3292" relation="include">
        </childnode>
      </node>
      <node id="3268">
        <label>typedef.h</label>
      </node>
      <node id="3292">
        <label>btcontroller_heap.h</label>
      </node>
      <node id="3274">
        <label>white_list.h</label>
        <link refid="white__list_8h"/>
        <childnode refid="3268" relation="include">
        </childnode>
      </node>
      <node id="3288">
        <label>audio_codec.h</label>
        <link refid="audio__codec_8h"/>
        <childnode refid="3273" relation="include">
        </childnode>
      </node>
      <node id="3279">
        <label>ble/ll_scan.h</label>
        <link refid="ll__scan_8h"/>
        <childnode refid="3270" relation="include">
        </childnode>
      </node>
      <node id="3277">
        <label>ble/llcp.h</label>
        <link refid="llcp_8h"/>
        <childnode refid="3268" relation="include">
        </childnode>
        <childnode refid="3273" relation="include">
        </childnode>
      </node>
      <node id="3283">
        <label>multiple_phys.h</label>
        <link refid="multiple__phys_8h"/>
        <childnode refid="3268" relation="include">
        </childnode>
      </node>
      <node id="3281">
        <label>resolve_list.h</label>
        <link refid="resolve__list_8h"/>
        <childnode refid="3268" relation="include">
        </childnode>
      </node>
      <node id="3270">
        <label>ble_interface.h</label>
      </node>
      <node id="3284">
        <label>ble/ll_cte.h</label>
        <link refid="ll__cte_8h"/>
        <childnode refid="3273" relation="include">
        </childnode>
      </node>
      <node id="3291">
        <label>hci_controller.h</label>
      </node>
      <node id="3271">
        <label>common/sys_timer.h</label>
      </node>
      <node id="3267">
        <label>ble/link_layer.h</label>
        <link refid="link__layer_8h"/>
        <childnode refid="3268" relation="include">
        </childnode>
        <childnode refid="3269" relation="include">
        </childnode>
        <childnode refid="3270" relation="include">
        </childnode>
        <childnode refid="3271" relation="include">
        </childnode>
        <childnode refid="3272" relation="include">
        </childnode>
        <childnode refid="3273" relation="include">
        </childnode>
        <childnode refid="3274" relation="include">
        </childnode>
        <childnode refid="3275" relation="include">
        </childnode>
        <childnode refid="3276" relation="include">
        </childnode>
        <childnode refid="3277" relation="include">
        </childnode>
        <childnode refid="3278" relation="include">
        </childnode>
        <childnode refid="3279" relation="include">
        </childnode>
        <childnode refid="3280" relation="include">
        </childnode>
        <childnode refid="3281" relation="include">
        </childnode>
        <childnode refid="3282" relation="include">
        </childnode>
        <childnode refid="3283" relation="include">
        </childnode>
        <childnode refid="3284" relation="include">
        </childnode>
        <childnode refid="3285" relation="include">
        </childnode>
        <childnode refid="3287" relation="include">
        </childnode>
        <childnode refid="3289" relation="include">
        </childnode>
        <childnode refid="3290" relation="include">
        </childnode>
      </node>
      <node id="3273">
        <label>ll_defines.h</label>
        <link refid="ll__defines_8h"/>
        <childnode refid="3268" relation="include">
        </childnode>
      </node>
      <node id="3289">
        <label>ble/ll_cis.h</label>
        <link refid="ll__cis_8h"/>
        <childnode refid="3285" relation="include">
        </childnode>
        <childnode refid="3267" relation="include">
        </childnode>
      </node>
      <node id="3287">
        <label>ble/ll_bis.h</label>
        <link refid="ll__bis_8h"/>
        <childnode refid="3285" relation="include">
        </childnode>
        <childnode refid="3288" relation="include">
        </childnode>
      </node>
      <node id="3290">
        <label>ble/ll_pc.h</label>
        <link refid="ll__pc_8h"/>
        <childnode refid="3273" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="link__layer_8h" kindref="compound">ble/link_layer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hci_controller.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;btcontroller_heap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BLUETOOTH_5P1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;RF_cte.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>LOG_TAG_CONST<sp/><sp/><sp/><sp/><sp/>LL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_TAG<sp/><sp/><sp/><sp/><sp/>&quot;[LL-CTE]&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_ERROR_ENABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_INFO_ENABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_DUMP_ENABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/debug.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_MS_EXTENSIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>bss_seg(&quot;.ble_ll_bss&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>data_seg(&quot;.ble_ll_data&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>const_seg(&quot;.ble_ll_const&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>code_seg(&quot;.ble_ll_code&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_MALLOC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ext_this<sp/><sp/><sp/><sp/><sp/><sp/>(ext_ll_hdl)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>HAVE_MALLOC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ext_this<sp/><sp/><sp/><sp/><sp/><sp/>(&amp;ext_ll_hdl)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAVE_MALLOC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ll_cte_rx_probe_handler(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*priv,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cte_data_t<sp/>*rx)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_FEATURES_IS_SUPPORT_OPTIMIZE(LL_FEAT_CONNLESS_CTE_RECV<sp/>|<sp/>LL_FEAT_CONN_CTE_REQ);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>putchar(</highlight><highlight class="charliteral">&apos;L&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="link__layer_8c_1af5e4ac77575bf70aae9293b0c2925f61" kindref="member">ll_thread_resume</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ble_cte_handler<sp/>ll_cte_scan_handler<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>.cte_rx_probe_handler<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ll_cte_rx_probe_handler,</highlight></codeline>
<codeline lineno="38"><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*build_cte_iq_sample_report(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cte_rx<sp/>*rx)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__cte__iq__sample__report" kindref="compound">le_cte_iq_sample_report</ref><sp/>*report;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>u16<sp/>report_len<sp/>=<sp/>(rx-&gt;data.sample_cnt<sp/>+<sp/>4)<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>=<sp/>__bt_malloc(<ref refid="ll__cte_8h_1a7d34123b6512a6a2d1c9693c1ed7de6b" kindref="member">CTE_REPORT_EVT_LEN</ref>(report_len));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(report)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report-&gt;<ref refid="structle__cte__iq__sample__report_1ae99cd2bd03bf1061d5d36a8306ab5ddf" kindref="member">rx_phy</ref><sp/>=<sp/>rx-&gt;data.rxphy;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report-&gt;<ref refid="structle__cte__iq__sample__report_1a0178f223512448154023ff4a3fbad258" kindref="member">cte_type</ref><sp/>=<sp/>rx-&gt;data.cte_type;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report-&gt;<ref refid="structle__cte__iq__sample__report_1aa76eb7c5005c630357c8b4c85f37b1fd" kindref="member">data_channel_index</ref><sp/>=<sp/>rx-&gt;data.channel_id;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report-&gt;<ref refid="structle__cte__iq__sample__report_1a121823ddffe017709ba35190d2aed2ae" kindref="member">conn_event_counter</ref><sp/>=<sp/>rx-&gt;data.event_cnt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report-&gt;<ref refid="structle__cte__iq__sample__report_1a492102ea4e65578ca1bc03bb122c3782" kindref="member">slot_duartations</ref><sp/>=<sp/>rx-&gt;data.slot_dura;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report-&gt;<ref refid="structle__cte__iq__sample__report_1aaa6bdf66e6a2643b24d77a2f51c5a7ba" kindref="member">packet_status</ref><sp/>=<sp/>rx-&gt;data.pkt_status<sp/>&amp;<sp/>0x3;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report-&gt;<ref refid="structle__cte__iq__sample__report_1a8a6f49044b447e14793581cb2c7eda90" kindref="member">rssi_ant_id</ref><sp/>=<sp/>rx-&gt;data.rssi_ant_id;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report-&gt;<ref refid="structle__cte__iq__sample__report_1a7d1f2227fdef0adaf4c4162bdbffab51" kindref="member">sample_cnt</ref><sp/>=<sp/>rx-&gt;data.sample_cnt;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8<sp/>i;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>report-&gt;<ref refid="structle__cte__iq__sample__report_1a7d1f2227fdef0adaf4c4162bdbffab51" kindref="member">sample_cnt</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report-&gt;<ref refid="structle__cte__iq__sample__report_1a91275eaead726b4e211385b825d5de3e" kindref="member">i_sample</ref>[i]<sp/>=<sp/>rx-&gt;data.i_data[2<sp/>*<sp/>i]<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report-&gt;<ref refid="structle__cte__iq__sample__report_1a91275eaead726b4e211385b825d5de3e" kindref="member">i_sample</ref>[report-&gt;<ref refid="structle__cte__iq__sample__report_1a7d1f2227fdef0adaf4c4162bdbffab51" kindref="member">sample_cnt</ref><sp/>+<sp/>i]<sp/>=<sp/>rx-&gt;data.i_data[2<sp/>*<sp/>i<sp/>+<sp/>1]<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>report;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>le_connless_iq_report_event(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__ext__scan__link" kindref="compound">le_ext_scan_link</ref><sp/>*link,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__cte__iq__sample__report" kindref="compound">le_cte_iq_sample_report</ref><sp/>*report);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>le_connless_cte_iq_report_event_handle(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__ext__scan__link" kindref="compound">le_ext_scan_link</ref><sp/>*link,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cte_rx<sp/>*rx)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__cte__iq__sample__report" kindref="compound">le_cte_iq_sample_report</ref><sp/>*report;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>=<sp/>build_cte_iq_sample_report(rx);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(report)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>le_connless_iq_report_event(link,<sp/>report);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__bt_free(report);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>le_connect_iq_report_event(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*link,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__cte__iq__sample__report" kindref="compound">le_cte_iq_sample_report</ref><sp/>*report);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>le_connection_cte_iq_report_event_handle(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*link,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cte_rx<sp/>*rx)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__cte__iq__sample__report" kindref="compound">le_cte_iq_sample_report</ref><sp/>*report;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>=<sp/>build_cte_iq_sample_report(rx);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(report)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>le_connect_iq_report_event(link,<sp/>report);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__bt_free(report);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ll_receive_cte_req(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*link,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>ble_rx<sp/>*rx)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>normal_rsp_flag<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_FEATURES_IS_SUPPORT(LL_FEAT_CONN_CTE_REQ<sp/>|<sp/>LL_FEAT_CONN_CTE_RSP))<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">set_cte_req_parameter<sp/>*parm<sp/>=<sp/>&amp;rx-&gt;data[1];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;rx_cte_param:%x\n&quot;</highlight><highlight class="normal">,<sp/>rx-&gt;data[1]);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(link-&gt;<ref refid="structle__link_1a3323edf6ca0af83ed4491ef733b641f3" kindref="member">cte_tx_param</ref><sp/>&amp;&amp;<sp/>link-&gt;<ref refid="structle__link_1a3323edf6ca0af83ed4491ef733b641f3" kindref="member">cte_tx_param</ref>-&gt;<ref refid="structcte__tx__param__t_1a591206029ad483db3bff780a5a648846" kindref="member">Enable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normal_rsp_flag<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(link-&gt;<ref refid="structle__link_1a3323edf6ca0af83ed4491ef733b641f3" kindref="member">cte_tx_param</ref>-&gt;<ref refid="structcte__tx__param__t_1a53c489bf6ff8a7a51eec28ca3ecaea2d" kindref="member">Support_CTE_Types</ref><sp/>&amp;<sp/>BIT(parm-&gt;CTETypeReq))<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__cte_ops-&gt;cte_ioctrl(link-&gt;<ref refid="structle__link_1aa5f51601aa9fec985c79140bbc6cc139" kindref="member">hw</ref>,<sp/>BLE_FORMAT_4,<sp/>BLE_CTE_CONN_TX_TYPE_AND_LEN,<sp/>parm-&gt;CTETypeReq,<sp/>parm-&gt;MinCTELenReq);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;ll_cte_rsp\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="link__layer_8c_1a8c46755c6f40e08f19ca426a8f7bc360" kindref="member">ll_send_control_data</ref>(link,<sp/><ref refid="ll__defines_8h_1a394b3903fbf00ba2b6243f60689a5a5fab5f58e864e7fa384b2bc21509861a910" kindref="member">LL_CTE_RSP</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;ll_cte_reject\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="link__layer_8c_1a8c46755c6f40e08f19ca426a8f7bc360" kindref="member">ll_send_control_data</ref>(link,<sp/><ref refid="ll__defines_8h_1a394b3903fbf00ba2b6243f60689a5a5fa9c969339f00a061d5375437fcad20ec6" kindref="member">LL_REJECT_IND_EXT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;11&quot;</highlight><highlight class="normal">,<sp/>rx-&gt;data[0],<sp/>UNSUPPORTED_FEATURE_OR_PARAMETER_VALUE);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>normal_rsp_flag)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="link__layer_8c_1a8c46755c6f40e08f19ca426a8f7bc360" kindref="member">ll_send_control_data</ref>(link,<sp/><ref refid="ll__defines_8h_1a394b3903fbf00ba2b6243f60689a5a5fa88aba826f1c84703e2ce25ce9b8a4df1" kindref="member">LL_UNKNOWN_RSP</ref>,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>rx-&gt;data[0]);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;Slave<sp/>Tx<sp/>-<sp/>LL_UNKNOWN_RSP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ll_cte_conn_rx_post(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*priv,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cte_rx<sp/>*rx)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*link<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*)priv;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>le_connection_cte_iq_report_event_handle(link,<sp/>rx);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ll_receive_cte_rsp(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*link,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>ble_rx<sp/>*rx)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_FEATURES_IS_SUPPORT(LL_FEAT_CONN_CTE_REQ<sp/>|<sp/>LL_FEAT_CONN_CTE_RSP))<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__cte_ops-&gt;cte_handler_register(link-&gt;<ref refid="structle__link_1aa5f51601aa9fec985c79140bbc6cc139" kindref="member">hw</ref>,<sp/>link,<sp/>NULL);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__cte_ops-&gt;cte_upload_data(link-&gt;<ref refid="structle__link_1aa5f51601aa9fec985c79140bbc6cc139" kindref="member">hw</ref>,<sp/>ll_cte_conn_rx_post);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="link__layer_8c_1a8c46755c6f40e08f19ca426a8f7bc360" kindref="member">ll_send_control_data</ref>(link,<sp/><ref refid="ll__defines_8h_1a394b3903fbf00ba2b6243f60689a5a5fa88aba826f1c84703e2ce25ce9b8a4df1" kindref="member">LL_UNKNOWN_RSP</ref>,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>rx-&gt;data[0]);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ll_cte_scan_rx_post(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*priv,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cte_data_t<sp/>*rx)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__ext__scan__link" kindref="compound">le_ext_scan_link</ref><sp/>*link<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__ext__scan__link" kindref="compound">le_ext_scan_link</ref><sp/>*)priv;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>putchar(</highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(link-&gt;<ref refid="structle__ext__scan__link_1ade0e603045828a52ca79cf4915c9ca2f" kindref="member">state</ref>)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="extended__advertising_8h_1a61dadd085c1777f559549e05962b2c9eaeea0c02ac90ae394de6a3b726c561597" kindref="member">LL_EXT_SCANNING_SYNC_CREATE</ref>:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="extended__advertising_8h_1a61dadd085c1777f559549e05962b2c9eac33f62769d9ad92187c740ee9724f84a" kindref="member">LL_EXT_SCANNING_SYNC_ESTABLISHED</ref>:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>le_connless_cte_iq_report_event_handle(link,<sp/>rx);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ll_cte_scan_rx_post_process(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*empty)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_FEATURES_IS_SUPPORT_OPTIMIZE(LL_FEAT_CONNLESS_CTE_RECV);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ble_cte_iq_sample<sp/>*cte<sp/>=<sp/>__ext_this-&gt;ext_scan_link-&gt;cte_iq_sample;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__ext_this-&gt;ext_scan_link<sp/>&amp;&amp;<sp/>cte)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cte-&gt;Sampling_Enable)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__cte_ops-&gt;cte_upload_data(__ext_this-&gt;ext_scan_link-&gt;hw,<sp/>ll_cte_scan_rx_post);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__cte_ops-&gt;cte_ioctrl(__ext_this-&gt;ext_scan_link-&gt;hw,<sp/>BLE_FORMAT_5,<sp/>BLE_CTE_GET_RX_EMPTY,<sp/>empty);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="ll__cte_8h_1aba547b1a73e0f602b77d28ab74f31d6c" kindref="member">ll_cte_rx_post_process</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rx_empty<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_cte_scan_rx_post_process(&amp;rx_empty);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rx_empty;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>le_set_connless_cte_tx_params(u16<sp/>opcode,<sp/>u8<sp/>*data,<sp/>u32<sp/>size)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>i;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____ext__adv__group" kindref="compound">__ext_adv_group</ref><sp/>*p;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>cur_handle<sp/>=<sp/>data[GET_STRUCT_MEMBER_OFFSET(<ref refid="structcte__connless__tx__param" kindref="compound">cte_connless_tx_param</ref>,<sp/>Advertising_Handle)];</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>Switching_Pattern_Length<sp/>=<sp/>data[GET_STRUCT_MEMBER_OFFSET(<ref refid="structcte__connless__tx__param" kindref="compound">cte_connless_tx_param</ref>,<sp/>Switching_Pattern_Length)];</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="ll__ext__adv_8h_1aaa31176734fc1cea7a0b3bbb3b43fb4b" kindref="member">ll_find_adv_set_by_handle</ref>(cur_handle);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;ext<sp/>adv<sp/>data<sp/>UNKNOWN_ADVERTISING_IDENTIFIER&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UNKNOWN_ADVERTISING_IDENTIFIER;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>p-&gt;<ref refid="struct____ext__adv__group_1a138f5cf2ec56e72c2e9f44792901c69f" kindref="member">cte_info</ref>)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct____ext__adv__group_1a138f5cf2ec56e72c2e9f44792901c69f" kindref="member">cte_info</ref><sp/>=<sp/>__bt_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnless__cte__info" kindref="compound">connless_cte_info</ref>)<sp/>+<sp/>Switching_Pattern_Length);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>p-&gt;<ref refid="struct____ext__adv__group_1a138f5cf2ec56e72c2e9f44792901c69f" kindref="member">cte_info</ref>)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;periodic<sp/>param<sp/>set<sp/>MEMORY_CAPACITY_EXCEEDED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MEMORY_CAPACITY_EXCEEDED;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="struct____ext__adv__group_1a138f5cf2ec56e72c2e9f44792901c69f" kindref="member">cte_info</ref>-&gt;<ref refid="structconnless__cte__info_1a7757ef054b99d5f1ac5c599efd44fa45" kindref="member">Enable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;cte<sp/>param<sp/>set<sp/>COMMAND_DISALLOWED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>COMMAND_DISALLOWED;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct____ext__adv__group_1a138f5cf2ec56e72c2e9f44792901c69f" kindref="member">cte_info</ref>-&gt;<ref refid="structconnless__cte__info_1a8e66027bdabe3b3c5cbe822ff9b4a2f8" kindref="member">CTE_Length</ref><sp/>=<sp/>data[GET_STRUCT_MEMBER_OFFSET(<ref refid="structcte__connless__tx__param" kindref="compound">cte_connless_tx_param</ref>,<sp/>CTE_Length)];</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct____ext__adv__group_1a138f5cf2ec56e72c2e9f44792901c69f" kindref="member">cte_info</ref>-&gt;<ref refid="structconnless__cte__info_1aaa3659086070850eaabe1b0e6cbbc471" kindref="member">CTE_Type</ref><sp/>=<sp/>data[GET_STRUCT_MEMBER_OFFSET(<ref refid="structcte__connless__tx__param" kindref="compound">cte_connless_tx_param</ref>,<sp/>CTE_Type)];</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct____ext__adv__group_1a138f5cf2ec56e72c2e9f44792901c69f" kindref="member">cte_info</ref>-&gt;<ref refid="structconnless__cte__info_1ac6e26a6eb9d25d5fa34a9c7ce401cda8" kindref="member">CTE_Count</ref><sp/>=<sp/>data[GET_STRUCT_MEMBER_OFFSET(<ref refid="structcte__connless__tx__param" kindref="compound">cte_connless_tx_param</ref>,<sp/>CTE_Count)];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct____ext__adv__group_1a138f5cf2ec56e72c2e9f44792901c69f" kindref="member">cte_info</ref>-&gt;<ref refid="structconnless__cte__info_1a8b1675efdd025b8853eacc502320a965" kindref="member">Switching_Pattern_Length</ref><sp/>=<sp/>Switching_Pattern_Length;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>*ant_id_ptr<sp/>=<sp/>&amp;data[GET_STRUCT_MEMBER_OFFSET(<ref refid="structcte__connless__tx__param" kindref="compound">cte_connless_tx_param</ref>,<sp/>Antenna_ID)];</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Switching_Pattern_Length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct____ext__adv__group_1a138f5cf2ec56e72c2e9f44792901c69f" kindref="member">cte_info</ref>-&gt;<ref refid="structconnless__cte__info_1a5185a35b260810842c2ffc9301557592" kindref="member">Antenna_ID</ref>[i]<sp/>=<sp/>ant_id_ptr[i];</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;cte<sp/>param<sp/>set<sp/>succ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SUCCESS;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ll_cte_connless_iq_sample_open(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__ext__scan__link" kindref="compound">le_ext_scan_link</ref><sp/>*link)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//__ble5_ops-&gt;ext_ioctrl(link-&gt;hw,<sp/>BLE_SET_CONNLESS_CTE_IQ_SAMPLE,<sp/>link-&gt;cte_iq_sample);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>__cte_ops-&gt;cte_open(link-&gt;<ref refid="structle__ext__scan__link_1ad7fb35738ce774536efaaaec6e7e15d2" kindref="member">hw</ref>,<sp/>BLE_FORMAT_5);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>__cte_ops-&gt;cte_handler_register(link-&gt;<ref refid="structle__ext__scan__link_1ad7fb35738ce774536efaaaec6e7e15d2" kindref="member">hw</ref>,<sp/>link,<sp/>&amp;ll_cte_scan_handler);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>__cte_ops-&gt;cte_ioctrl(link-&gt;<ref refid="structle__ext__scan__link_1ad7fb35738ce774536efaaaec6e7e15d2" kindref="member">hw</ref>,<sp/>BLE_FORMAT_5,<sp/>BLE_CTE_IQ_SAMPLE_ENABLE,<sp/>link-&gt;<ref refid="structle__ext__scan__link_1a59757ed828e1643e723853635286a6d2" kindref="member">cte_iq_sample</ref>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ll_cte_connless_iq_sample_close(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__ext__scan__link" kindref="compound">le_ext_scan_link</ref><sp/>*link)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//__ble5_ops-&gt;ext_ioctrl(link-&gt;hw,BLE_SET_CONNLESS_CTE_IQ_SAMPLE,<sp/>link-&gt;cte_iq_sample);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>le_set_connless_cte_iq_sample_enable(u16<sp/>opcode,<sp/>u8<sp/>*data,<sp/>u32<sp/>size)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>__ext_this-&gt;ext_scan_link)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;Can<sp/>not<sp/>iq<sp/>sample<sp/><sp/>before<sp/>creat<sp/>ext<sp/>scan&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>COMMAND_DISALLOWED;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>__ext_this-&gt;ext_scan_link-&gt;period_sync)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;Can<sp/>not<sp/>iq<sp/>sample<sp/>before<sp/>creat<sp/>period<sp/>sync&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>COMMAND_DISALLOWED;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>u16<sp/>sync_handle<sp/>=<sp/>btctler_little_endian_read_16(data,<sp/>0);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sync_handle<sp/>!=<sp/>__ext_this-&gt;ext_scan_link-&gt;period_sync-&gt;sync_handle)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;cte<sp/>iq<sp/>smple<sp/>UNKNOWN_ADVERTISING_IDENTIFIER&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UNKNOWN_ADVERTISING_IDENTIFIER;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>switch_pattern_len<sp/>=<sp/>data[GET_STRUCT_MEMBER_OFFSET(<ref refid="structcte__set__connless__iq__sample__enable" kindref="compound">cte_set_connless_iq_sample_enable</ref>,<sp/>Switching_Pattern_Length)];</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>__ext_this-&gt;ext_scan_link-&gt;cte_iq_sample)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ext_this-&gt;ext_scan_link-&gt;cte_iq_sample<sp/>=<sp/>__bt_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcte__set__connless__iq__sample__enable" kindref="compound">cte_set_connless_iq_sample_enable</ref>)<sp/>+<sp/>switch_pattern_len);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ble_cte_iq_sample<sp/>*cte<sp/>=<sp/>__ext_this-&gt;ext_scan_link-&gt;cte_iq_sample;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>cte)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;create<sp/>cte<sp/>iq_sampel<sp/>err&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MEMORY_CAPACITY_EXCEEDED;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy((u8<sp/>*)cte,<sp/>data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcte__set__connless__iq__sample__enable" kindref="compound">cte_set_connless_iq_sample_enable</ref>)<sp/>+<sp/>switch_pattern_len);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>ll_cte_connless_iq_sample_open(__ext_this-&gt;ext_scan_link);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SUCCESS;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>le_set_connless_cte_tx_enable(u16<sp/>opcode,<sp/>u8<sp/>*data,<sp/>u32<sp/>size)</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____ext__adv__group" kindref="compound">__ext_adv_group</ref><sp/>*p;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>cur_handle<sp/>=<sp/>data[GET_STRUCT_MEMBER_OFFSET(<ref refid="structcte__connless__tx__enbale" kindref="compound">cte_connless_tx_enbale</ref>,<sp/>Advertising_Handle)];</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>enable<sp/>=<sp/>data[GET_STRUCT_MEMBER_OFFSET(<ref refid="structcte__connless__tx__enbale" kindref="compound">cte_connless_tx_enbale</ref>,<sp/>CTE_Enable)];</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>SUCCESS;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="ll__ext__adv_8h_1aaa31176734fc1cea7a0b3bbb3b43fb4b" kindref="member">ll_find_adv_set_by_handle</ref>(cur_handle);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;periodic<sp/>enable<sp/>UNKNOWN_ADVERTISING_IDENTIFIER&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UNKNOWN_ADVERTISING_IDENTIFIER;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((p-&gt;<ref refid="struct____ext__adv__group_1a81a1cf38bdcd8a03b0124202704870b7" kindref="member">periodic_param</ref><sp/>&amp;&amp;<sp/>p-&gt;<ref refid="struct____ext__adv__group_1a81a1cf38bdcd8a03b0124202704870b7" kindref="member">periodic_param</ref>-&gt;enable)<sp/>||<sp/>p-&gt;<ref refid="struct____ext__adv__group_1a3d7ed15d4d7a4e8ce2c14efe55364e4d" kindref="member">ext_adv_en</ref>.<ref refid="structext__advertising__enable_1ad491d16b471c96c4e8e2a54d3598fc79" kindref="member">enable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;periodic<sp/>enable<sp/>or<sp/>ext<sp/>adv<sp/>already<sp/>open&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>COMMAND_DISALLOWED;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="struct____ext__adv__group_1a138f5cf2ec56e72c2e9f44792901c69f" kindref="member">cte_info</ref>)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct____ext__adv__group_1a138f5cf2ec56e72c2e9f44792901c69f" kindref="member">cte_info</ref>-&gt;<ref refid="structconnless__cte__info_1a7757ef054b99d5f1ac5c599efd44fa45" kindref="member">Enable</ref><sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;cte<sp/>status<sp/>is<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>enable<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&lt;enable&gt;&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&lt;disable&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>le_set_connection_cte_rx_params(u16<sp/>opcode,<sp/>u8<sp/>*data,<sp/>u32<sp/>size)</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>SUCCESS;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcte__connection__rx__param" kindref="compound">cte_connection_rx_param</ref><sp/>*param<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcte__connection__rx__param" kindref="compound">cte_connection_rx_param</ref><sp/>*)data;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*link<sp/>=<sp/><ref refid="link__layer_8c_1ad0cf3cf97fdaf769c891098d100efedc" kindref="member">ll_link_for_handle</ref>(param-&gt;<ref refid="structcte__connection__rx__param_1a8ed664b6eabe5dbaf0719d96d7e692fb" kindref="member">Connection_Handle</ref>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(link<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;UNKNOWN_CONNECTION_IDENTIFIER&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UNKNOWN_CONNECTION_IDENTIFIER;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>link-&gt;<ref refid="structle__link_1a29831ff77d2ce522910178e30b94da63" kindref="member">cte_rx_param</ref><sp/>=<sp/>__bt_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcte__rx__param__t" kindref="compound">cte_rx_param_t</ref>)<sp/>+<sp/>param-&gt;<ref refid="structcte__connection__rx__param_1ad9f3a10649d5fb3ccbee8c837083f2d6" kindref="member">Switching_Pattern_Length</ref>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>link-&gt;<ref refid="structle__link_1a29831ff77d2ce522910178e30b94da63" kindref="member">cte_rx_param</ref>)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;rx<sp/>param<sp/>set<sp/>MEMORY_CAPACITY_EXCEEDED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MEMORY_CAPACITY_EXCEEDED;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>link-&gt;<ref refid="structle__link_1a29831ff77d2ce522910178e30b94da63" kindref="member">cte_rx_param</ref>-&gt;<ref refid="structcte__rx__param__t_1aa13d3b52984d5c695fc20932aeb6dbd5" kindref="member">Sampling_Enable</ref><sp/>=<sp/>param-&gt;<ref refid="structcte__connection__rx__param_1aaa30b573af9716cb747e9a15bfbeae0e" kindref="member">Sampling_Enable</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>link-&gt;<ref refid="structle__link_1a29831ff77d2ce522910178e30b94da63" kindref="member">cte_rx_param</ref>-&gt;<ref refid="structcte__rx__param__t_1af6d92168f0b08af739df9965060f4ebf" kindref="member">Slot_Duartations</ref><sp/>=<sp/>param-&gt;<ref refid="structcte__connection__rx__param_1a066a3f6e5b151610e50099754446776f" kindref="member">Slot_Durations</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>link-&gt;<ref refid="structle__link_1a29831ff77d2ce522910178e30b94da63" kindref="member">cte_rx_param</ref>-&gt;<ref refid="structcte__rx__param__t_1ad63e4bb035613787fbf01121de91abe2" kindref="member">Switching_Pattern_Length</ref><sp/>=<sp/>param-&gt;<ref refid="structcte__connection__rx__param_1ad9f3a10649d5fb3ccbee8c837083f2d6" kindref="member">Switching_Pattern_Length</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;rx_param-en:%x<sp/>slot:%x<sp/>pat_len:%x\n&quot;</highlight><highlight class="normal">,<sp/>link-&gt;<ref refid="structle__link_1a29831ff77d2ce522910178e30b94da63" kindref="member">cte_rx_param</ref>-&gt;<ref refid="structcte__rx__param__t_1aa13d3b52984d5c695fc20932aeb6dbd5" kindref="member">Sampling_Enable</ref>,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>link-&gt;<ref refid="structle__link_1a29831ff77d2ce522910178e30b94da63" kindref="member">cte_rx_param</ref>-&gt;<ref refid="structcte__rx__param__t_1af6d92168f0b08af739df9965060f4ebf" kindref="member">Slot_Duartations</ref>,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>link-&gt;<ref refid="structle__link_1a29831ff77d2ce522910178e30b94da63" kindref="member">cte_rx_param</ref>-&gt;<ref refid="structcte__rx__param__t_1ad63e4bb035613787fbf01121de91abe2" kindref="member">Switching_Pattern_Length</ref>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(link-&gt;<ref refid="structle__link_1a29831ff77d2ce522910178e30b94da63" kindref="member">cte_rx_param</ref>-&gt;<ref refid="structcte__rx__param__t_1adbf2556ba78956937b7e073a7f1f719a" kindref="member">Antenna_ID</ref>,<sp/>param-&gt;<ref refid="structcte__connection__rx__param_1a8fdf544f00361d27f3a3bc57a0966bf1" kindref="member">Antenna_ID</ref>,<sp/>param-&gt;<ref refid="structcte__connection__rx__param_1ad9f3a10649d5fb3ccbee8c837083f2d6" kindref="member">Switching_Pattern_Length</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>putchar(</highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>__cte_ops-&gt;cte_open(link-&gt;<ref refid="structle__link_1aa5f51601aa9fec985c79140bbc6cc139" kindref="member">hw</ref>,<sp/>BLE_FORMAT_4);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>__cte_ops-&gt;cte_ioctrl(link-&gt;<ref refid="structle__link_1aa5f51601aa9fec985c79140bbc6cc139" kindref="member">hw</ref>,<sp/>BLE_FORMAT_4,<sp/>BLE_CTE_CONN_RX_ANTENNA_SETTING,<sp/>link-&gt;<ref refid="structle__link_1a29831ff77d2ce522910178e30b94da63" kindref="member">cte_rx_param</ref>-&gt;<ref refid="structcte__rx__param__t_1ad63e4bb035613787fbf01121de91abe2" kindref="member">Switching_Pattern_Length</ref>,<sp/>link-&gt;<ref refid="structle__link_1a29831ff77d2ce522910178e30b94da63" kindref="member">cte_rx_param</ref>-&gt;<ref refid="structcte__rx__param__t_1adbf2556ba78956937b7e073a7f1f719a" kindref="member">Antenna_ID</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>__cte_ops-&gt;cte_ioctrl(link-&gt;<ref refid="structle__link_1aa5f51601aa9fec985c79140bbc6cc139" kindref="member">hw</ref>,<sp/>BLE_FORMAT_4,<sp/>BLE_CTE_CONN_RX_SMPLE_ENABLE,<sp/>link-&gt;<ref refid="structle__link_1a29831ff77d2ce522910178e30b94da63" kindref="member">cte_rx_param</ref>-&gt;<ref refid="structcte__rx__param__t_1aa13d3b52984d5c695fc20932aeb6dbd5" kindref="member">Sampling_Enable</ref>,<sp/>link-&gt;<ref refid="structle__link_1a29831ff77d2ce522910178e30b94da63" kindref="member">cte_rx_param</ref>-&gt;<ref refid="structcte__rx__param__t_1af6d92168f0b08af739df9965060f4ebf" kindref="member">Slot_Duartations</ref>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>le_set_connection_cte_tx_params(u16<sp/>opcode,<sp/>u8<sp/>*data,<sp/>u32<sp/>size)</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>SUCCESS;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcte__connection__tx__param" kindref="compound">cte_connection_tx_param</ref><sp/>*param<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcte__connection__tx__param" kindref="compound">cte_connection_tx_param</ref><sp/>*)data;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*link<sp/>=<sp/><ref refid="link__layer_8c_1ad0cf3cf97fdaf769c891098d100efedc" kindref="member">ll_link_for_handle</ref>(param-&gt;<ref refid="structcte__connection__tx__param_1a2039054c1bf3616e7f248a2ab417f19c" kindref="member">Connection_Handle</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(link<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;UNKNOWN_CONNECTION_IDENTIFIER&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UNKNOWN_CONNECTION_IDENTIFIER;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>link-&gt;<ref refid="structle__link_1a3323edf6ca0af83ed4491ef733b641f3" kindref="member">cte_tx_param</ref><sp/>=<sp/>__bt_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcte__tx__param__t" kindref="compound">cte_tx_param_t</ref>)<sp/>+<sp/>param-&gt;<ref refid="structcte__connection__tx__param_1acd0e14e853fe20562553de6280e8951c" kindref="member">Switching_Pattern_Length</ref>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>link-&gt;<ref refid="structle__link_1a3323edf6ca0af83ed4491ef733b641f3" kindref="member">cte_tx_param</ref>)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;tx<sp/>param<sp/>set<sp/>MEMORY_CAPACITY_EXCEEDED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MEMORY_CAPACITY_EXCEEDED;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>link-&gt;<ref refid="structle__link_1a3323edf6ca0af83ed4491ef733b641f3" kindref="member">cte_tx_param</ref>-&gt;<ref refid="structcte__tx__param__t_1a53c489bf6ff8a7a51eec28ca3ecaea2d" kindref="member">Support_CTE_Types</ref><sp/>=<sp/>param-&gt;<ref refid="structcte__connection__tx__param_1a588553c0ebea22b39e28934d36a9f537" kindref="member">CTE_Types</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>link-&gt;<ref refid="structle__link_1a3323edf6ca0af83ed4491ef733b641f3" kindref="member">cte_tx_param</ref>-&gt;<ref refid="structcte__tx__param__t_1a23e20c7e83b119dcb1ec7b48f2f2e950" kindref="member">Switching_Pattern_Length</ref><sp/>=<sp/>param-&gt;<ref refid="structcte__connection__tx__param_1acd0e14e853fe20562553de6280e8951c" kindref="member">Switching_Pattern_Length</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(link-&gt;<ref refid="structle__link_1a3323edf6ca0af83ed4491ef733b641f3" kindref="member">cte_tx_param</ref>-&gt;<ref refid="structcte__tx__param__t_1a81ab1b545c9af37629a99a13368255b0" kindref="member">Antenna_ID</ref>,<sp/>param-&gt;<ref refid="structcte__connection__tx__param_1a8374b6e4047c76b000eadde0f31e19b1" kindref="member">Antenna_ID</ref>,<sp/>param-&gt;<ref refid="structcte__connection__tx__param_1acd0e14e853fe20562553de6280e8951c" kindref="member">Switching_Pattern_Length</ref>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;tx_params-Sup_types:%x<sp/>pat_len:%x\n&quot;</highlight><highlight class="normal">,<sp/>param-&gt;<ref refid="structcte__connection__tx__param_1a588553c0ebea22b39e28934d36a9f537" kindref="member">CTE_Types</ref>,<sp/>param-&gt;<ref refid="structcte__connection__tx__param_1acd0e14e853fe20562553de6280e8951c" kindref="member">Switching_Pattern_Length</ref>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>__cte_ops-&gt;cte_open(link-&gt;<ref refid="structle__link_1aa5f51601aa9fec985c79140bbc6cc139" kindref="member">hw</ref>,<sp/>BLE_FORMAT_4);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>__cte_ops-&gt;cte_ioctrl(link-&gt;<ref refid="structle__link_1aa5f51601aa9fec985c79140bbc6cc139" kindref="member">hw</ref>,<sp/>BLE_FORMAT_4,<sp/>BLE_CTE_CONN_TX_ANTENNA_SETTING,<sp/>link-&gt;<ref refid="structle__link_1a3323edf6ca0af83ed4491ef733b641f3" kindref="member">cte_tx_param</ref>-&gt;<ref refid="structcte__tx__param__t_1a23e20c7e83b119dcb1ec7b48f2f2e950" kindref="member">Switching_Pattern_Length</ref>,<sp/>link-&gt;<ref refid="structle__link_1a3323edf6ca0af83ed4491ef733b641f3" kindref="member">cte_tx_param</ref>-&gt;<ref refid="structcte__tx__param__t_1a81ab1b545c9af37629a99a13368255b0" kindref="member">Antenna_ID</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__ll_send_cte_req(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*link,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>set_cte_req_parameter<sp/>*param);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>le_set_connection_cte_req_eanble(u16<sp/>opcode,<sp/>u8<sp/>*data,<sp/>u32<sp/>size)</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>SUCCESS;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcte__connection__request__enable" kindref="compound">cte_connection_request_enable</ref><sp/>*param<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcte__connection__request__enable" kindref="compound">cte_connection_request_enable</ref><sp/>*)data;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*link<sp/>=<sp/><ref refid="link__layer_8c_1ad0cf3cf97fdaf769c891098d100efedc" kindref="member">ll_link_for_handle</ref>(param-&gt;<ref refid="structcte__connection__request__enable_1aae492daa03377fd77aa58b266c117409" kindref="member">Connection_Handle</ref>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(link<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;UNKNOWN_CONNECTION_IDENTIFIER&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UNKNOWN_CONNECTION_IDENTIFIER;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>link-&gt;<ref refid="structle__link_1a29831ff77d2ce522910178e30b94da63" kindref="member">cte_rx_param</ref>)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;TX<sp/>CTE<sp/>REQ<sp/>DISALLOW&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>COMMAND_DISALLOWED;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;req_param-len:%x<sp/>type:%x\n&quot;</highlight><highlight class="normal">,<sp/>param-&gt;<ref refid="structcte__connection__request__enable_1af6d79d8b027ee9226036e3f55fe75e8b" kindref="member">Requested_CTE_Length</ref>,<sp/>param-&gt;<ref refid="structcte__connection__request__enable_1a27e7af27307ef8084978d0ddbeba4562" kindref="member">Requested_CTE_Type</ref>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">set_cte_req_parameter<sp/>req_cte_param;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>req_cte_param.MinCTELenReq<sp/>=<sp/>param-&gt;<ref refid="structcte__connection__request__enable_1af6d79d8b027ee9226036e3f55fe75e8b" kindref="member">Requested_CTE_Length</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>req_cte_param.RFU<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>req_cte_param.CTETypeReq<sp/>=<sp/>param-&gt;<ref refid="structcte__connection__request__enable_1a27e7af27307ef8084978d0ddbeba4562" kindref="member">Requested_CTE_Type</ref>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>__ll_send_cte_req(link,<sp/>&amp;req_cte_param);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>le_set_connection_cte_rsp_eanble(u16<sp/>opcode,<sp/>u8<sp/>*data,<sp/>u32<sp/>size)</highlight></codeline>
<codeline lineno="374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>SUCCESS;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcte__connection__response__enable" kindref="compound">cte_connection_response_enable</ref><sp/>*param<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcte__connection__response__enable" kindref="compound">cte_connection_response_enable</ref><sp/>*)data;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*link<sp/>=<sp/><ref refid="link__layer_8c_1ad0cf3cf97fdaf769c891098d100efedc" kindref="member">ll_link_for_handle</ref>(param-&gt;<ref refid="structcte__connection__response__enable_1a7f1bf061e60db8dc181ca6218674c8c7" kindref="member">Connection_Handle</ref>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(link<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;UNKNOWN_CONNECTION_IDENTIFIER&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UNKNOWN_CONNECTION_IDENTIFIER;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>link-&gt;<ref refid="structle__link_1a3323edf6ca0af83ed4491ef733b641f3" kindref="member">cte_tx_param</ref>)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;TX<sp/>CTE<sp/>RSP<sp/>DISALLOW&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>COMMAND_DISALLOWED;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>link-&gt;<ref refid="structle__link_1a3323edf6ca0af83ed4491ef733b641f3" kindref="member">cte_tx_param</ref>-&gt;<ref refid="structcte__tx__param__t_1a591206029ad483db3bff780a5a648846" kindref="member">Enable</ref><sp/>=<sp/>param-&gt;<ref refid="structcte__connection__response__enable_1a21598a237722dbb4c3c15f6c3a32b95e" kindref="member">Enable</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;cte_rsp_enable:%x\n&quot;</highlight><highlight class="normal">,<sp/>link-&gt;<ref refid="structle__link_1a3323edf6ca0af83ed4491ef733b641f3" kindref="member">cte_tx_param</ref>-&gt;<ref refid="structcte__tx__param__t_1a591206029ad483db3bff780a5a648846" kindref="member">Enable</ref>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>le_read_antenna_info(u16<sp/>opcode,<sp/>u8<sp/>*data,<sp/>u32<sp/>size)</highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>SUCCESS;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>ONE_US_SW_FOR_AOD_TRANSMISSION<sp/>=<sp/>BIT(0),</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>ONE_US_SMP_FOR_AOD_RECEPTION<sp/>=<sp/>BIT(1),</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>ONE_US_SW_AND_SMP_FOR_AOA_RECPTION<sp/>=<sp/>BIT(2),</highlight></codeline>
<codeline lineno="406"><highlight class="normal">};</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SUPPORT_SWITCHING_SAMPLING_RATES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ONE_US_SMP_FOR_AOD_RECEPTION<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="409"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ONE_US_SW_FOR_AOD_TRANSMISSION<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="410"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ONE_US_SW_AND_SMP_FOR_AOA_RECPTION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_ANTENNAE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_SWITCHING_PATTERN_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_CTE_LENGTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ll__cte_8h_1abae5f9cff3fdcde230bb1af34e4f00b0" kindref="member">le_cmd_set_cte</ref>(u16<sp/>opcode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8<sp/>*data,<sp/>u32<sp/>size)</highlight></codeline>
<codeline lineno="417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ocf<sp/>=<sp/>opcode<sp/>&amp;<sp/>0x3ff;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>match<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>status;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ocf)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_SET_CONNLESS_CTE_TX_PARAMS:</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_LE_SET_CONNLESS_CTE_TX_PARAMS\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>le_set_connless_cte_tx_params(opcode,<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__hci_emit_event_of_cmd_complete(opcode,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_SET_CONNLESS_CTE_TX_ENABLE:</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_LE_SET_CONNLESS_CTE_TX_ENABLE\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>le_set_connless_cte_tx_enable(opcode,<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__hci_emit_event_of_cmd_complete(opcode,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_SET_CONNLESS_IQ_SAMP_ENABLE:</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_LE_SET_CONNLESS_IQ_SAMP_ENABLE\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>le_set_connless_cte_iq_sample_enable(opcode,<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__hci_emit_event_of_cmd_complete(opcode,<sp/></highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal">,<sp/>status,<sp/>btctler_little_endian_read_16(data,<sp/>0));</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_SET_CONN_CTE_RX_PARAMS:</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_LE_SET_CONN_CTE_RX_PARAMS\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>le_set_connection_cte_rx_params(opcode,<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__hci_emit_event_of_cmd_complete(opcode,<sp/></highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal">,<sp/>status,<sp/>btctler_little_endian_read_16(data,<sp/>0));</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_SET_CONN_CTE_TX_PARAMS:</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_LE_SET_CONN_CTE_TX_PARAMS\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>le_set_connection_cte_tx_params(opcode,<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__hci_emit_event_of_cmd_complete(opcode,<sp/></highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal">,<sp/>status,<sp/>btctler_little_endian_read_16(data,<sp/>0));</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_CONN_CTE_REQ_ENABLE:</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_LE_CONN_CTE_REQ_ENABLE\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>le_set_connection_cte_req_eanble(opcode,<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__hci_emit_event_of_cmd_complete(opcode,<sp/></highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal">,<sp/>status,<sp/>btctler_little_endian_read_16(data,<sp/>0));</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_CONN_CTE_RSP_ENABLE:</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_LE_CONN_CTE_RSP_ENABLE\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>le_set_connection_cte_rsp_eanble(opcode,<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__hci_emit_event_of_cmd_complete(opcode,<sp/></highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal">,<sp/>status,<sp/>btctler_little_endian_read_16(data,<sp/>0));</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HCI_LE_READ_ANTENNA_INFO:</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;HCI_LE_READ_ANTENNA_INFO\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>le_read_antenna_info(opcode,<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__hci_emit_event_of_cmd_complete(opcode,<sp/></highlight><highlight class="stringliteral">&quot;11111&quot;</highlight><highlight class="normal">,<sp/>status,<sp/>SUPPORT_SWITCHING_SAMPLING_RATES,<sp/>NUM_ANTENNAE,<sp/>MAX_SWITCHING_PATTERN_LEN,<sp/>MAX_CTE_LENGTH);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>match;</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>LE_CMD_PARSER_REGISTER(BT_CORE_SPEC_5_1,<sp/>le_cmd_set_cte)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_cte.c"/>
  </compounddef>
</doxygen>
