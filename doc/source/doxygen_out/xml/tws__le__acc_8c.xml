<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="tws__le__acc_8c" kind="file" language="C++">
    <compoundname>tws_le_acc.c</compoundname>
    <includes local="yes">sfr.h</includes>
    <includes local="yes">RF_ble.h</includes>
    <includes refid="link__layer_8h" local="yes">ble/link_layer.h</includes>
    <includes local="yes">btcontroller_util.h</includes>
    <includes local="yes">system/timer.h</includes>
    <includes local="yes">btcontroller_config.h</includes>
    <includes refid="tws__le__link_8h" local="yes">ble/tws_le_link.h</includes>
    <includes local="yes">common/debug.h</includes>
    <incdepgraph>
      <node id="4354">
        <label>ble/tws_le_link.h</label>
        <link refid="tws__le__link_8h"/>
        <childnode refid="4328" relation="include">
        </childnode>
        <childnode refid="4355" relation="include">
        </childnode>
      </node>
      <node id="4336">
        <label>os/os_type.h</label>
      </node>
      <node id="4332">
        <label>common/atomic.h</label>
      </node>
      <node id="4346">
        <label>common/lbuf.h</label>
      </node>
      <node id="4329">
        <label>common/list.h</label>
      </node>
      <node id="4335">
        <label>common/thread.h</label>
      </node>
      <node id="4338">
        <label>ble/ll_adv.h</label>
        <link refid="ll__adv_8h"/>
        <childnode refid="4330" relation="include">
        </childnode>
      </node>
      <node id="4325">
        <label>sfr.h</label>
      </node>
      <node id="4356">
        <label>common/debug.h</label>
      </node>
      <node id="4351">
        <label>btcontroller_util.h</label>
      </node>
      <node id="4340">
        <label>ble/ll_init.h</label>
        <link refid="ll__init_8h"/>
        <childnode refid="4330" relation="include">
        </childnode>
      </node>
      <node id="4342">
        <label>data_extension.h</label>
        <link refid="data__extension_8h"/>
        <childnode refid="4328" relation="include">
        </childnode>
      </node>
      <node id="4345">
        <label>ble/ll_iso.h</label>
        <link refid="ll__iso_8h"/>
        <childnode refid="4333" relation="include">
        </childnode>
        <childnode refid="4346" relation="include">
        </childnode>
        <childnode refid="4335" relation="include">
        </childnode>
      </node>
      <node id="4324">
        <label>/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/tws/tws_le_acc.c</label>
        <link refid="tws_le_acc.c"/>
        <childnode refid="4325" relation="include">
        </childnode>
        <childnode refid="4326" relation="include">
        </childnode>
        <childnode refid="4327" relation="include">
        </childnode>
        <childnode refid="4351" relation="include">
        </childnode>
        <childnode refid="4352" relation="include">
        </childnode>
        <childnode refid="4353" relation="include">
        </childnode>
        <childnode refid="4354" relation="include">
        </childnode>
        <childnode refid="4356" relation="include">
        </childnode>
      </node>
      <node id="4326">
        <label>RF_ble.h</label>
      </node>
      <node id="4328">
        <label>typedef.h</label>
      </node>
      <node id="4334">
        <label>white_list.h</label>
        <link refid="white__list_8h"/>
        <childnode refid="4328" relation="include">
        </childnode>
      </node>
      <node id="4348">
        <label>audio_codec.h</label>
        <link refid="audio__codec_8h"/>
        <childnode refid="4333" relation="include">
        </childnode>
      </node>
      <node id="4355">
        <label>ble/ble_interface.h</label>
      </node>
      <node id="4339">
        <label>ble/ll_scan.h</label>
        <link refid="ll__scan_8h"/>
        <childnode refid="4330" relation="include">
        </childnode>
      </node>
      <node id="4337">
        <label>ble/llcp.h</label>
        <link refid="llcp_8h"/>
        <childnode refid="4328" relation="include">
        </childnode>
        <childnode refid="4333" relation="include">
        </childnode>
      </node>
      <node id="4343">
        <label>multiple_phys.h</label>
        <link refid="multiple__phys_8h"/>
        <childnode refid="4328" relation="include">
        </childnode>
      </node>
      <node id="4341">
        <label>resolve_list.h</label>
        <link refid="resolve__list_8h"/>
        <childnode refid="4328" relation="include">
        </childnode>
      </node>
      <node id="4330">
        <label>ble_interface.h</label>
      </node>
      <node id="4353">
        <label>btcontroller_config.h</label>
      </node>
      <node id="4344">
        <label>ble/ll_cte.h</label>
        <link refid="ll__cte_8h"/>
        <childnode refid="4333" relation="include">
        </childnode>
      </node>
      <node id="4331">
        <label>common/sys_timer.h</label>
      </node>
      <node id="4352">
        <label>system/timer.h</label>
      </node>
      <node id="4327">
        <label>ble/link_layer.h</label>
        <link refid="link__layer_8h"/>
        <childnode refid="4328" relation="include">
        </childnode>
        <childnode refid="4329" relation="include">
        </childnode>
        <childnode refid="4330" relation="include">
        </childnode>
        <childnode refid="4331" relation="include">
        </childnode>
        <childnode refid="4332" relation="include">
        </childnode>
        <childnode refid="4333" relation="include">
        </childnode>
        <childnode refid="4334" relation="include">
        </childnode>
        <childnode refid="4335" relation="include">
        </childnode>
        <childnode refid="4336" relation="include">
        </childnode>
        <childnode refid="4337" relation="include">
        </childnode>
        <childnode refid="4338" relation="include">
        </childnode>
        <childnode refid="4339" relation="include">
        </childnode>
        <childnode refid="4340" relation="include">
        </childnode>
        <childnode refid="4341" relation="include">
        </childnode>
        <childnode refid="4342" relation="include">
        </childnode>
        <childnode refid="4343" relation="include">
        </childnode>
        <childnode refid="4344" relation="include">
        </childnode>
        <childnode refid="4345" relation="include">
        </childnode>
        <childnode refid="4347" relation="include">
        </childnode>
        <childnode refid="4349" relation="include">
        </childnode>
        <childnode refid="4350" relation="include">
        </childnode>
      </node>
      <node id="4333">
        <label>ll_defines.h</label>
        <link refid="ll__defines_8h"/>
        <childnode refid="4328" relation="include">
        </childnode>
      </node>
      <node id="4349">
        <label>ble/ll_cis.h</label>
        <link refid="ll__cis_8h"/>
        <childnode refid="4345" relation="include">
        </childnode>
        <childnode refid="4327" relation="include">
        </childnode>
      </node>
      <node id="4347">
        <label>ble/ll_bis.h</label>
        <link refid="ll__bis_8h"/>
        <childnode refid="4345" relation="include">
        </childnode>
        <childnode refid="4348" relation="include">
        </childnode>
      </node>
      <node id="4350">
        <label>ble/ll_pc.h</label>
        <link refid="ll__pc_8h"/>
        <childnode refid="4333" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="tws__le__acc_8c_1a7ce0df38eb467e59f209470c8f5ac4e6" prot="public" static="no">
        <name>LOG_TAG</name>
        <initializer>&quot;[TWS LL]&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/tws/tws_le_acc.c" line="22" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/tws/tws_le_acc.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tws__le__acc_8c_1a9eeb6e067100d0dec6e53bce19a403e0" prot="public" static="no">
        <name>LOG_ERROR_ENABLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/tws/tws_le_acc.c" line="23" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/tws/tws_le_acc.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tws__le__acc_8c_1a69321c8a2a0b07a07fb5088e82e25eb0" prot="public" static="no">
        <name>LOG_INFO_ENABLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/tws/tws_le_acc.c" line="24" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/tws/tws_le_acc.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tws__le__acc_8c_1a04135f631fe91199f05b1d816dda8756" prot="public" static="no">
        <name>LOG_DUMP_ENABLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/tws/tws_le_acc.c" line="25" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/tws/tws_le_acc.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="tws__le__acc_8c_1ab756c2fc68f713e5ef4ccfa81cdeb728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char ble_sync_generation</definition>
        <argsstring>(unsigned long sword)</argsstring>
        <name>ble_sync_generation</name>
        <param>
          <type>unsigned long</type>
          <declname>sword</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/tws/tws_le_acc.c" line="28" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/tws/tws_le_acc.c" bodystart="28" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="tws__le__acc_8c_1a1b9b8c3d128d653d105841829dec1320" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long acc_rand</definition>
        <argsstring>(unsigned long seed)</argsstring>
        <name>acc_rand</name>
        <param>
          <type>unsigned long</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/tws/tws_le_acc.c" line="113" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/tws/tws_le_acc.c" bodystart="113" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="tws__le__acc_8c_1aff47f67debf3af395617e0a3a6543316" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long tws_le_acc_generation</definition>
        <argsstring>(u8 *addr)</argsstring>
        <name>tws_le_acc_generation</name>
        <param>
          <type>u8 *</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/tws/tws_le_acc.c" line="126" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/tws/tws_le_acc.c" bodystart="126" bodyend="145"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*********************************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Filename<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>tws_link.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Description<sp/><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Author<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Bingquan</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Email<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>caibingquan@zh-jieli.com</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Last<sp/>modifiled<sp/><sp/>:<sp/>2019-03-28<sp/>10:51</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Copyright:(c)JIELI<sp/><sp/>2011-2019<sp/><sp/>@<sp/>,<sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*********************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sfr.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;RF_ble.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="link__layer_8h" kindref="compound">ble/link_layer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;btcontroller_util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;system/timer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;btcontroller_config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tws__le__link_8h" kindref="compound">ble/tws_le_link.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_TAG<sp/><sp/><sp/><sp/><sp/>&quot;[TWS<sp/>LL]&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_ERROR_ENABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_INFO_ENABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_DUMP_ENABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/debug.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="tws__le__acc_8c_1ab756c2fc68f713e5ef4ccfa81cdeb728" kindref="member">ble_sync_generation</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sword)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmp321,<sp/>tmp322,<sp/>cnt32;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>swe;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>swe<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(tmp321<sp/>=<sp/>0,<sp/>cnt32<sp/>=<sp/>0;<sp/>cnt32<sp/>&lt;=<sp/>24;<sp/>cnt32++)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp322<sp/>=<sp/>(sword<sp/>&gt;&gt;<sp/>cnt32)<sp/>&amp;<sp/>0x7f;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tmp322<sp/>==<sp/>0x7f)<sp/>||<sp/>(tmp322<sp/>==<sp/>0x00))<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp321++;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp321<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swe<sp/>|=<sp/>BIT(0);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//It<sp/>shall<sp/>not<sp/>be<sp/>the<sp/>advertising<sp/>channel<sp/>packets’<sp/>Access<sp/>Address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sword<sp/>==<sp/>0X8E89BED6)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swe<sp/>|=<sp/>BIT(1);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//It<sp/>shall<sp/>not<sp/>be<sp/>a<sp/>sequence<sp/>that<sp/>differs<sp/>from<sp/>the<sp/>advertising<sp/>channel<sp/>packets<sp/>Access<sp/>Address<sp/>by<sp/>only<sp/>one<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp322<sp/>=<sp/>sword<sp/>^<sp/>0x8E89BED6;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(tmp321<sp/>=<sp/>0,<sp/>cnt32<sp/>=<sp/>0;<sp/>cnt32<sp/>&lt;<sp/>32;<sp/>cnt32++)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tmp322<sp/>&amp;<sp/>BIT(cnt32))<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp321++;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp321<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swe<sp/>|=<sp/>BIT(2);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>shall<sp/>not<sp/>have<sp/>all<sp/>four<sp/>octets<sp/>equal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((sword<sp/>&amp;<sp/>0x000000ff)<sp/>&lt;&lt;<sp/>8)<sp/>==<sp/>(sword<sp/>&amp;<sp/>0x0000ff00)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sword<sp/>&amp;<sp/>0x000000ff)<sp/>&lt;&lt;<sp/>8)<sp/>==<sp/>(sword<sp/>&amp;<sp/>0x00ff0000)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sword<sp/>&amp;<sp/>0x000000ff)<sp/>&lt;&lt;<sp/>8)<sp/>==<sp/>(sword<sp/>&amp;<sp/>0xff000000))<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swe<sp/>|=<sp/>BIT(3);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//It<sp/>shall<sp/>have<sp/>no<sp/>more<sp/>than<sp/>24<sp/>transitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(tmp321<sp/>=<sp/>0,<sp/>cnt32<sp/>=<sp/>0;<sp/>cnt32<sp/>&lt;<sp/>31;<sp/>cnt32++)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((sword<sp/>&amp;<sp/>BIT(cnt32))<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>((sword<sp/>&amp;<sp/>BIT(cnt32<sp/>+<sp/>1))<sp/>!=<sp/>0))<sp/>||</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((sword<sp/>&amp;<sp/>BIT(cnt32))<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>((sword<sp/>&amp;<sp/>BIT(cnt32<sp/>+<sp/>1))<sp/>==<sp/>0)))<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp321++;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp321<sp/>&gt;<sp/>24)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swe<sp/>|=<sp/>BIT(4);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//It<sp/>shall<sp/>have<sp/>a<sp/>minimum<sp/>of<sp/>two<sp/>transitions<sp/>in<sp/>the<sp/>most<sp/>significant<sp/>six<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(tmp321<sp/>=<sp/>0,<sp/>cnt32<sp/>=<sp/>26;<sp/>cnt32<sp/>&lt;<sp/>31;<sp/>cnt32++)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((sword<sp/>&amp;<sp/>BIT(cnt32))<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>((sword<sp/>&amp;<sp/>BIT(cnt32<sp/>+<sp/>1))<sp/>!=<sp/>0))<sp/>||</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((sword<sp/>&amp;<sp/>BIT(cnt32))<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>((sword<sp/>&amp;<sp/>BIT(cnt32<sp/>+<sp/>1))<sp/>==<sp/>0)))<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp321++;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp321<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swe<sp/>|=<sp/>BIT(5);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//It<sp/>shall<sp/>have<sp/>at<sp/>least<sp/>three<sp/>ones<sp/>in<sp/>the<sp/>least<sp/>significant<sp/>8<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(tmp321<sp/>=<sp/>0,<sp/>cnt32<sp/>=<sp/>0;<sp/>cnt32<sp/>&lt;<sp/>8;<sp/>cnt32++)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sword<sp/>&amp;<sp/>BIT(cnt32))<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp321++;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp321<sp/>&lt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swe<sp/>|=<sp/>BIT(6);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>shall<sp/>have<sp/>no<sp/>more<sp/>than<sp/>eleven<sp/>transitions<sp/>in<sp/>the<sp/>least<sp/>significant<sp/>16<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(tmp321<sp/>=<sp/>0,<sp/>cnt32<sp/>=<sp/>0;<sp/>cnt32<sp/>&lt;<sp/>15;<sp/>cnt32++)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((sword<sp/>&amp;<sp/>BIT(cnt32))<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>((sword<sp/>&amp;<sp/>BIT(cnt32<sp/>+<sp/>1))<sp/>!=<sp/>0))<sp/>||</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((sword<sp/>&amp;<sp/>BIT(cnt32))<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>((sword<sp/>&amp;<sp/>BIT(cnt32<sp/>+<sp/>1))<sp/>==<sp/>0)))<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp321++;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp321<sp/>&gt;<sp/>11)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swe<sp/>|=<sp/>BIT(7);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swe;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="tws__le__acc_8c_1a1b9b8c3d128d653d105841829dec1320" kindref="member">acc_rand</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>seed)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>rand;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((seed<sp/>&amp;<sp/>BIT(31))<sp/>|<sp/>((seed<sp/>&lt;&lt;<sp/>1)<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rand<sp/>=<sp/>(seed<sp/>&lt;&lt;<sp/>1)<sp/>^<sp/>0x4C11DB7;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rand<sp/>=<sp/>(seed<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rand;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="tws__le__acc_8c_1aff47f67debf3af395617e0a3a6543316" kindref="member">tws_le_acc_generation</ref>(u8<sp/>*addr)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>swe;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sword;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>mac_adr;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>swe<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>sword<sp/>=<sp/>addr[0]<sp/>|<sp/>(addr[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(addr[2]<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(addr[3]<sp/>&lt;&lt;<sp/>24);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(swe<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sword<sp/>=<sp/><ref refid="tws__le__acc_8c_1a1b9b8c3d128d653d105841829dec1320" kindref="member">acc_rand</ref>(sword);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swe<sp/>=<sp/><ref refid="tws__le__acc_8c_1ab756c2fc68f713e5ef4ccfa81cdeb728" kindref="member">ble_sync_generation</ref>(sword);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sword;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/tws/tws_le_acc.c"/>
  </compounddef>
</doxygen>
