<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ll__adv_8c" kind="file" language="C++">
    <compoundname>ll_adv.c</compoundname>
    <includes refid="link__layer_8h" local="yes">ble/link_layer.h</includes>
    <includes local="yes">stdarg.h</includes>
    <includes refid="h4__transport_8h" local="yes">h4_transport.h</includes>
    <includes local="yes">RF_ble.h</includes>
    <includes local="yes">btcontroller_util.h</includes>
    <includes local="yes">btcontroller_heap.h</includes>
    <includes local="yes">tomcrypt.h</includes>
    <includes local="yes">hci_controller.h</includes>
    <includes local="yes">misc_interface.h</includes>
    <includes refid="resolve__list_8h" local="yes">ble/resolve_list.h</includes>
    <includes refid="link__task_8h" local="yes">link_task.h</includes>
    <includes local="yes">common/debug.h</includes>
    <incdepgraph>
      <node id="3013">
        <label>stdarg.h</label>
      </node>
      <node id="3023">
        <label>generic/list.h</label>
      </node>
      <node id="3021">
        <label>link_task.h</label>
        <link refid="link__task_8h"/>
        <childnode refid="3022" relation="include">
        </childnode>
        <childnode refid="3023" relation="include">
        </childnode>
      </node>
      <node id="2998">
        <label>os/os_type.h</label>
      </node>
      <node id="2994">
        <label>common/atomic.h</label>
      </node>
      <node id="3008">
        <label>common/lbuf.h</label>
      </node>
      <node id="2991">
        <label>common/list.h</label>
      </node>
      <node id="2997">
        <label>common/thread.h</label>
      </node>
      <node id="3000">
        <label>ble/ll_adv.h</label>
        <link refid="ll__adv_8h"/>
        <childnode refid="2992" relation="include">
        </childnode>
      </node>
      <node id="3014">
        <label>h4_transport.h</label>
        <link refid="h4__transport_8h"/>
        <childnode refid="2990" relation="include">
        </childnode>
      </node>
      <node id="3024">
        <label>common/debug.h</label>
      </node>
      <node id="3016">
        <label>btcontroller_util.h</label>
      </node>
      <node id="3002">
        <label>ble/ll_init.h</label>
        <link refid="ll__init_8h"/>
        <childnode refid="2992" relation="include">
        </childnode>
      </node>
      <node id="3004">
        <label>data_extension.h</label>
        <link refid="data__extension_8h"/>
        <childnode refid="2990" relation="include">
        </childnode>
      </node>
      <node id="3007">
        <label>ble/ll_iso.h</label>
        <link refid="ll__iso_8h"/>
        <childnode refid="2995" relation="include">
        </childnode>
        <childnode refid="3008" relation="include">
        </childnode>
        <childnode refid="2997" relation="include">
        </childnode>
      </node>
      <node id="2988">
        <label>/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c</label>
        <link refid="ll_adv.c"/>
        <childnode refid="2989" relation="include">
        </childnode>
        <childnode refid="3013" relation="include">
        </childnode>
        <childnode refid="3014" relation="include">
        </childnode>
        <childnode refid="3015" relation="include">
        </childnode>
        <childnode refid="3016" relation="include">
        </childnode>
        <childnode refid="3017" relation="include">
        </childnode>
        <childnode refid="3018" relation="include">
        </childnode>
        <childnode refid="3019" relation="include">
        </childnode>
        <childnode refid="3020" relation="include">
        </childnode>
        <childnode refid="3003" relation="include">
        </childnode>
        <childnode refid="3021" relation="include">
        </childnode>
        <childnode refid="3024" relation="include">
        </childnode>
      </node>
      <node id="3015">
        <label>RF_ble.h</label>
      </node>
      <node id="2990">
        <label>typedef.h</label>
      </node>
      <node id="3017">
        <label>btcontroller_heap.h</label>
      </node>
      <node id="2996">
        <label>white_list.h</label>
        <link refid="white__list_8h"/>
        <childnode refid="2990" relation="include">
        </childnode>
      </node>
      <node id="3010">
        <label>audio_codec.h</label>
        <link refid="audio__codec_8h"/>
        <childnode refid="2995" relation="include">
        </childnode>
      </node>
      <node id="3001">
        <label>ble/ll_scan.h</label>
        <link refid="ll__scan_8h"/>
        <childnode refid="2992" relation="include">
        </childnode>
      </node>
      <node id="2999">
        <label>ble/llcp.h</label>
        <link refid="llcp_8h"/>
        <childnode refid="2990" relation="include">
        </childnode>
        <childnode refid="2995" relation="include">
        </childnode>
      </node>
      <node id="3005">
        <label>multiple_phys.h</label>
        <link refid="multiple__phys_8h"/>
        <childnode refid="2990" relation="include">
        </childnode>
      </node>
      <node id="3003">
        <label>resolve_list.h</label>
        <link refid="resolve__list_8h"/>
        <childnode refid="2990" relation="include">
        </childnode>
      </node>
      <node id="2992">
        <label>ble_interface.h</label>
      </node>
      <node id="3018">
        <label>tomcrypt.h</label>
      </node>
      <node id="3022">
        <label>generic/typedef.h</label>
      </node>
      <node id="3006">
        <label>ble/ll_cte.h</label>
        <link refid="ll__cte_8h"/>
        <childnode refid="2995" relation="include">
        </childnode>
      </node>
      <node id="3019">
        <label>hci_controller.h</label>
      </node>
      <node id="2993">
        <label>common/sys_timer.h</label>
      </node>
      <node id="2989">
        <label>ble/link_layer.h</label>
        <link refid="link__layer_8h"/>
        <childnode refid="2990" relation="include">
        </childnode>
        <childnode refid="2991" relation="include">
        </childnode>
        <childnode refid="2992" relation="include">
        </childnode>
        <childnode refid="2993" relation="include">
        </childnode>
        <childnode refid="2994" relation="include">
        </childnode>
        <childnode refid="2995" relation="include">
        </childnode>
        <childnode refid="2996" relation="include">
        </childnode>
        <childnode refid="2997" relation="include">
        </childnode>
        <childnode refid="2998" relation="include">
        </childnode>
        <childnode refid="2999" relation="include">
        </childnode>
        <childnode refid="3000" relation="include">
        </childnode>
        <childnode refid="3001" relation="include">
        </childnode>
        <childnode refid="3002" relation="include">
        </childnode>
        <childnode refid="3003" relation="include">
        </childnode>
        <childnode refid="3004" relation="include">
        </childnode>
        <childnode refid="3005" relation="include">
        </childnode>
        <childnode refid="3006" relation="include">
        </childnode>
        <childnode refid="3007" relation="include">
        </childnode>
        <childnode refid="3009" relation="include">
        </childnode>
        <childnode refid="3011" relation="include">
        </childnode>
        <childnode refid="3012" relation="include">
        </childnode>
      </node>
      <node id="2995">
        <label>ll_defines.h</label>
        <link refid="ll__defines_8h"/>
        <childnode refid="2990" relation="include">
        </childnode>
      </node>
      <node id="3011">
        <label>ble/ll_cis.h</label>
        <link refid="ll__cis_8h"/>
        <childnode refid="3007" relation="include">
        </childnode>
        <childnode refid="2989" relation="include">
        </childnode>
      </node>
      <node id="3009">
        <label>ble/ll_bis.h</label>
        <link refid="ll__bis_8h"/>
        <childnode refid="3007" relation="include">
        </childnode>
        <childnode refid="3010" relation="include">
        </childnode>
      </node>
      <node id="3012">
        <label>ble/ll_pc.h</label>
        <link refid="ll__pc_8h"/>
        <childnode refid="2995" relation="include">
        </childnode>
      </node>
      <node id="3020">
        <label>misc_interface.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structll__adv__hdl" prot="public">ll_adv_hdl</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="ll__adv_8c_1a6c6991cba0e2995d7d9aec73e0324317" prot="public" static="no">
        <name>LOG_TAG_CONST</name>
        <initializer>LL_ADV</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="13" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__adv_8c_1a7ce0df38eb467e59f209470c8f5ac4e6" prot="public" static="no">
        <name>LOG_TAG</name>
        <initializer>&quot;[LL-Adv]&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="14" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__adv_8c_1a9eeb6e067100d0dec6e53bce19a403e0" prot="public" static="no">
        <name>LOG_ERROR_ENABLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="16" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__adv_8c_1a69321c8a2a0b07a07fb5088e82e25eb0" prot="public" static="no">
        <name>LOG_INFO_ENABLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="17" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__adv_8c_1a04135f631fe91199f05b1d816dda8756" prot="public" static="no">
        <name>LOG_DUMP_ENABLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="18" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" prot="public" static="no">
        <name>__this</name>
        <initializer>(<ref refid="tws__ll__adv_8c_1a71b4413e4495da67422e0eca74f5115e" kindref="member">adv_hdl</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="46" column="9" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ll__adv_8c_1a49186ac0969a4a850d70568811c98eb7" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structadvertising__param" kindref="compound">advertising_param</ref></type>
        <definition>struct advertising_param adv_param</definition>
        <argsstring></argsstring>
        <name>adv_param</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="60" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ll__adv_8c_1ae6b9a933e50fbbfc6fb990b800462763" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structadvertising__data" kindref="compound">advertising_data</ref></type>
        <definition>struct advertising_data adv_data</definition>
        <argsstring></argsstring>
        <name>adv_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="60" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ll__adv_8c_1ac871859c66fe3c6652bad1288e5e0e4c" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structscan__response" kindref="compound">scan_response</ref></type>
        <definition>struct scan_response scan_resp_data</definition>
        <argsstring></argsstring>
        <name>scan_resp_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="60" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ll__adv_8c_1a71b4413e4495da67422e0eca74f5115e" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structll__adv__hdl" kindref="compound">ll_adv_hdl</ref> *</type>
        <definition>struct ll_adv_hdl* adv_hdl</definition>
        <argsstring></argsstring>
        <name>adv_hdl</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="44" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ll__adv_8c_1ae28d1e9bac11d2e921e6754454f9239f" prot="public" static="yes" mutable="no">
        <type>const struct ble_handler</type>
        <definition>const struct ble_handler adv_handler</definition>
        <argsstring></argsstring>
        <name>adv_handler</name>
        <initializer>= {
    .rx_probe_handler   = <ref refid="tws__ll__adv_8c_1a8ed1d677950088b6f8daa733feb57f4d" kindref="member">adv_rx_probe_handler</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="549" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="582" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ll__adv_8c_1ace4207a06571d703c0aed28a8693328c" prot="public" static="yes" mutable="no">
        <type>const struct <ref refid="structlink__task__ops" kindref="compound">link_task_ops</ref></type>
        <definition>const struct link_task_ops ll_adv_task_ops</definition>
        <argsstring></argsstring>
        <name>ll_adv_task_ops</name>
        <initializer>= {
    .resume  = <ref refid="ll__adv_8c_1a6b4652354647bc2c93bec893b31eb4fe" kindref="member">__adv_resume</ref>,
    .suspend = <ref refid="ll__adv_8c_1ad53549d8953674b854638af7112069c8" kindref="member">__adv_suspend</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="742" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="759" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ll__adv_8c_1a75a0710e7acb1c764fc18ef8e27c1a2a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ll_adv_resume</definition>
        <argsstring>(void)</argsstring>
        <name>ll_adv_resume</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="48" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="665" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1a252819a22bedf72c4efa291528775fc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void slave_rx_conn_post_handler</definition>
        <argsstring>(struct le_link *link, struct ble_rx *rx)</argsstring>
        <name>slave_rx_conn_post_handler</name>
        <param>
          <type>struct <ref refid="structle__link" kindref="compound">le_link</ref> *</type>
          <declname>link</declname>
        </param>
        <param>
          <type>struct ble_rx *</type>
          <declname>rx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="50" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_slave.c" bodystart="68" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1ad19204de0002c264867d785c01789725" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ll_adv_init</definition>
        <argsstring>(void)</argsstring>
        <name>ll_adv_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="52" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="52" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1acc878a4c395774dd5acd4823149473bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ll_adv_destroy</definition>
        <argsstring>(void)</argsstring>
        <name>ll_adv_destroy</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="66" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="66" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1ae84ca2bfcdcdf222ba2f7b3e7ce33b61" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void debug_adv_info</definition>
        <argsstring>(void)</argsstring>
        <name>debug_adv_info</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="76" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="76" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1a2df18e672a02f34b3877a7883b24b3d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ll_adv_timeout_stop</definition>
        <argsstring>(struct le_adv_link *adv_link)</argsstring>
        <name>ll_adv_timeout_stop</name>
        <param>
          <type>struct <ref refid="structle__adv__link" kindref="compound">le_adv_link</ref> *</type>
          <declname>adv_link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="90" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="90" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1a7e5303b8e5150fd1ab17f2442d87cec9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ll_adv_timeout_handler</definition>
        <argsstring>(void *priv)</argsstring>
        <name>ll_adv_timeout_handler</name>
        <param>
          <type>void *</type>
          <declname>priv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="98" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="98" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1ac96769e6983f0168bf9ba6e4f1243f8f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ll_adv_timeout_start</definition>
        <argsstring>(struct le_adv_link *adv_link, u32 timeout)</argsstring>
        <name>ll_adv_timeout_start</name>
        <param>
          <type>struct <ref refid="structle__adv__link" kindref="compound">le_adv_link</ref> *</type>
          <declname>adv_link</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="116" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="116" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1ae438840ad4f5aa246ad1fc3623651e89" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void __set_ll_adv_local_RPA</definition>
        <argsstring>(struct le_adv_link *adv_link)</argsstring>
        <name>__set_ll_adv_local_RPA</name>
        <param>
          <type>struct <ref refid="structle__adv__link" kindref="compound">le_adv_link</ref> *</type>
          <declname>adv_link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="126" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="126" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1a4030be1d96427c911248855f98e4c4c6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ll_set_adv_local_RPA</definition>
        <argsstring>(struct le_adv_link *adv_link)</argsstring>
        <name>ll_set_adv_local_RPA</name>
        <param>
          <type>struct <ref refid="structle__adv__link" kindref="compound">le_adv_link</ref> *</type>
          <declname>adv_link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="163" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="163" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1a1096378ab0449d9cfc98eac367eb82ea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ll_set_adv_peer_RPA</definition>
        <argsstring>(struct le_adv_link *adv_link)</argsstring>
        <name>ll_set_adv_peer_RPA</name>
        <param>
          <type>struct <ref refid="structle__adv__link" kindref="compound">le_adv_link</ref> *</type>
          <declname>adv_link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="175" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="175" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1a59c6d028a82fcf9959585a47f6dffe90" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void __set_ll_adv_local_addr</definition>
        <argsstring>(struct le_adv_link *adv_link)</argsstring>
        <name>__set_ll_adv_local_addr</name>
        <param>
          <type>struct <ref refid="structle__adv__link" kindref="compound">le_adv_link</ref> *</type>
          <declname>adv_link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="219" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="219" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1afdb34a8f102f27fcdeb6c0800aafd5bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void __set_ll_adv_peer_addr</definition>
        <argsstring>(struct le_adv_link *adv_link)</argsstring>
        <name>__set_ll_adv_peer_addr</name>
        <param>
          <type>struct <ref refid="structle__adv__link" kindref="compound">le_adv_link</ref> *</type>
          <declname>adv_link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="230" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="230" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1aee59b22b1d02cb6984371f583696d96a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ll_adv_state_filter_process</definition>
        <argsstring>(void *priv, struct ble_rx *rx, struct resolving_list *resolving_list_t)</argsstring>
        <name>ll_adv_state_filter_process</name>
        <param>
          <type>void *</type>
          <declname>priv</declname>
        </param>
        <param>
          <type>struct ble_rx *</type>
          <declname>rx</declname>
        </param>
        <param>
          <type>struct <ref refid="structresolving__list" kindref="compound">resolving_list</ref> *</type>
          <declname>resolving_list_t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="245" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="245" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1adab9cd28069ba9f686ebc98a80ec1688" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structresolving__list" kindref="compound">resolving_list</ref> *</type>
        <definition>static struct resolving_list* ll_adv_state_RPA_process</definition>
        <argsstring>(struct ble_rx *rx)</argsstring>
        <name>ll_adv_state_RPA_process</name>
        <param>
          <type>struct ble_rx *</type>
          <declname>rx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="306" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="306" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1a821fc1cee24ed0a990c93941462fdae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void le_ll_adv_addr_process</definition>
        <argsstring>(void *priv, struct ble_rx *rx)</argsstring>
        <name>le_ll_adv_addr_process</name>
        <param>
          <type>void *</type>
          <declname>priv</declname>
        </param>
        <param>
          <type>struct ble_rx *</type>
          <declname>rx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="332" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="332" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1aea4509cb04cfcee0fd2dc18f3b94dc34" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __set_ll_adv_state</definition>
        <argsstring>(struct le_adv_link *adv_link)</argsstring>
        <name>__set_ll_adv_state</name>
        <param>
          <type>struct <ref refid="structle__adv__link" kindref="compound">le_adv_link</ref> *</type>
          <declname>adv_link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="344" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="344" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1a4cb9fde0ff3c4da01f3deb331a7c5e0f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void adv_rx_scan_req</definition>
        <argsstring>(struct le_adv_link *adv_link, struct ble_rx *rx)</argsstring>
        <name>adv_rx_scan_req</name>
        <param>
          <type>struct <ref refid="structle__adv__link" kindref="compound">le_adv_link</ref> *</type>
          <declname>adv_link</declname>
        </param>
        <param>
          <type>struct ble_rx *</type>
          <declname>rx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="458" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="458" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1ad7063b60ecd1b5eb0260007b0581c804" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void adv_rx_conn_req</definition>
        <argsstring>(struct le_adv_link *adv_link, struct ble_rx *rx)</argsstring>
        <name>adv_rx_conn_req</name>
        <param>
          <type>struct <ref refid="structle__adv__link" kindref="compound">le_adv_link</ref> *</type>
          <declname>adv_link</declname>
        </param>
        <param>
          <type>struct ble_rx *</type>
          <declname>rx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="473" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="473" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1a8ed1d677950088b6f8daa733feb57f4d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void adv_rx_probe_handler</definition>
        <argsstring>(void *priv, struct ble_rx *rx)</argsstring>
        <name>adv_rx_probe_handler</name>
        <param>
          <type>void *</type>
          <declname>priv</declname>
        </param>
        <param>
          <type>struct ble_rx *</type>
          <declname>rx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="495" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="495" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1a429d5c78945c1503f4fbfa8134f999da" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void adv_rx_conn_req_post</definition>
        <argsstring>(struct le_link *link, struct ble_rx *rx)</argsstring>
        <name>adv_rx_conn_req_post</name>
        <param>
          <type>struct <ref refid="structle__link" kindref="compound">le_link</ref> *</type>
          <declname>link</declname>
        </param>
        <param>
          <type>struct ble_rx *</type>
          <declname>rx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="520" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="520" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1a6bef65fe1321518196f8cb957d3729b0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void __adv_rx_post_handler</definition>
        <argsstring>(void *priv, struct ble_rx *rx)</argsstring>
        <name>__adv_rx_post_handler</name>
        <param>
          <type>void *</type>
          <declname>priv</declname>
        </param>
        <param>
          <type>struct ble_rx *</type>
          <declname>rx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="536" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="536" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1a6bc19727c724f5bd429bd5f9421b7e95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int adv_rx_post_handler</definition>
        <argsstring>(void)</argsstring>
        <name>adv_rx_post_handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="549" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="549" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1a334fc05d856811c324fa2490c78ad795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ll_adv_set_params</definition>
        <argsstring>(const u8 *data)</argsstring>
        <name>ll_adv_set_params</name>
        <param>
          <type>const u8 *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="586" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="586" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1a62bc386d445c6bb3491e3a7742ee3a8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ll_adv_set_adv_data</definition>
        <argsstring>(const u8 *data)</argsstring>
        <name>ll_adv_set_adv_data</name>
        <param>
          <type>const u8 *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="611" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="611" bodyend="635"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1a2d83abd546511aaf56f0428609f0e571" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ll_adv_set_scan_rsp_data</definition>
        <argsstring>(const u8 *data)</argsstring>
        <name>ll_adv_set_scan_rsp_data</name>
        <param>
          <type>const u8 *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="637" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="637" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1a6b4652354647bc2c93bec893b31eb4fe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __adv_resume</definition>
        <argsstring>(struct link_task *task)</argsstring>
        <name>__adv_resume</name>
        <param>
          <type>struct <ref refid="structlink__task" kindref="compound">link_task</ref> *</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="696" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="696" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1ad53549d8953674b854638af7112069c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __adv_suspend</definition>
        <argsstring>(struct link_task *task)</argsstring>
        <name>__adv_suspend</name>
        <param>
          <type>struct <ref refid="structlink__task" kindref="compound">link_task</ref> *</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="718" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="718" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1a0aaf2718f7f155b124215dc4264165d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u32</type>
        <definition>u32 ble_next_run_slot</definition>
        <argsstring>(struct ble_hw *hw)</argsstring>
        <name>ble_next_run_slot</name>
        <param>
          <type>struct ble_hw *</type>
          <declname>hw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="740" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1aa9b5dc1c47d03f356c940bf12f74ac91" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int __adv_next_run_slot</definition>
        <argsstring>(struct link_task *task)</argsstring>
        <name>__adv_next_run_slot</name>
        <param>
          <type>struct <ref refid="structlink__task" kindref="compound">link_task</ref> *</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="742" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="742" bodyend="757"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1a028afa569686bbbc34a6386ade17c6c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void __set_ll_adv_link_task</definition>
        <argsstring>(struct link_task *task)</argsstring>
        <name>__set_ll_adv_link_task</name>
        <param>
          <type>struct <ref refid="structlink__task" kindref="compound">link_task</ref> *</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="765" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="765" bodyend="778"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1ad856172178e2cbdda13ffe00f4138f91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ll_adv_open</definition>
        <argsstring>(void)</argsstring>
        <name>ll_adv_open</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="781" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="781" bodyend="838"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1ade113f482e2a470d1c732e11753d21ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ll_adv_close</definition>
        <argsstring>(void)</argsstring>
        <name>ll_adv_close</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="840" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="840" bodyend="878"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1afbf3a6cf5b8ee0bfd2b3e63a4af36c66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structle__adv__link" kindref="compound">le_adv_link</ref> *</type>
        <definition>struct le_adv_link* ll_adv_link_get</definition>
        <argsstring>(void)</argsstring>
        <name>ll_adv_link_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="898" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="898" bodyend="906"/>
      </memberdef>
      <memberdef kind="function" id="ll__adv_8c_1a3a20204536d2416ec4733f134d946cdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ll_adv_local_addr_refresh</definition>
        <argsstring>(void)</argsstring>
        <name>ll_adv_local_addr_refresh</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" line="908" column="1" bodyfile="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c" bodystart="908" bodyend="925"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="link__layer_8h" kindref="compound">ble/link_layer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdarg.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="h4__transport_8h" kindref="compound">h4_transport.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;RF_ble.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;btcontroller_util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;btcontroller_heap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tomcrypt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hci_controller.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;misc_interface.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="resolve__list_8h" kindref="compound">ble/resolve_list.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="link__task_8h" kindref="compound">link_task.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_TAG_CONST<sp/><sp/><sp/><sp/><sp/>LL_ADV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_TAG<sp/><sp/><sp/><sp/><sp/>&quot;[LL-Adv]&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_ERROR_ENABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_INFO_ENABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_DUMP_ENABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/debug.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_MS_EXTENSIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>bss_seg(&quot;.ble_ll_bss&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>data_seg(&quot;.ble_ll_data&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>const_seg(&quot;.ble_ll_const&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>code_seg(&quot;.ble_ll_code&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="structll__adv__hdl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structll__adv__hdl" kindref="compound">ll_adv_hdl</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structll__adv__hdl_1a6996bd34599c44f2c2b45ce907c07503" kindref="member">enable</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structll__adv__hdl_1ad48c89258997e283d9055438c08edc20" kindref="member">adv_link</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>struct<sp/>advertising_param<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv_param;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>struct<sp/>advertising_data<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv_data;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>struct<sp/>scan_response<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_resp_data;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structll__adv__hdl_1ab13f404a2b4e20aee85c3600887e72ec" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlink__task" kindref="compound">link_task</ref><sp/>task;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//industry<sp/>standard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structadvertising__param" kindref="compound">advertising_param</ref><sp/><sp/><sp/><sp/><sp/>adv_param;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structadvertising__data" kindref="compound">advertising_data</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv_data;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structscan__response" kindref="compound">scan_response</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_resp_data;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structll__adv__hdl" kindref="compound">ll_adv_hdl</ref><sp/>*<ref refid="ll__adv_8c_1a71b4413e4495da67422e0eca74f5115e" kindref="member">adv_hdl</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__this<sp/><sp/>(adv_hdl)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1a75a0710e7acb1c764fc18ef8e27c1a2a" kindref="member">ll_adv_resume</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1a252819a22bedf72c4efa291528775fc4" kindref="member">slave_rx_conn_post_handler</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*link,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>ble_rx<sp/>*rx);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1ad19204de0002c264867d785c01789725" kindref="member">ll_adv_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;LL<sp/>ADV<sp/>-<sp/>already<sp/>init&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;LL<sp/>ADV<sp/>-<sp/>init&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref><sp/>=<sp/>__bt_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structll__adv__hdl" kindref="compound">ll_adv_hdl</ref>));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(<ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>,<sp/></highlight><highlight class="stringliteral">&quot;LL<sp/>ADV<sp/>HDL<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1acc878a4c395774dd5acd4823149473bf" kindref="member">ll_adv_destroy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;LL<sp/>ADV<sp/>-<sp/>destroy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__bt_free(<ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1ae84ca2bfcdcdf222ba2f7b3e7ce33b61" kindref="member">debug_adv_info</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;ADV<sp/>Parameters&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;Interval<sp/>min<sp/>:<sp/>%x&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>adv_param.<ref refid="structadvertising__param_1abab8370e9815e61ae00bf08104800936" kindref="member">Advertising_Interval_Min</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;Interval<sp/>min<sp/>:<sp/>%x&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>adv_param.<ref refid="structadvertising__param_1adbf60ecfc2c43afe22cb69fd8981d532" kindref="member">Advertising_Interval_Max</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;type<sp/>:<sp/>%x&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv_param.<ref refid="structadvertising__param_1a949315221942f26eee48ba6ffe0f413f" kindref="member">Advertising_Type</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;own<sp/>type:<sp/>%x&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv_param.<ref refid="structadvertising__param_1a2926accf26cc3601effe9fd7b1cf1f7d" kindref="member">Own_Address_Type</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;peer<sp/>type:<sp/>%x&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv_param.<ref refid="structadvertising__param_1ae9f31cf491eebd2a78688ffcba9674cc" kindref="member">Peer_Address_Type</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;peer<sp/>addr:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv_param.<ref refid="structadvertising__param_1a8215e17cfbc2dd6f5735a76ea1b407b2" kindref="member">Peer_Address</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;channel<sp/>map:<sp/>%x&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>adv_param.<ref refid="structadvertising__param_1a5f3303d4951ba29e7d8b5408db045d7b" kindref="member">Advertising_Channel_Map</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;filter<sp/>policy:<sp/>%x&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>adv_param.<ref refid="structadvertising__param_1a487f492689821f1f86990c1c5e3be728" kindref="member">Advertising_Filter_Policy</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1a2df18e672a02f34b3877a7883b24b3d5" kindref="member">ll_adv_timeout_stop</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*<ref refid="structll__adv__hdl_1ad48c89258997e283d9055438c08edc20" kindref="member">adv_link</ref>)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adv_link-&gt;<ref refid="structle__adv__link_1abf387109522a7c0517b51a11ce3afd51" kindref="member">timeout</ref>)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys_timer_remove(adv_link-&gt;<ref refid="structle__adv__link_1abf387109522a7c0517b51a11ce3afd51" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv_link-&gt;<ref refid="structle__adv__link_1abf387109522a7c0517b51a11ce3afd51" kindref="member">timeout</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1a7e5303b8e5150fd1ab17f2442d87cec9" kindref="member">ll_adv_timeout_handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*priv)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*)priv;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ASSERT(link<sp/>!=<sp/>NULL,<sp/>&quot;%s&quot;,<sp/>__func__);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adv_link<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;Adv<sp/>Link<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1ade113f482e2a470d1c732e11753d21ab" kindref="member">ll_adv_close</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__events_8c_1a5e24e675fef90e721b55e58ee71dd64a" kindref="member">le_connection_complete_event</ref>(NULL,<sp/>ADVERTISING_TIMEOUT);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;TO<sp/>-<sp/>LL<sp/>Adv<sp/>High<sp/>Duty<sp/>Timeout&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1ac96769e6983f0168bf9ba6e4f1243f8f" kindref="member">ll_adv_timeout_start</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link,<sp/>u32<sp/><ref refid="structle__adv__link_1abf387109522a7c0517b51a11ce3afd51" kindref="member">timeout</ref>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>ll<sp/>adv<sp/>hight<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>adv_link-&gt;<ref refid="structle__adv__link_1abf387109522a7c0517b51a11ce3afd51" kindref="member">timeout</ref><sp/>=<sp/>sys_timer_register(timeout,<sp/><ref refid="ll__adv_8c_1a7e5303b8e5150fd1ab17f2442d87cec9" kindref="member">ll_adv_timeout_handler</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(adv_link-&gt;<ref refid="structle__adv__link_1abf387109522a7c0517b51a11ce3afd51" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>sys_timer_set_context(adv_link-&gt;<ref refid="structle__adv__link_1abf387109522a7c0517b51a11ce3afd51" kindref="member">timeout</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)adv_link);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1ae438840ad4f5aa246ad1fc3623651e89" kindref="member">__set_ll_adv_local_RPA</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(<ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>,<sp/></highlight><highlight class="stringliteral">&quot;__this<sp/>NULL<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structresolving__list" kindref="compound">resolving_list</ref><sp/>*resolving_list_t<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(adv_param.<ref refid="structadvertising__param_1a2926accf26cc3601effe9fd7b1cf1f7d" kindref="member">Own_Address_Type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pairs<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;Adv<sp/>Own_Address_Type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//override<sp/>public<sp/>or<sp/>random<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_FEATURES_IS_SUPPORT(LL_PRIVACY))<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hci__ll__cmds_8c_1a58e8c0445052dfd3f02f1dccdd04267f" kindref="member">le_param</ref>.<ref refid="structle__parameter_1a5bdacdddf7fdfd7b6884dca794bb3767" kindref="member">resolution_enable</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;resolution<sp/>still<sp/>disable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resolving_list_t<sp/>=</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__resolve__list_8c_1afde9eb98c2aca78fa7c2ad77c84702c4" kindref="member">ll_resolving_list_match</ref>(adv_param.<ref refid="structadvertising__param_1ae9f31cf491eebd2a78688ffcba9674cc" kindref="member">Peer_Address_Type</ref>,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv_param.<ref refid="structadvertising__param_1a8215e17cfbc2dd6f5735a76ea1b407b2" kindref="member">Peer_Address</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((resolving_list_t<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(<ref refid="ll__resolve__list_8c_1a297db023b3f17c67c550d50c4b041a9a" kindref="member">ll_resolve_list_IRK_verify</ref>(resolving_list_t-&gt;<ref refid="structresolving__list_1ab0e3085d46800278307f1ed504939f10" kindref="member">resolving_list_param</ref>.<ref refid="structresolving__list__parameter_1adf9ce025198ad79f47dab65d383a98c5" kindref="member">Local_IRK</ref>)<sp/>==<sp/>TRUE))<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;set_local_RPA1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__resolve__list_8c_1a3b6f5d27d5c4368a895e4b2fd1a8a889" kindref="member">ll_resolve_list_set_local_RPA</ref>(adv_link-&gt;<ref refid="structle__adv__link_1a793ffbe91120a25fcaa07f16447bd38b" kindref="member">local</ref>.addr,<sp/>resolving_list_t);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>__ble_ops-&gt;ioctrl(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>,<sp/>BLE_SET_LOCAL_ADDR,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv_link-&gt;<ref refid="structle__adv__link_1a793ffbe91120a25fcaa07f16447bd38b" kindref="member">local</ref>.addr_type,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv_link-&gt;<ref refid="structle__adv__link_1a793ffbe91120a25fcaa07f16447bd38b" kindref="member">local</ref>.addr);</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1a4030be1d96427c911248855f98e4c4c6" kindref="member">ll_set_adv_local_RPA</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_FEATURES_IS_SUPPORT(LL_PRIVACY))<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hci__ll__cmds_8c_1a58e8c0445052dfd3f02f1dccdd04267f" kindref="member">le_param</ref>.<ref refid="structle__parameter_1a5bdacdddf7fdfd7b6884dca794bb3767" kindref="member">resolution_enable</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;resolution<sp/>still<sp/>disable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;set_local_RPA0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1ae438840ad4f5aa246ad1fc3623651e89" kindref="member">__set_ll_adv_local_RPA</ref>(adv_link);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1a1096378ab0449d9cfc98eac367eb82ea" kindref="member">ll_set_adv_peer_RPA</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(<ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>,<sp/></highlight><highlight class="stringliteral">&quot;__this<sp/>NULL<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>Own_Address_Type<sp/>equals<sp/>0x02<sp/>or<sp/>0x03,<sp/>the<sp/>Controller<sp/>generates<sp/>the<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>peer’s<sp/>Resolvable<sp/>Private<sp/>Address<sp/>using<sp/>the<sp/>peer’s<sp/>IRK<sp/>corresponding<sp/>to<sp/>the<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>peer’s<sp/>Identity<sp/>Address<sp/>contained<sp/>in<sp/>the<sp/>Peer_Address<sp/>parameter<sp/>and<sp/>peer’s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Identity<sp/>Address<sp/>Type<sp/>(i.e.<sp/>0x00<sp/>or<sp/>0x01)<sp/>contained<sp/>in<sp/>the<sp/>Peer_Address_Type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>parameter.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structresolving__list" kindref="compound">resolving_list</ref><sp/>*resolving_list_t<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_FEATURES_IS_SUPPORT(LL_PRIVACY))<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hci__ll__cmds_8c_1a58e8c0445052dfd3f02f1dccdd04267f" kindref="member">le_param</ref>.<ref refid="structle__parameter_1a5bdacdddf7fdfd7b6884dca794bb3767" kindref="member">resolution_enable</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;resolution<sp/>still<sp/>disable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resolving_list_t<sp/>=<sp/><ref refid="ll__resolve__list_8c_1afde9eb98c2aca78fa7c2ad77c84702c4" kindref="member">ll_resolving_list_match</ref>(</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv_param.<ref refid="structadvertising__param_1ae9f31cf491eebd2a78688ffcba9674cc" kindref="member">Peer_Address_Type</ref>,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv_param.<ref refid="structadvertising__param_1a8215e17cfbc2dd6f5735a76ea1b407b2" kindref="member">Peer_Address</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//override<sp/>public<sp/>or<sp/>random<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(adv_param.<ref refid="structadvertising__param_1a2926accf26cc3601effe9fd7b1cf1f7d" kindref="member">Own_Address_Type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pairs<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;own_addr_type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((resolving_list_t<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(<ref refid="ll__resolve__list_8c_1a297db023b3f17c67c550d50c4b041a9a" kindref="member">ll_resolve_list_IRK_verify</ref>(resolving_list_t-&gt;<ref refid="structresolving__list_1ab0e3085d46800278307f1ed504939f10" kindref="member">resolving_list_param</ref>.<ref refid="structresolving__list__parameter_1a94bb1b7a68089f95cf0bc9d4719b7e43" kindref="member">Peer_IRK</ref>)<sp/>==<sp/>TRUE))<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__resolve__list_8c_1a0246ce47acd493dd58761f16ca1aa5b3" kindref="member">ll_resolve_list_set_peer_RPA</ref>(adv_link-&gt;<ref refid="structle__adv__link_1a09bedc02ada9f6e950f2c133a8a1d6a9" kindref="member">peer</ref>.addr,<sp/>resolving_list_t);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;Privacy_peer_addr<sp/>:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>btctler_bd_addr_to_str(adv_link-&gt;<ref refid="structle__adv__link_1a09bedc02ada9f6e950f2c133a8a1d6a9" kindref="member">peer</ref>.addr));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv_link-&gt;<ref refid="structle__adv__link_1a09bedc02ada9f6e950f2c133a8a1d6a9" kindref="member">peer</ref>.addr_type<sp/>=<sp/>adv_param.<ref refid="structadvertising__param_1a2926accf26cc3601effe9fd7b1cf1f7d" kindref="member">Own_Address_Type</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>__ble_ops-&gt;ioctrl(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>,<sp/>BLE_SET_PEER_ADDR,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv_link-&gt;<ref refid="structle__adv__link_1a09bedc02ada9f6e950f2c133a8a1d6a9" kindref="member">peer</ref>.addr_type,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv_link-&gt;<ref refid="structle__adv__link_1a09bedc02ada9f6e950f2c133a8a1d6a9" kindref="member">peer</ref>.addr);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//specify<sp/>Peer<sp/>addr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>__ble_ops-&gt;ioctrl(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>,<sp/>BLE_WHITE_LIST_ADDR,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv_link-&gt;<ref refid="structle__adv__link_1a09bedc02ada9f6e950f2c133a8a1d6a9" kindref="member">peer</ref>.addr_type,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv_link-&gt;<ref refid="structle__adv__link_1a09bedc02ada9f6e950f2c133a8a1d6a9" kindref="member">peer</ref>.addr);</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1a59c6d028a82fcf9959585a47f6dffe90" kindref="member">__set_ll_adv_local_addr</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(<ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>,<sp/></highlight><highlight class="stringliteral">&quot;__this<sp/>NULL<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="link__layer_8c_1adfe227fcb9e3cd5517eb4074f28168fe" kindref="member">__set_ll_local_addr</ref>(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>,<sp/>\</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;adv_link-&gt;<ref refid="structle__adv__link_1a793ffbe91120a25fcaa07f16447bd38b" kindref="member">local</ref>,<sp/>\</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv_param.<ref refid="structadvertising__param_1a2926accf26cc3601effe9fd7b1cf1f7d" kindref="member">Own_Address_Type</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1a4030be1d96427c911248855f98e4c4c6" kindref="member">ll_set_adv_local_RPA</ref>(adv_link);</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1afdb34a8f102f27fcdeb6c0800aafd5bd" kindref="member">__set_ll_adv_peer_addr</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(<ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>,<sp/></highlight><highlight class="stringliteral">&quot;__this<sp/>NULL<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((adv_param.<ref refid="structadvertising__param_1a949315221942f26eee48ba6ffe0f413f" kindref="member">Advertising_Type</ref><sp/>==<sp/><ref refid="link__layer_8h_1abc5c98fcc1211af2b80116dd6e0a035daeb0045296d8689b79f672a7f671f40c5" kindref="member">LL_ADV_DIRECT_IND_HIGH</ref>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(adv_param.<ref refid="structadvertising__param_1a949315221942f26eee48ba6ffe0f413f" kindref="member">Advertising_Type</ref><sp/>==<sp/><ref refid="link__layer_8h_1abc5c98fcc1211af2b80116dd6e0a035da2dae69e6e70cbc1c1f81b7a234fdae90" kindref="member">LL_ADV_DIRECT_IND_LOW</ref>))<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv_link-&gt;<ref refid="structle__adv__link_1a09bedc02ada9f6e950f2c133a8a1d6a9" kindref="member">peer</ref>.addr_type<sp/>=<sp/>adv_param.<ref refid="structadvertising__param_1ae9f31cf491eebd2a78688ffcba9674cc" kindref="member">Peer_Address_Type</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(adv_link-&gt;<ref refid="structle__adv__link_1a09bedc02ada9f6e950f2c133a8a1d6a9" kindref="member">peer</ref>.addr,<sp/>adv_param.<ref refid="structadvertising__param_1a8215e17cfbc2dd6f5735a76ea1b407b2" kindref="member">Peer_Address</ref>,<sp/>6);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;adv_peer_addr<sp/>:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>btctler_bd_addr_to_str(adv_link-&gt;<ref refid="structle__adv__link_1a09bedc02ada9f6e950f2c133a8a1d6a9" kindref="member">peer</ref>.addr));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1a1096378ab0449d9cfc98eac367eb82ea" kindref="member">ll_set_adv_peer_RPA</ref>(adv_link);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1aee59b22b1d02cb6984371f583696d96a" kindref="member">ll_adv_state_filter_process</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*priv,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>ble_rx<sp/>*rx,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structresolving__list" kindref="compound">resolving_list</ref><sp/>*resolving_list_t)</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//filter<sp/>policy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwhite__list" kindref="compound">white_list</ref><sp/>*white_list_t<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="link__layer_8c_1a1963ee487fe0768da940f7ec544d69b4" kindref="member">ll_error_code</ref><sp/>=<sp/><ref refid="link__layer_8h_1a16af7b253440dadd46a80a4b9fddba4da28288c8f676cdf19af12c4c78b900654" kindref="member">ADDR_PASS</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adv_param.<ref refid="structadvertising__param_1a487f492689821f1f86990c1c5e3be728" kindref="member">Advertising_Filter_Policy</ref><sp/>&amp;<sp/>0x1)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rx-&gt;type<sp/>==<sp/>SCAN_REQ)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>ScanA<sp/>is<sp/>in<sp/>white<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_FEATURES_IS_SUPPORT(LL_PRIVACY))<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hci__ll__cmds_8c_1a58e8c0445052dfd3f02f1dccdd04267f" kindref="member">le_param</ref>.<ref refid="structle__parameter_1a5bdacdddf7fdfd7b6884dca794bb3767" kindref="member">resolution_enable</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resolving_list_t<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>white_list_t<sp/>=<sp/><ref refid="ll__white__list_8c_1a5e24cc0332e7ab00aea02659589e1f29" kindref="member">ll_white_list_match</ref>(priv,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resolving_list_t-&gt;<ref refid="structresolving__list_1ab0e3085d46800278307f1ed504939f10" kindref="member">resolving_list_param</ref>.<ref refid="structresolving__list__parameter_1adfc3b04f4e4ee4f0a0734851ed57da00" kindref="member">Peer_Identity_Address_Type</ref>,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resolving_list_t-&gt;<ref refid="structresolving__list_1ab0e3085d46800278307f1ed504939f10" kindref="member">resolving_list_param</ref>.<ref refid="structresolving__list__parameter_1a1949b335de50c67f5d13cf434304a603" kindref="member">Peer_Identity_Address</ref>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>white_list_t<sp/>=<sp/><ref refid="ll__white__list_8c_1a5e24cc0332e7ab00aea02659589e1f29" kindref="member">ll_white_list_match</ref>(priv,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx-&gt;txadd,<sp/>rx-&gt;data);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(white_list_t<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;filter<sp/>policy<sp/>:<sp/>SCAN_REQ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="link__layer_8c_1a1963ee487fe0768da940f7ec544d69b4" kindref="member">ll_error_code</ref><sp/>=<sp/><ref refid="link__layer_8h_1a16af7b253440dadd46a80a4b9fddba4da4581929401308bae9c3eb0910cdd254e" kindref="member">DEVICE_FILTER_FAILED</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;white_list_t<sp/>NULL<sp/>:<sp/>DEVICE_FILTER_FAILED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adv_param.<ref refid="structadvertising__param_1a487f492689821f1f86990c1c5e3be728" kindref="member">Advertising_Filter_Policy</ref><sp/>&amp;<sp/>0x2)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rx-&gt;type<sp/>==<sp/>CONNECT_REQ)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>InitA<sp/>is<sp/>in<sp/>white<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_FEATURES_IS_SUPPORT(LL_PRIVACY))<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hci__ll__cmds_8c_1a58e8c0445052dfd3f02f1dccdd04267f" kindref="member">le_param</ref>.<ref refid="structle__parameter_1a5bdacdddf7fdfd7b6884dca794bb3767" kindref="member">resolution_enable</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resolving_list_t<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>white_list_t<sp/>=<sp/><ref refid="ll__white__list_8c_1a5e24cc0332e7ab00aea02659589e1f29" kindref="member">ll_white_list_match</ref>(priv,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resolving_list_t-&gt;<ref refid="structresolving__list_1ab0e3085d46800278307f1ed504939f10" kindref="member">resolving_list_param</ref>.<ref refid="structresolving__list__parameter_1adfc3b04f4e4ee4f0a0734851ed57da00" kindref="member">Peer_Identity_Address_Type</ref>,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resolving_list_t-&gt;<ref refid="structresolving__list_1ab0e3085d46800278307f1ed504939f10" kindref="member">resolving_list_param</ref>.<ref refid="structresolving__list__parameter_1a1949b335de50c67f5d13cf434304a603" kindref="member">Peer_Identity_Address</ref>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>white_list_t<sp/>=<sp/><ref refid="ll__white__list_8c_1a5e24cc0332e7ab00aea02659589e1f29" kindref="member">ll_white_list_match</ref>(priv,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx-&gt;txadd,<sp/>rx-&gt;data);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(white_list_t<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;filter<sp/>policy<sp/>:<sp/>CONNECT_REQ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="link__layer_8c_1a1963ee487fe0768da940f7ec544d69b4" kindref="member">ll_error_code</ref><sp/>=<sp/><ref refid="link__layer_8h_1a16af7b253440dadd46a80a4b9fddba4da4581929401308bae9c3eb0910cdd254e" kindref="member">DEVICE_FILTER_FAILED</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;white_list_t<sp/>NULL<sp/>:<sp/>DEVICE_FILTER_FAILED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structresolving__list" kindref="compound">resolving_list</ref><sp/>*<ref refid="ll__adv_8c_1adab9cd28069ba9f686ebc98a80ec1688" kindref="member">ll_adv_state_RPA_process</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>ble_rx<sp/>*rx)</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structresolving__list" kindref="compound">resolving_list</ref><sp/>*resolving_list_t<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="link__layer_8c_1a1963ee487fe0768da940f7ec544d69b4" kindref="member">ll_error_code</ref><sp/>=<sp/><ref refid="link__layer_8h_1a16af7b253440dadd46a80a4b9fddba4da28288c8f676cdf19af12c4c78b900654" kindref="member">ADDR_PASS</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_FEATURES_IS_SUPPORT(LL_PRIVACY))<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hci__ll__cmds_8c_1a58e8c0445052dfd3f02f1dccdd04267f" kindref="member">le_param</ref>.<ref refid="structle__parameter_1a5bdacdddf7fdfd7b6884dca794bb3767" kindref="member">resolution_enable</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;resolution<sp/>still<sp/>disable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//resolve<sp/>ScanA<sp/>or<sp/>InitA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resolving_list_t<sp/>=<sp/><ref refid="ll__resolve__list_8c_1a6b607a52c88f6fa64a6633ce7facfaed" kindref="member">ll_resolve_peer_addr</ref>(rx-&gt;data);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resolving_list_t<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//resolve<sp/>addr<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="link__layer_8c_1a1963ee487fe0768da940f7ec544d69b4" kindref="member">ll_error_code</ref><sp/>=<sp/><ref refid="link__layer_8h_1a16af7b253440dadd46a80a4b9fddba4dabe2f09cd0f5d1e8631e3327554028cae" kindref="member">RESOLVE_ADDR_FAIL</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;RESOLVE_ADDR_FAIL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resolving_list_t;</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1a821fc1cee24ed0a990c93941462fdae9" kindref="member">le_ll_adv_addr_process</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*priv,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>ble_rx<sp/>*rx)</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(((rx-&gt;type<sp/>==<sp/>SCAN_REQ)<sp/>||<sp/>(rx-&gt;type<sp/>==<sp/>CONNECT_REQ)),<sp/></highlight><highlight class="stringliteral">&quot;packet<sp/>filter<sp/>err<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//privacy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structresolving__list" kindref="compound">resolving_list</ref><sp/>*resolving_list_t<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>resolving_list_t<sp/>=<sp/><ref refid="ll__adv_8c_1adab9cd28069ba9f686ebc98a80ec1688" kindref="member">ll_adv_state_RPA_process</ref>(rx);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1aee59b22b1d02cb6984371f583696d96a" kindref="member">ll_adv_state_filter_process</ref>(priv,<sp/>rx,<sp/>resolving_list_t);</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1aea4509cb04cfcee0fd2dc18f3b94dc34" kindref="member">__set_ll_adv_state</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link)</highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ble_adv<sp/>adv;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>i;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>adv.channel_map<sp/>=<sp/>adv_param.<ref refid="structadvertising__param_1a5f3303d4951ba29e7d8b5408db045d7b" kindref="member">Advertising_Channel_Map</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>adv.pkt_cnt<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adv.channel_map<sp/>&amp;<sp/>BIT(i))<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.pkt_cnt++;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>u16<sp/>min,<sp/>max;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Maximum<sp/>advertising<sp/>interval<sp/>for<sp/>undirected<sp/>and<sp/>low<sp/>duty<sp/>cycle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>directed<sp/>advertising.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Range:<sp/>0x0020<sp/>to<sp/>0x4000<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default:<sp/>N<sp/>=<sp/>0x0800<sp/>(1.28<sp/>SEConds)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Time<sp/>=<sp/>N<sp/>*<sp/>0.625<sp/>mSEC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Time<sp/>Range:<sp/>20<sp/>ms<sp/>to<sp/>10.24<sp/>SEC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>min<sp/>=<sp/>adv_param.<ref refid="structadvertising__param_1adbf60ecfc2c43afe22cb69fd8981d532" kindref="member">Advertising_Interval_Max</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>max<sp/>=<sp/>adv_param.<ref refid="structadvertising__param_1abab8370e9815e61ae00bf08104800936" kindref="member">Advertising_Interval_Min</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>adv.filter_policy<sp/>=<sp/>adv_param.<ref refid="structadvertising__param_1a487f492689821f1f86990c1c5e3be728" kindref="member">Advertising_Filter_Policy</ref>;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(adv_param.<ref refid="structadvertising__param_1a949315221942f26eee48ba6ffe0f413f" kindref="member">Advertising_Type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="link__layer_8h_1abc5c98fcc1211af2b80116dd6e0a035daf13517649e44e8e5775b245f6369a30a" kindref="member">LL_ADV_IND</ref>:</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.interval<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>min;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.pdu_interval<sp/><sp/><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.adv_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ADV_IND;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="link__layer_8h_1abc5c98fcc1211af2b80116dd6e0a035daeb0045296d8689b79f672a7f671f40c5" kindref="member">LL_ADV_DIRECT_IND_HIGH</ref>:<sp/><sp/><sp/></highlight><highlight class="comment">//exit<sp/>1.28s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.interval<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.pdu_interval<sp/><sp/><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.adv_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ADV_DIRECT_IND;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>Advertising_Filter_Policy<sp/>parameter<sp/>shall<sp/>be<sp/>ignored<sp/>when<sp/>directed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advertising<sp/>is<sp/>enabled.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.filter_policy<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TO*DO<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1ac96769e6983f0168bf9ba6e4f1243f8f" kindref="member">ll_adv_timeout_start</ref>(adv_link,<sp/>1280);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ll_adv_timeout_start(link,<sp/>21280);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//only<sp/>for<sp/>ADV_DIRECT_IND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1afdb34a8f102f27fcdeb6c0800aafd5bd" kindref="member">__set_ll_adv_peer_addr</ref>(adv_link);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="link__layer_8h_1abc5c98fcc1211af2b80116dd6e0a035daca0345f35cebefc7618c959f04f0fa39" kindref="member">LL_ADV_SCAN_IND</ref>:</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//not<sp/>be<sp/>set<sp/>to<sp/>less<sp/>than<sp/>100ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>(min<sp/>&lt;<sp/>0xA0)<sp/>?<sp/>0xA0<sp/>:<sp/>min;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>(max<sp/>&lt;<sp/>0xA0)<sp/>?<sp/>0xA0<sp/>:<sp/>max;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.interval<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>min;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.pdu_interval<sp/><sp/><sp/>=<sp/>2;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//us</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.adv_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ADV_SCAN_IND;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="link__layer_8h_1abc5c98fcc1211af2b80116dd6e0a035da106f2d480dfc2e7d3a112c5def5b6f6c" kindref="member">LL_ADV_NONCONN_IND</ref>:</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>min<sp/>=<sp/>(min<sp/>&lt;<sp/>0xA0)<sp/>?<sp/>0xA0<sp/>:<sp/>min;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>max<sp/>=<sp/>(max<sp/>&lt;<sp/>0xA0)<sp/>?<sp/>0xA0<sp/>:<sp/>max;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.interval<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>min;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CORE_V42_PHY_DEBUG_EN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.pdu_interval<sp/><sp/><sp/>=<sp/>5;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>slot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.pdu_interval<sp/><sp/><sp/>=<sp/>1;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>slot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.adv_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ADV_NONCONN_IND;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="link__layer_8h_1abc5c98fcc1211af2b80116dd6e0a035da2dae69e6e70cbc1c1f81b7a234fdae90" kindref="member">LL_ADV_DIRECT_IND_LOW</ref>:</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.interval<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>max;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.pdu_interval<sp/><sp/><sp/>=<sp/>3;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//us</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.adv_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ADV_DIRECT_IND;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>Advertising_Filter_Policy<sp/>parameter<sp/>shall<sp/>be<sp/>ignored<sp/>when<sp/>directed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advertising<sp/>is<sp/>enabled.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.filter_policy<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//only<sp/>for<sp/>ADV_DIRECT_IND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1afdb34a8f102f27fcdeb6c0800aafd5bd" kindref="member">__set_ll_adv_peer_addr</ref>(adv_link);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;adv<sp/>type:<sp/>0x%x&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.adv_type);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;adv<sp/>interval<sp/>(N*625us):<sp/>0x%x&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>adv.interval);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;adv<sp/>pdu<sp/>interval<sp/>:<sp/>0x%x&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.pdu_interval);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;adv<sp/>filter<sp/>policy:<sp/>0x%x&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.filter_policy);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;adv<sp/>channel<sp/>map:<sp/>0x%x&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.channel_map);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;adv<sp/>pkt_cnt<sp/>:<sp/>0x%x&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adv.pkt_cnt);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1a59c6d028a82fcf9959585a47f6dffe90" kindref="member">__set_ll_adv_local_addr</ref>(adv_link);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>advertising<sp/>is<sp/>currently<sp/>enabled,<sp/>the<sp/>Controller<sp/>shall<sp/>use<sp/>the<sp/>new<sp/>data<sp/>in<sp/>subsequent<sp/>advertising<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adv_data.<ref refid="structadvertising__data_1ad016ee363d90119906b71bd4387cf245" kindref="member">length</ref>)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;Adv<sp/>data<sp/>:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info_hexdump(adv_data.<ref refid="structadvertising__data_1a5b5a28fc73abc664641e7c7e60e85c36" kindref="member">data</ref>,<sp/>adv_data.<ref refid="structadvertising__data_1ad016ee363d90119906b71bd4387cf245" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ble_ops-&gt;ioctrl(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>,<sp/>BLE_SET_ADV_DATA,<sp/>&amp;adv_data);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>advertising<sp/>is<sp/>currently<sp/>enabled,<sp/>the<sp/>Controller<sp/>shall<sp/>use<sp/>the<sp/>new<sp/>data<sp/>in<sp/>subsequent<sp/>advertising<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scan_resp_data.<ref refid="structscan__response_1a7360e25049f28935dd0b63914adf5878" kindref="member">length</ref>)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;Scan<sp/>rsp<sp/>data<sp/>:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info_hexdump(scan_resp_data.<ref refid="structscan__response_1ae5e2a6a3fc40b7bfb6b43cd1fb1f4101" kindref="member">data</ref>,<sp/>scan_resp_data.<ref refid="structscan__response_1a7360e25049f28935dd0b63914adf5878" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ble_ops-&gt;ioctrl(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>,<sp/>BLE_SET_SCAN_RSP_DATA,<sp/>&amp;scan_resp_data);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>__ble_ops-&gt;advertising(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>,<sp/>&amp;adv);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;hardware<sp/>status<sp/>:<sp/>0x%x&quot;</highlight><highlight class="normal">,<sp/>status);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(status)<sp/>?<sp/>HARDWARE_FAILURE<sp/>:<sp/>SUCCESS;</highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1a4cb9fde0ff3c4da01f3deb331a7c5e0f" kindref="member">adv_rx_scan_req</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>ble_rx<sp/>*rx)</highlight></codeline>
<codeline lineno="459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//advertising<sp/>privacy<sp/>&amp;<sp/>filter<sp/>policy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1a821fc1cee24ed0a990c93941462fdae9" kindref="member">le_ll_adv_addr_process</ref>(adv_link,<sp/>rx);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ScanA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="link__layer_8h_1ab310e89a52d02734649c1a685e9cac6b" kindref="member">ADDR_IS_FAIL</ref>())<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;ADV<sp/>RPA<sp/>:<sp/>[ScanA]<sp/>Resolve<sp/>Fail<sp/>:<sp/>0x%x&quot;</highlight><highlight class="normal">,<sp/><ref refid="link__layer_8c_1a1963ee487fe0768da940f7ec544d69b4" kindref="member">ll_error_code</ref>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ScanA<sp/>resolve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>__ble_ops-&gt;ioctrl(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>,<sp/>BLE_SET_RPA_RESOLVE_RESULT,<sp/>rx,<sp/><ref refid="link__layer_8h_1ab310e89a52d02734649c1a685e9cac6b" kindref="member">ADDR_IS_FAIL</ref>());</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1ad7063b60ecd1b5eb0260007b0581c804" kindref="member">adv_rx_conn_req</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>ble_rx<sp/>*rx)</highlight></codeline>
<codeline lineno="474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*<ref refid="structle__link" kindref="compound">le_link</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Enter<sp/>conn<sp/>state<sp/>then<sp/>caculate<sp/>RPA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>le_link<sp/>=<sp/><ref refid="link__layer_8c_1a500af8812cc7e935661ef18be52a97d1" kindref="member">ll_create_conn_link</ref>(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>,<sp/>&amp;adv_link-&gt;<ref refid="structle__adv__link_1a793ffbe91120a25fcaa07f16447bd38b" kindref="member">local</ref>,<sp/><ref refid="ll__defines_8h_1a00dd0c529d5c67192b5e83752bd58a16" kindref="member">BLE_SLAVE</ref>,<sp/>rx-&gt;txadd,<sp/>rx-&gt;data,<sp/>rx-&gt;data<sp/>+<sp/>12);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>log_info_hexdump(rx-&gt;data,<sp/>rx-&gt;len);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//advertising<sp/>privacy<sp/>&amp;<sp/>filter<sp/>policy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1a821fc1cee24ed0a990c93941462fdae9" kindref="member">le_ll_adv_addr_process</ref>(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>,<sp/>rx);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//InitA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="link__layer_8h_1ab310e89a52d02734649c1a685e9cac6b" kindref="member">ADDR_IS_FAIL</ref>())<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;ADV<sp/>RPA<sp/>:<sp/>[InitA]<sp/>Resolve<sp/>Fail<sp/>:<sp/>0x%x&quot;</highlight><highlight class="normal">,<sp/><ref refid="link__layer_8c_1a1963ee487fe0768da940f7ec544d69b4" kindref="member">ll_error_code</ref>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="link__layer_8c_1a95a914a1e7d9133f5fb1d9108937a881" kindref="member">ll_close_conn_link</ref>(le_link);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1a75a0710e7acb1c764fc18ef8e27c1a2a" kindref="member">ll_adv_resume</ref>();</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//InitA<sp/>resolve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>__ble_ops-&gt;ioctrl(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>,<sp/>BLE_SET_RPA_RESOLVE_RESULT,<sp/>rx,<sp/><ref refid="link__layer_8h_1ab310e89a52d02734649c1a685e9cac6b" kindref="member">ADDR_IS_FAIL</ref>());</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1a8ed1d677950088b6f8daa733feb57f4d" kindref="member">adv_rx_probe_handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*priv,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>ble_rx<sp/>*rx)</highlight></codeline>
<codeline lineno="496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>LE_ROLES_IS_SUPPORT_OPTIMIZE(LE_ADV);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*)priv;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(rx-&gt;type)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SCAN_REQ:</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1a4cb9fde0ff3c4da01f3deb331a7c5e0f" kindref="member">adv_rx_scan_req</ref>(adv_link,<sp/>rx);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;SCAN_REQ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CONNECT_REQ:</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1ad7063b60ecd1b5eb0260007b0581c804" kindref="member">adv_rx_conn_req</ref>(adv_link,<sp/>rx);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;CONNECT_REQ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//empty<sp/>packet<sp/>not<sp/>notify<sp/>upper<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RX_PACKET_IS_VALID(rx))<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//resume<sp/>ll<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>log_info(&quot;LL<sp/>resume&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="link__layer_8c_1af5e4ac77575bf70aae9293b0c2925f61" kindref="member">ll_thread_resume</ref>();</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1a429d5c78945c1503f4fbfa8134f999da" kindref="member">adv_rx_conn_req_post</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*link,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>ble_rx<sp/>*rx)</highlight></codeline>
<codeline lineno="521"><highlight class="normal">{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link<sp/>=<sp/><ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>-&gt;adv_link;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//close<sp/>Adv<sp/>link</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1ade113f482e2a470d1c732e11753d21ab" kindref="member">ll_adv_close</ref>();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//open<sp/>Conn<sp/>link</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="link__layer_8c_1a076ebfdffad3a441785c9ab717d26551" kindref="member">ll_create_conn_link_post</ref>(link);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1a252819a22bedf72c4efa291528775fc4" kindref="member">slave_rx_conn_post_handler</ref>(link,<sp/>rx);</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1a6bef65fe1321518196f8cb957d3729b0" kindref="member">__adv_rx_post_handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*priv,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>ble_rx<sp/>*rx)</highlight></codeline>
<codeline lineno="537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(rx-&gt;type)<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SCAN_REQ:</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;Post<sp/>SCAN_REQ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CONNECT_REQ:</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;Post<sp/>CONNECT_REQ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1a429d5c78945c1503f4fbfa8134f999da" kindref="member">adv_rx_conn_req_post</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__link" kindref="compound">le_link</ref><sp/>*)priv,<sp/>rx);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1a6bc19727c724f5bd429bd5f9421b7e95" kindref="member">adv_rx_post_handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_ROLES_IS_SUPPORT(LE_ADV)<sp/>==<sp/>0x0)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link<sp/>=<sp/><ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>-&gt;adv_link;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adv_link<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref><sp/>=<sp/>adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>__ble_ops-&gt;upload_data(hw,<sp/><ref refid="ll__adv_8c_1a6bef65fe1321518196f8cb957d3729b0" kindref="member">__adv_rx_post_handler</ref>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>adv_rx_empty;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>__ble_ops-&gt;ioctrl(hw,<sp/>BLE_GET_RX_EMPTY,<sp/>&amp;adv_rx_empty);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>adv_rx_empty;</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="comment">//Bottom<sp/>upload<sp/>from<sp/>Baseband<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ble_handler<sp/><ref refid="ll__adv_8c_1ae28d1e9bac11d2e921e6754454f9239f" kindref="member">adv_handler</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>.rx_probe_handler<sp/><sp/><sp/>=<sp/><ref refid="ll__adv_8c_1a8ed1d677950088b6f8daa733feb57f4d" kindref="member">adv_rx_probe_handler</ref>,</highlight></codeline>
<codeline lineno="584"><highlight class="normal">};</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1a334fc05d856811c324fa2490c78ad795" kindref="member">ll_adv_set_params</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8<sp/>*data)</highlight></codeline>
<codeline lineno="587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_ROLES_IS_SUPPORT(LE_ADV)<sp/>==<sp/>0x0)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>COMMAND_DISALLOWED;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1ad19204de0002c264867d785c01789725" kindref="member">ll_adv_init</ref>();</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link<sp/>=<sp/><ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>-&gt;adv_link;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>Host<sp/>shall<sp/>not<sp/>issue<sp/>this<sp/>command<sp/>when<sp/>advertising<sp/>is<sp/>enabled<sp/>in<sp/>the<sp/>*Controller;<sp/>if<sp/>it<sp/>is<sp/>the<sp/>Command<sp/>Disallowed<sp/>error<sp/>code<sp/>shall<sp/>be<sp/>used.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>-&gt;enable)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;The<sp/>Host<sp/>shall<sp/>not<sp/>issue<sp/>this<sp/>command<sp/>when<sp/>advertising<sp/>is<sp/>enabled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>COMMAND_DISALLOWED;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy((u8<sp/>*)&amp;adv_param,<sp/>data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structadvertising__param" kindref="compound">advertising_param</ref>));</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1ae84ca2bfcdcdf222ba2f7b3e7ce33b61" kindref="member">debug_adv_info</ref>();</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SUCCESS;</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1a62bc386d445c6bb3491e3a7742ee3a8d" kindref="member">ll_adv_set_adv_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8<sp/>*data)</highlight></codeline>
<codeline lineno="612"><highlight class="normal">{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_ROLES_IS_SUPPORT(LE_ADV)<sp/>==<sp/>0x0)<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>COMMAND_DISALLOWED;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1ad19204de0002c264867d785c01789725" kindref="member">ll_adv_init</ref>();</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link<sp/>=<sp/><ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>-&gt;adv_link;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>memset((u8<sp/>*)&amp;adv_data,<sp/>0x0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structadvertising__data" kindref="compound">advertising_data</ref>));</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>adv_data.<ref refid="structadvertising__data_1ad016ee363d90119906b71bd4387cf245" kindref="member">length</ref><sp/>=<sp/>data[0];</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy((u8<sp/>*)&amp;adv_data.<ref refid="structadvertising__data_1a5b5a28fc73abc664641e7c7e60e85c36" kindref="member">data</ref>,<sp/>&amp;data[1],<sp/>data[0]);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;Adv<sp/>data<sp/>:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info_hexdump(adv_data.<ref refid="structadvertising__data_1a5b5a28fc73abc664641e7c7e60e85c36" kindref="member">data</ref>,<sp/>adv_data.<ref refid="structadvertising__data_1ad016ee363d90119906b71bd4387cf245" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>advertising<sp/>is<sp/>currently<sp/>enabled,<sp/>the<sp/>Controller<sp/>shall<sp/>use<sp/>the<sp/>new<sp/>data<sp/>in<sp/>subsequent<sp/>advertising<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adv_link<sp/>&amp;&amp;<sp/>adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>)<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ble_ops-&gt;ioctrl(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>,<sp/>BLE_SET_ADV_DATA,<sp/>data);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SUCCESS;</highlight></codeline>
<codeline lineno="635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1a2d83abd546511aaf56f0428609f0e571" kindref="member">ll_adv_set_scan_rsp_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8<sp/>*data)</highlight></codeline>
<codeline lineno="638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_ROLES_IS_SUPPORT(LE_ADV)<sp/>==<sp/>0x0)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>COMMAND_DISALLOWED;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1ad19204de0002c264867d785c01789725" kindref="member">ll_adv_init</ref>();</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link<sp/>=<sp/><ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>-&gt;adv_link;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>memset((u8<sp/>*)&amp;scan_resp_data,<sp/>0x0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structscan__response" kindref="compound">scan_response</ref>));</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>scan_resp_data.<ref refid="structscan__response_1a7360e25049f28935dd0b63914adf5878" kindref="member">length</ref><sp/>=<sp/>data[0];</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy((u8<sp/>*)&amp;scan_resp_data.<ref refid="structscan__response_1ae5e2a6a3fc40b7bfb6b43cd1fb1f4101" kindref="member">data</ref>,<sp/>&amp;data[1],<sp/>data[0]);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;Scan<sp/>rsp<sp/>data<sp/>:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info_hexdump(scan_resp_data.<ref refid="structscan__response_1ae5e2a6a3fc40b7bfb6b43cd1fb1f4101" kindref="member">data</ref>,<sp/>scan_resp_data.<ref refid="structscan__response_1a7360e25049f28935dd0b63914adf5878" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>advertising<sp/>is<sp/>currently<sp/>enabled,<sp/>the<sp/>Controller<sp/>shall<sp/>use<sp/>the<sp/>new<sp/>data<sp/>in<sp/>subsequent<sp/>advertising<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adv_link<sp/>&amp;&amp;<sp/>adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>)<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ble_ops-&gt;ioctrl(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>,<sp/>BLE_SET_SCAN_RSP_DATA,<sp/>data);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SUCCESS;</highlight></codeline>
<codeline lineno="662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1a75a0710e7acb1c764fc18ef8e27c1a2a" kindref="member">ll_adv_resume</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;ll_adv_resume&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link<sp/>=<sp/><ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>-&gt;adv_link;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref><sp/>=<sp/>__ble_ops-&gt;open();</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;adv<sp/>hw<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CONTROLLER_BUSY;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>__ble_ops-&gt;handler_register(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>,<sp/>adv_link,<sp/>&amp;<ref refid="ll__adv_8c_1ae28d1e9bac11d2e921e6754454f9239f" kindref="member">adv_handler</ref>);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_FEATURES_IS_SUPPORT(LL_PRIVACY))<sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ble_ops-&gt;ioctrl(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>,<sp/>BLE_SET_PRIVACY_ENABLE,<sp/><ref refid="hci__ll__cmds_8c_1a58e8c0445052dfd3f02f1dccdd04267f" kindref="member">le_param</ref>.<ref refid="structle__parameter_1a5bdacdddf7fdfd7b6884dca794bb3767" kindref="member">resolution_enable</ref>);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/><ref refid="ll__adv_8c_1aea4509cb04cfcee0fd2dc18f3b94dc34" kindref="member">__set_ll_adv_state</ref>(adv_link);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;Error<sp/>code<sp/>:<sp/>0x%x&quot;</highlight><highlight class="normal">,<sp/>status);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>-&gt;enable<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SUCCESS;</highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1a6b4652354647bc2c93bec893b31eb4fe" kindref="member">__adv_resume</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlink__task" kindref="compound">link_task</ref><sp/>*task)</highlight></codeline>
<codeline lineno="697"><highlight class="normal">{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;Resume<sp/>__this<sp/>Null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link<sp/>=<sp/><ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>-&gt;adv_link;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adv_link<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;Resume<sp/>adv<sp/>link<sp/>Null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;Resume&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>__ble_ops-&gt;resume(adv_link-&gt;hw);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>__this-&gt;state<sp/>=<sp/>LINK_STA_OPEN;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1ad53549d8953674b854638af7112069c8" kindref="member">__adv_suspend</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlink__task" kindref="compound">link_task</ref><sp/>*task)</highlight></codeline>
<codeline lineno="719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;Suspend<sp/>__this<sp/>Null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link<sp/>=<sp/><ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>-&gt;adv_link;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adv_link<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;Suspend<sp/>adv<sp/>link<sp/>Null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;Suspend&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>__ble_ops-&gt;suspend(adv_link-&gt;hw);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>__this-&gt;state<sp/>=<sp/>LINK_STA_SUSPEND;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal">u32<sp/><ref refid="ll__adv_8c_1a0aaf2718f7f155b124215dc4264165d6" kindref="member">ble_next_run_slot</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>ble_hw<sp/>*<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1aa9b5dc1c47d03f356c940bf12f74ac91" kindref="member">__adv_next_run_slot</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlink__task" kindref="compound">link_task</ref><sp/>*task)</highlight></codeline>
<codeline lineno="743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;Suspend<sp/>__this<sp/>Null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link<sp/>=<sp/><ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>-&gt;adv_link;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adv_link<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;Suspend<sp/>adv<sp/>link<sp/>Null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1a0aaf2718f7f155b124215dc4264165d6" kindref="member">ble_next_run_slot</ref>(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>);</highlight></codeline>
<codeline lineno="757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlink__task__ops" kindref="compound">link_task_ops</ref><sp/>ll_adv_task_ops<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structlink__task__ops_1ab11baafadfa5a047c4029137f84bcf47" kindref="member">resume</ref><sp/><sp/>=<sp/><ref refid="ll__adv_8c_1a6b4652354647bc2c93bec893b31eb4fe" kindref="member">__adv_resume</ref>,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>.suspend<sp/>=<sp/><ref refid="ll__adv_8c_1ad53549d8953674b854638af7112069c8" kindref="member">__adv_suspend</ref>,</highlight></codeline>
<codeline lineno="762"><highlight class="normal">};</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1a028afa569686bbbc34a6386ade17c6c5" kindref="member">__set_ll_adv_link_task</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlink__task" kindref="compound">link_task</ref><sp/>*task)</highlight></codeline>
<codeline lineno="766"><highlight class="normal">{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>task-&gt;<ref refid="structlink__task_1a73bfee891fc184be6011ada115f6435c" kindref="member">type</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="link__task_8h_1a2d5492e116eebd5075f247d21fb9db26a56d4643441210095053c6cda36cce90f" kindref="member">LINK_TYPE_PAGE</ref>;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>task-&gt;<ref refid="structlink__task_1a8b10d7ac04a0bed40282ab68c9233908" kindref="member">run_slot</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>task-&gt;<ref refid="structlink__task_1ab3d2846cf2eb178d91244f2711e9ebbb" kindref="member">run_num</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>task-&gt;<ref refid="structlink__task_1a96d71ceae3b72bfed4e55795e0eab1b4" kindref="member">priority</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>task-&gt;<ref refid="structlink__task_1ac7d72b2a8690b0122011de6daf27f88b" kindref="member">ops</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;<ref refid="ll__adv_8c_1ace4207a06571d703c0aed28a8693328c" kindref="member">ll_adv_task_ops</ref>;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>task-&gt;<ref refid="structlink__task_1a3938e3dcf2a6612cbc8bc4088c679110" kindref="member">sta_attribute</ref><sp/>=<sp/><ref refid="link__task_8h_1a73c53bacb25588538843a1dcfe5f382ba75b441bcb01ef5b9e61547b34a5f9f61" kindref="member">LINK_STA_ATTRIBUTE_IDLE</ref>;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//disable<sp/>idle<sp/>in<sp/>page<sp/>&amp;<sp/>con</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="link__task_8h_1abad4a4ff8d690aa2776aafb8099cf140" kindref="member">link_task_idle_disable</ref>();</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="link__task_8h_1a405812a1f39709a740cbe1fc71aab2c6" kindref="member">link_task_add</ref>(task);</highlight></codeline>
<codeline lineno="778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1ad856172178e2cbdda13ffe00f4138f91" kindref="member">ll_adv_open</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="782"><highlight class="normal">{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_ROLES_IS_SUPPORT(LE_ADV)<sp/>==<sp/>0x0)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;Not<sp/>support&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>COMMAND_DISALLOWED;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1ad19204de0002c264867d785c01789725" kindref="member">ll_adv_init</ref>();</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;ll_adv_open&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link<sp/>=<sp/><ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>-&gt;adv_link;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adv_link)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;adv<sp/>link<sp/>already<sp/>open&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>COMMAND_DISALLOWED;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>adv_link<sp/>=<sp/>__bt_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref>));</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adv_link<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;adv<sp/>link<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>COMMAND_DISALLOWED;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>-&gt;adv_link<sp/>=<sp/><ref refid="structll__adv__hdl_1ad48c89258997e283d9055438c08edc20" kindref="member">adv_link</ref>;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref><sp/>=<sp/>__ble_ops-&gt;open();</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ASSERT(link-&gt;hw<sp/>!=<sp/>NULL,<sp/>&quot;%s/n&quot;,<sp/>&quot;hw<sp/>open<sp/>error&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;adv<sp/>hw<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CONTROLLER_BUSY;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>__ble_ops-&gt;handler_register(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>,<sp/>adv_link,<sp/>&amp;<ref refid="ll__adv_8c_1ae28d1e9bac11d2e921e6754454f9239f" kindref="member">adv_handler</ref>);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_FEATURES_IS_SUPPORT(LL_PRIVACY))<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ble_ops-&gt;ioctrl(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>,<sp/>BLE_SET_PRIVACY_ENABLE,<sp/><ref refid="hci__ll__cmds_8c_1a58e8c0445052dfd3f02f1dccdd04267f" kindref="member">le_param</ref>.<ref refid="structle__parameter_1a5bdacdddf7fdfd7b6884dca794bb3767" kindref="member">resolution_enable</ref>);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/><ref refid="ll__adv_8c_1aea4509cb04cfcee0fd2dc18f3b94dc34" kindref="member">__set_ll_adv_state</ref>(adv_link);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)<sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;Error<sp/>code<sp/>:<sp/>0x%x&quot;</highlight><highlight class="normal">,<sp/>status);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>__this-&gt;state<sp/>=<sp/>LINK_STA_WAIT_OPEN;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>__set_ll_adv_link_task(&amp;__this-&gt;task);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>-&gt;enable<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SUCCESS;</highlight></codeline>
<codeline lineno="838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1ade113f482e2a470d1c732e11753d21ab" kindref="member">ll_adv_close</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="841"><highlight class="normal">{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LE_ROLES_IS_SUPPORT(LE_ADV)<sp/>==<sp/>0x0)<sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;Not<sp/>support&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>COMMAND_DISALLOWED;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;LL<sp/>Adv<sp/>already<sp/>destroy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SUCCESS;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link<sp/>=<sp/><ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>-&gt;adv_link;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adv_link<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;LL<sp/>Adv<sp/>link<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UNKNOWN_CONNECTION_IDENTIFIER;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>log_info(</highlight><highlight class="stringliteral">&quot;ll_adv_close&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//close<sp/>the<sp/>hardware<sp/>first<sp/>to<sp/>avoid<sp/>race<sp/>condition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>)<sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ble_ops-&gt;close(adv_link-&gt;<ref refid="structle__adv__link_1a9e4566deccbc5cb2383f5a63139ff5ef" kindref="member">hw</ref>);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1a2df18e672a02f34b3877a7883b24b3d5" kindref="member">ll_adv_timeout_stop</ref>(adv_link);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>__bt_free(adv_link);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>-&gt;adv_link<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>-&gt;enable<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1acc878a4c395774dd5acd4823149473bf" kindref="member">ll_adv_destroy</ref>();</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SUCCESS;</highlight></codeline>
<codeline lineno="878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ll_post_callback_t<sp/>adv_post<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>.name<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Adv&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>.callback<sp/><sp/><sp/>=<sp/><ref refid="ll__adv_8c_1a6bc19727c724f5bd429bd5f9421b7e95" kindref="member">adv_rx_post_handler</ref>();</highlight></codeline>
<codeline lineno="884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1ad19204de0002c264867d785c01789725" kindref="member">ll_adv_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlink__layer__handle" kindref="compound">link_layer_handle</ref><sp/>*ll)</highlight></codeline>
<codeline lineno="887"><highlight class="normal">{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Dynamic<sp/>load<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>ll-&gt;adv.open<sp/><sp/><sp/><sp/>=<sp/><ref refid="ll__adv_8c_1ad856172178e2cbdda13ffe00f4138f91" kindref="member">ll_adv_open</ref>();</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>ll-&gt;adv.close<sp/><sp/><sp/>=<sp/><ref refid="ll__adv_8c_1ade113f482e2a470d1c732e11753d21ab" kindref="member">ll_adv_close</ref>();</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>list_add_tail(&amp;adv_post-&gt;entry,<sp/>&amp;ll-&gt;post_callback_head);</highlight></codeline>
<codeline lineno="893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*<ref refid="ll__adv_8c_1afbf3a6cf5b8ee0bfd2b3e63a4af36c66" kindref="member">ll_adv_link_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="899"><highlight class="normal">{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;LL<sp/>Adv<sp/>not<sp/>init<sp/>yet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>-&gt;adv_link;</highlight></codeline>
<codeline lineno="906"><highlight class="normal">}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ll__adv_8c_1a3a20204536d2416ec4733f134d946cdd" kindref="member">ll_adv_local_addr_refresh</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="909"><highlight class="normal">{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;LL<sp/>Adv<sp/>not<sp/>init<sp/>yet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>COMMAND_DISALLOWED;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structle__adv__link" kindref="compound">le_adv_link</ref><sp/>*adv_link<sp/>=<sp/><ref refid="ll__adv_8c_1ad223350d80db21fa8b721107cd1f6442" kindref="member">__this</ref>-&gt;adv_link;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adv_link<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_error(</highlight><highlight class="stringliteral">&quot;LL<sp/>Adv<sp/>link<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>COMMAND_DISALLOWED;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ll__adv_8c_1a59c6d028a82fcf9959585a47f6dffe90" kindref="member">__set_ll_adv_local_addr</ref>(adv_link);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SUCCESS;</highlight></codeline>
<codeline lineno="925"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/data/bingquan/repo/repo_adapter/adapter_sdk/lib/btctrler/BLE_v2/ll_adv.c"/>
  </compounddef>
</doxygen>
